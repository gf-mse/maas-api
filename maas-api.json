{
  "doc": "MAAS API",
  "resources": [
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "details",
            "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
            "op": "details",
            "restful": false
          },
          {
            "method": "GET",
            "name": "power_parameters",
            "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
            "op": "power_parameters",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a region controller\n\nUpdates a region controller with the given system_id.\n\n:param description: Optional.  The new description for\nthis given region controller.\n:type description: String\n\n :param power_type: Optional.  The new power type for\nthis region controller. If you use the default value, power_parameters\nwill be set to the empty string.  Available to admin users.  See the\n`Power types`_ section for a list of the available power types.\n:type power_type: String\n\n :param power_parameters_skip_check: Optional.  Whether\nor not the new power parameters for this region controller should be\nchecked against the expected power parameters for the region\ncontroller's power type ('true' or 'false').  The default is 'false'.\n:type power_parameters_skip_check: Boolean\n\n :param zone: Optional.  Name of a valid physical zone\nin which to place this region controller.\n:type zone: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a region controller\n\nDeletes a region controller with the given system_id.\n\nA region controller cannot be deleted if it hosts pod virtual machines.\nUse `force` to override this behavior. Forcing deletion will also\nremove hosted pods.\n\n:param force: Optional.  Tells MAAS to override\ndisallowing deletion of region controllers that host pod virtual\nmachines.\n:type force: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual region controller.\n\nThe region controller is identified by its system_id.",
        "name": "RegionControllerHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/regioncontrollers/{system_id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/regioncontrollers/{system_id}/"
      },
      "name": "RegionControllerHandler"
    },
    {
      "anon": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "GET",
            "name": "is_action_in_progress",
            "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_action_in_progress",
            "restful": false
          }
        ],
        "doc": "Anonymous access to Nodes.",
        "name": "AnonNodesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/nodes/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
      },
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_zone",
            "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
            "op": "set_zone",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all region controllers in MAAS.",
        "name": "RegionControllersHandler",
        "params": [],
        "path": "/MAAS/api/2.0/regioncontrollers/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/regioncontrollers/"
      },
      "name": "RegionControllersHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "details",
            "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
            "op": "details",
            "restful": false
          },
          {
            "method": "GET",
            "name": "power_parameters",
            "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
            "op": "power_parameters",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_workload_annotations",
            "doc": "Set key=value data\n\nSet key=value data for the current owner.\n\nPass any key=value form data to this method to add, modify, or remove.\nA key is removed when the value for that key is set to an empty string.\n\nThis operation will not remove any previous keys unless explicitly\npassed with an empty string. All workload annotations are removed when\nthe machine is no longer allocated to a user.\n\n:param key: Required.  ``key`` can be any string value.\n:type key: String\n\n ",
            "op": "set_workload_annotations",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_owner_data",
            "doc": "Deprecated, use set-workload-annotations.\n\nDeprecated, use set-workload-annotations instead.\n\n",
            "op": "set_owner_data",
            "restful": false
          },
          {
            "method": "POST",
            "name": "restore_networking_configuration",
            "doc": "Reset networking options\n\nRestore the networking options of a device with the given\nsystem_id to default values.\n\n",
            "op": "restore_networking_configuration",
            "restful": false
          },
          {
            "method": "POST",
            "name": "restore_default_configuration",
            "doc": "Reset device configuration\n\nRestore the configuration options of a device with the\ngiven system_id to default values.\n\n",
            "op": "restore_default_configuration",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a device\n\nUpdate a device with a given system_id.\n\n:param hostname: Optional.  The hostname for this\ndevice.\n:type hostname: String\n\n :param description: Optional.  The optional description\nfor this machine.\n:type description: String\n\n :param domain: Optional.  The domain for this device.\n:type domain: String\n\n :param parent: Optional.  Optional system_id to\nindicate this device's parent. If the parent is already set and this\nparameter is omitted, the parent will be unchanged.\n:type parent: String\n\n :param zone: Optional.  Name of a valid physical zone\nin which to place this node.\n:type zone: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a device\n\nDelete a device with the given system_id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual device.\n\nThe device is identified by its system_id.",
        "name": "DeviceHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/devices/{system_id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/devices/{system_id}/"
      },
      "name": "DeviceHandler"
    },
    {
      "anon": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "GET",
            "name": "is_action_in_progress",
            "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_action_in_progress",
            "restful": false
          }
        ],
        "doc": "Anonymous access to Nodes.",
        "name": "AnonNodesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/nodes/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
      },
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_zone",
            "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
            "op": "set_zone",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a new device\n\nCreate a new device.\n\n:param hostname: Optional.  A hostname. If not given,\none will be generated.\n:type hostname: String\n\n :param description: Optional.  A optional description.\n:type description: String\n\n :param domain: Optional.  The domain of the device. If\nnot given the default domain is used.\n:type domain: String\n\n :param mac_addresses: Required.  One or more MAC\naddresses for the device.\n:type mac_addresses: String\n\n :param parent: Optional.  The system id of the parent.\n:type parent: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all the devices in the MAAS.",
        "name": "DevicesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/devices/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/devices/"
      },
      "name": "DevicesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "refresh",
            "doc": "Refresh a VM host\n\nPerforms VM host discovery and updates all discovered\ninformation and discovered machines.\n\n",
            "op": "refresh",
            "restful": false
          },
          {
            "method": "GET",
            "name": "parameters",
            "doc": "Obtain VM host parameters\n\nThis returns a VM host's configuration parameters. For some\ntypes of VM host, this will include private information such as passwords\nand secret keys.\n\nNote: This method is reserved for admin users.\n\n",
            "op": "parameters",
            "restful": false
          },
          {
            "method": "POST",
            "name": "compose",
            "doc": "Compose a virtual machine on the host.\n\nCompose a new machine from a VM host.\n\n:param cores: Optional.  The minimum number of CPU cores.\n:type cores: Int\n\n :param memory: Optional.  The minimum amount of memory,\nspecified in MiB (e.g. 2 MiB == 2*1024*1024).\n:type memory: Int\n\n :param hugepages_backed: Optional.  Whether to request\nhugepages backing for the machine.\n:type hugepages_backed: Boolean\n\n :param pinned_cores: Optional.  List of host CPU cores\nto pin the VM to. If this is passed, the \"cores\" parameter is ignored.\n:type pinned_cores: Int\n\n :param cpu_speed: Optional.  The minimum CPU speed,\nspecified in MHz.\n:type cpu_speed: Int\n\n :param architecture: Optional.  The architecture of\nthe new machine (e.g. amd64). This must be an architecture the VM host\nsupports.\n:type architecture: String\n\n :param storage: Optional.  A list of storage\nconstraint identifiers in the form ``label:size(tag,tag,...),\nlabel:size(tag,tag,...)``. For more information please see the CLI\nVM host management page of the official MAAS documentation.\n:type storage: String\n\n :param interfaces: Optional.  A\nlabeled constraint map associating constraint labels with desired\ninterface properties. MAAS will assign interfaces that match the\ngiven interface properties.\n\nFormat: ``label:key=value,key=value,...``\n\nKeys:\n\n- ``id``: Matches an interface with the specific id\n- ``fabric``: Matches an interface attached to the specified fabric.\n- ``fabric_class``: Matches an interface attached to a fabric\n  with the specified class.\n- ``ip``: Matches an interface whose VLAN is on the subnet implied by\n  the given IP address, and allocates the specified IP address for\n  the machine on that interface (if it is available).\n- ``mode``: Matches an interface with the specified mode. (Currently,\n  the only supported mode is \"unconfigured\".)\n- ``name``: Matches an interface with the specified name.\n  (For example, \"eth0\".)\n- ``hostname``: Matches an interface attached to the node with\n  the specified hostname.\n- ``subnet``: Matches an interface attached to the specified subnet.\n- ``space``: Matches an interface attached to the specified space.\n- ``subnet_cidr``: Matches an interface attached to the specified\n  subnet CIDR. (For example, \"192.168.0.0/24\".)\n- ``type``: Matches an interface of the specified type. (Valid\n  types: \"physical\", \"vlan\", \"bond\", \"bridge\", or \"unknown\".)\n- ``vlan``: Matches an interface on the specified VLAN.\n- ``vid``: Matches an interface on a VLAN with the specified VID.\n- ``tag``: Matches an interface tagged with the specified tag.\n:type interfaces: String\n\n :param hostname: Optional.  The hostname of the newly\ncomposed machine.\n:type hostname: String\n\n :param domain: Optional.  The ID of the domain in which\nto put the newly composed machine.\n:type domain: Int\n\n :param zone: Optional.  The ID of the zone in which to\nput the newly composed machine.\n:type zone: Int\n\n :param pool: Optional.  The ID of the pool in which to\nput the newly composed machine.\n:type pool: Int\n\n ",
            "op": "compose",
            "restful": false
          },
          {
            "method": "POST",
            "name": "add_tag",
            "doc": "Add a tag to a VM host\n\nAdds a tag to a given VM host.\n\n:param tag: Required.  The tag to add.\n:type tag: String\n\n ",
            "op": "add_tag",
            "restful": false
          },
          {
            "method": "POST",
            "name": "remove_tag",
            "doc": "Remove a tag from a VM host\n\nRemoves a given tag from a VM host.\n\n:param tag: Required.  The tag to add.\n:type tag: String\n\n ",
            "op": "remove_tag",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": null,
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a specific VM host\n\nUpdate a specific VM host by ID.\n\nNote: A VM host's 'type' cannot be updated. The VM host must be deleted\nand re-added to change the type.\n\n:param name: Optional.  The VM host's name.\n:type name: String\n\n :param pool: Optional.  The name of the resource pool\nassociated with this VM host -- composed machines will be assigned to this\nresource pool by default.\n:type pool: String\n\n :param cpu_over_commit_ratio: Optional.  CPU overcommit\nratio (0-10)\n:type cpu_over_commit_ratio: Int\n\n :param memory_over_commit_ratio: Optional.  CPU overcommit\nratio (0-10)\n:type memory_over_commit_ratio: Int\n\n :param default_storage_pool: Optional.  Default KVM\nstorage pool to use when the VM host has storage pools.\n:type default_storage_pool: String\n\n :param power_address: Optional.  Address for power\ncontrol of the VM host.\n:type power_address: String\n\n :param power_pass: Optional.  Password for access to\npower control of the VM host.\n:type power_pass: String\n\n :param zone: Optional.  The VM host's zone.\n:type zone: String\n\n :param default_macvlan_mode: Optional.  Default macvlan\nmode for VM hosts that use it: bridge, passthru, private, vepa.\n:type default_macvlan_mode: String\n\n :param tags: Optional.  Tag or tags (command separated)\nassociated with the VM host.\n:type tags: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Deletes a VM host\n\nDeletes a VM host with the given ID.\n\n:param decompose: Optional.  Whether to also also\ndecompose all machines in the VM host on removal. If not provided, machines\nwill not be removed.\n:type decompose: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual Pod.\n\nThe /pod/ API endpoint is deprecated. Please use the /vm-host/ one instead.",
        "name": "PodHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/pods/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/pods/{id}/"
      },
      "name": "PodHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List VM hosts\n\nGet a listing of all VM hosts.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a VM host\n\nCreate or discover a new VM host.\n\n:param type: Required.  The type of VM host to create:\n``lxd`` or ``virsh``.\n:type type: String\n\n :param power_address: Required.  Address that gives\nMAAS access to the VM host power control. For example, for virsh\n``qemu+ssh://172.16.99.2/system``\nFor ``lxd``, this is just the address of the host.\n:type power_address: String\n\n :param power_user: Required.  Username to use for\npower control of the VM host. Required for ``virsh``\nVM hosts that do not have SSH set up for public-key authentication.\n:type power_user: String\n\n :param power_pass: Required.  Password to use for\npower control of the VM host. Required ``virsh`` VM hosts that do\nnot have SSH set up for public-key authentication and for ``lxd``\nif the MAAS certificate is not registered already in the LXD server.\n:type power_pass: String\n\n :param name: Optional.  The new VM host's name.\n:type name: String\n\n :param zone: Optional.  The new VM host's zone.\n:type zone: String\n\n :param pool: Optional.  The name of the resource\npool the new VM host will belong to. Machines composed from this VM host\nwill be assigned to this resource pool by default.\n:type pool: String\n\n :param tags: Optional.  A tag or list of tags (\ncomma delimited) to assign to the new VM host.\n:type tags: String\n\n :param project: Optional.  For ``lxd`` VM hosts, the\nproject that MAAS will manage. If not provided, the ``default`` project\nwill be used. If a nonexistent name is given, a new project with that\nname will be created.\n:type project: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all the pods in the MAAS.\n\nThe /pods/ API endpoint is deprecated. Please use the /vm-hosts/ one\ninstead.",
        "name": "PodsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/pods/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/pods/"
      },
      "name": "PodsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "refresh",
            "doc": "Refresh a VM host\n\nPerforms VM host discovery and updates all discovered\ninformation and discovered machines.\n\n",
            "op": "refresh",
            "restful": false
          },
          {
            "method": "GET",
            "name": "parameters",
            "doc": "Obtain VM host parameters\n\nThis returns a VM host's configuration parameters. For some\ntypes of VM host, this will include private information such as passwords\nand secret keys.\n\nNote: This method is reserved for admin users.\n\n",
            "op": "parameters",
            "restful": false
          },
          {
            "method": "POST",
            "name": "compose",
            "doc": "Compose a virtual machine on the host.\n\nCompose a new machine from a VM host.\n\n:param cores: Optional.  The minimum number of CPU cores.\n:type cores: Int\n\n :param memory: Optional.  The minimum amount of memory,\nspecified in MiB (e.g. 2 MiB == 2*1024*1024).\n:type memory: Int\n\n :param hugepages_backed: Optional.  Whether to request\nhugepages backing for the machine.\n:type hugepages_backed: Boolean\n\n :param pinned_cores: Optional.  List of host CPU cores\nto pin the VM to. If this is passed, the \"cores\" parameter is ignored.\n:type pinned_cores: Int\n\n :param cpu_speed: Optional.  The minimum CPU speed,\nspecified in MHz.\n:type cpu_speed: Int\n\n :param architecture: Optional.  The architecture of\nthe new machine (e.g. amd64). This must be an architecture the VM host\nsupports.\n:type architecture: String\n\n :param storage: Optional.  A list of storage\nconstraint identifiers in the form ``label:size(tag,tag,...),\nlabel:size(tag,tag,...)``. For more information please see the CLI\nVM host management page of the official MAAS documentation.\n:type storage: String\n\n :param interfaces: Optional.  A\nlabeled constraint map associating constraint labels with desired\ninterface properties. MAAS will assign interfaces that match the\ngiven interface properties.\n\nFormat: ``label:key=value,key=value,...``\n\nKeys:\n\n- ``id``: Matches an interface with the specific id\n- ``fabric``: Matches an interface attached to the specified fabric.\n- ``fabric_class``: Matches an interface attached to a fabric\n  with the specified class.\n- ``ip``: Matches an interface whose VLAN is on the subnet implied by\n  the given IP address, and allocates the specified IP address for\n  the machine on that interface (if it is available).\n- ``mode``: Matches an interface with the specified mode. (Currently,\n  the only supported mode is \"unconfigured\".)\n- ``name``: Matches an interface with the specified name.\n  (For example, \"eth0\".)\n- ``hostname``: Matches an interface attached to the node with\n  the specified hostname.\n- ``subnet``: Matches an interface attached to the specified subnet.\n- ``space``: Matches an interface attached to the specified space.\n- ``subnet_cidr``: Matches an interface attached to the specified\n  subnet CIDR. (For example, \"192.168.0.0/24\".)\n- ``type``: Matches an interface of the specified type. (Valid\n  types: \"physical\", \"vlan\", \"bond\", \"bridge\", or \"unknown\".)\n- ``vlan``: Matches an interface on the specified VLAN.\n- ``vid``: Matches an interface on a VLAN with the specified VID.\n- ``tag``: Matches an interface tagged with the specified tag.\n:type interfaces: String\n\n :param hostname: Optional.  The hostname of the newly\ncomposed machine.\n:type hostname: String\n\n :param domain: Optional.  The ID of the domain in which\nto put the newly composed machine.\n:type domain: Int\n\n :param zone: Optional.  The ID of the zone in which to\nput the newly composed machine.\n:type zone: Int\n\n :param pool: Optional.  The ID of the pool in which to\nput the newly composed machine.\n:type pool: Int\n\n ",
            "op": "compose",
            "restful": false
          },
          {
            "method": "POST",
            "name": "add_tag",
            "doc": "Add a tag to a VM host\n\nAdds a tag to a given VM host.\n\n:param tag: Required.  The tag to add.\n:type tag: String\n\n ",
            "op": "add_tag",
            "restful": false
          },
          {
            "method": "POST",
            "name": "remove_tag",
            "doc": "Remove a tag from a VM host\n\nRemoves a given tag from a VM host.\n\n:param tag: Required.  The tag to add.\n:type tag: String\n\n ",
            "op": "remove_tag",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": null,
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a specific VM host\n\nUpdate a specific VM host by ID.\n\nNote: A VM host's 'type' cannot be updated. The VM host must be deleted\nand re-added to change the type.\n\n:param name: Optional.  The VM host's name.\n:type name: String\n\n :param pool: Optional.  The name of the resource pool\nassociated with this VM host -- composed machines will be assigned to this\nresource pool by default.\n:type pool: String\n\n :param cpu_over_commit_ratio: Optional.  CPU overcommit\nratio (0-10)\n:type cpu_over_commit_ratio: Int\n\n :param memory_over_commit_ratio: Optional.  CPU overcommit\nratio (0-10)\n:type memory_over_commit_ratio: Int\n\n :param default_storage_pool: Optional.  Default KVM\nstorage pool to use when the VM host has storage pools.\n:type default_storage_pool: String\n\n :param power_address: Optional.  Address for power\ncontrol of the VM host.\n:type power_address: String\n\n :param power_pass: Optional.  Password for access to\npower control of the VM host.\n:type power_pass: String\n\n :param zone: Optional.  The VM host's zone.\n:type zone: String\n\n :param default_macvlan_mode: Optional.  Default macvlan\nmode for VM hosts that use it: bridge, passthru, private, vepa.\n:type default_macvlan_mode: String\n\n :param tags: Optional.  Tag or tags (command separated)\nassociated with the VM host.\n:type tags: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Deletes a VM host\n\nDeletes a VM host with the given ID.\n\n:param decompose: Optional.  Whether to also also\ndecompose all machines in the VM host on removal. If not provided, machines\nwill not be removed.\n:type decompose: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual VM host.\n\nA VM host is identified by its id.",
        "name": "VmHostHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/vm-hosts/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/vm-hosts/{id}/"
      },
      "name": "VmHostHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "create_authorisation_token",
            "doc": "Create an authorisation token\n\nCreate an authorisation OAuth token and OAuth consumer.\n\n:param name: Optional.  Optional name of the token that\nwill be generated.\n:type name: String\n\n ",
            "op": "create_authorisation_token",
            "restful": false
          },
          {
            "method": "POST",
            "name": "delete_authorisation_token",
            "doc": "Delete an authorisation token\n\nDelete an authorisation OAuth token and the related OAuth\nconsumer.\n\n:param token_key: Required.  The key of the token to be\ndeleted.\n:type token_key: String\n\n ",
            "op": "delete_authorisation_token",
            "restful": false
          },
          {
            "method": "POST",
            "name": "update_token_name",
            "doc": "Modify authorisation token\n\nModify the consumer name of an authorisation OAuth token.\n\n:param token: Required.  Can be the whole token or only\nthe token key.\n:type token: String\n\n :param name: Required.  New name of the token.\n:type name: String\n\n ",
            "op": "update_token_name",
            "restful": false
          },
          {
            "method": "GET",
            "name": "list_authorisation_tokens",
            "doc": "List authorisation tokens\n\nList authorisation tokens available to the currently\nlogged-in user.\n\n",
            "op": "list_authorisation_tokens",
            "restful": false
          }
        ],
        "doc": "Manage the current logged-in user.",
        "name": "AccountHandler",
        "params": [],
        "path": "/MAAS/api/2.0/account/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/"
      },
      "name": "AccountHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List VM hosts\n\nGet a listing of all VM hosts.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a VM host\n\nCreate or discover a new VM host.\n\n:param type: Required.  The type of VM host to create:\n``lxd`` or ``virsh``.\n:type type: String\n\n :param power_address: Required.  Address that gives\nMAAS access to the VM host power control. For example, for virsh\n``qemu+ssh://172.16.99.2/system``\nFor ``lxd``, this is just the address of the host.\n:type power_address: String\n\n :param power_user: Required.  Username to use for\npower control of the VM host. Required for ``virsh``\nVM hosts that do not have SSH set up for public-key authentication.\n:type power_user: String\n\n :param power_pass: Required.  Password to use for\npower control of the VM host. Required ``virsh`` VM hosts that do\nnot have SSH set up for public-key authentication and for ``lxd``\nif the MAAS certificate is not registered already in the LXD server.\n:type power_pass: String\n\n :param name: Optional.  The new VM host's name.\n:type name: String\n\n :param zone: Optional.  The new VM host's zone.\n:type zone: String\n\n :param pool: Optional.  The name of the resource\npool the new VM host will belong to. Machines composed from this VM host\nwill be assigned to this resource pool by default.\n:type pool: String\n\n :param tags: Optional.  A tag or list of tags (\ncomma delimited) to assign to the new VM host.\n:type tags: String\n\n :param project: Optional.  For ``lxd`` VM hosts, the\nproject that MAAS will manage. If not provided, the ``default`` project\nwill be used. If a nonexistent name is given, a new project with that\nname will be created.\n:type project: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all the VM hosts in MAAS.",
        "name": "VmHostsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/vm-hosts/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/vm-hosts/"
      },
      "name": "VmHostsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a boot resource\n\nReads a boot resource by id\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a boot resource\n\nDelete a boot resource by id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a boot resource.",
        "name": "BootResourceHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/boot-resources/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-resources/{id}/"
      },
      "name": "BootResourceHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "revert",
            "doc": "Revert DHCP snippet to earlier version\n\nRevert the value of a DHCP snippet with the given id to an\nearlier revision.\n\n:param to: Required.  What revision in the DHCP snippet's\nhistory to revert to.  This can either be an ID or a negative number\nrepresenting how far back to go.\n:type to: Int\n\n ",
            "op": "revert",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a DHCP snippet\n\nRead a DHCP snippet with the given id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a DHCP snippet\n\nUpdate a DHCP snippet with the given id.\n\n:param name: Optional.  The name of the DHCP snippet.\n:type name: String\n\n :param value: Optional.  The new value of the DHCP\nsnippet to be used in dhcpd.conf. Previous values are stored and can be\nreverted.\n:type value: String\n\n :param description: Optional.  A description of what\nthe DHCP snippet does.\n:type description: String\n\n :param enabled: Optional.  Whether or not the DHCP\nsnippet is currently enabled.\n:type enabled: Boolean\n\n :param node: Optional.  The node the DHCP snippet is to\nbe used for. Can not be set if subnet is set.\n:type node: String\n\n :param subnet: Optional.  The subnet the DHCP snippet\nis to be used for. Can not be set if node is set.\n:type subnet: String\n\n :param global_snippet: Optional.  Set the DHCP snippet\nto be a global option. This removes any node or subnet links.\n:type global_snippet: Boolean\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a DHCP snippet\n\nDelete a DHCP snippet with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual DHCP snippet.\n\nThe DHCP snippet is identified by its id.",
        "name": "DHCPSnippetHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/dhcp-snippets/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dhcp-snippets/{id}/"
      },
      "name": "DHCPSnippetHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List DHCP snippets\n\nList all available DHCP snippets.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a DHCP snippet\n\nCreates a DHCP snippet.\n\n:param name: Required.  The name of the DHCP snippet.\n:type name: String\n\n :param value: Required.  The snippet of config inserted\ninto dhcpd.conf.\n:type value: String\n\n :param description: Optional.  A description of what\nthe snippet does.\n:type description: String\n\n :param enabled: Optional.  Whether or not the snippet\nis currently enabled.\n:type enabled: Boolean\n\n :param node: Optional.  The node this snippet applies\nto. Cannot be used with subnet or global_snippet.\n:type node: String\n\n :param subnet: Optional.  The subnet this snippet\napplies to. Cannot be used with node or global_snippet.\n:type subnet: String\n\n :param iprange: Optional.  The iprange within a subnet\nthis snippet applies to. Must also provide a subnet value.\n:type iprange: String\n\n :param global_snippet: Optional.  Whether or not this\nsnippet is to be applied globally. Cannot be used with node or subnet.\n:type global_snippet: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all DHCP snippets in MAAS.",
        "name": "DHCPSnippetsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/dhcp-snippets/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dhcp-snippets/"
      },
      "name": "DHCPSnippetsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a package repository\n\nRead a package repository with the given id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a package repository\n\nUpdate the package repository with the given id.\n\n:param name: Optional.  The name of the package\nrepository.\n:type name: String\n\n :param url: Optional.  The url of the package\nrepository.\n:type url: String\n\n :param distributions: Optional.  Which package\ndistributions to include.\n:type distributions: String\n\n :param disabled_pockets: Optional.  The list of pockets\nto disable.\n:type disabled_pockets: String\n\n :param disabled_components: Optional.  The list of\ncomponents to disable. Only applicable to the default Ubuntu\nrepositories.\n:type disabled_components: String\n\n :param disable_sources: Optional.  Disable deb-src\nlines.\n:type disable_sources: String\n\n :param components: Optional.  The list of components to\nenable. Only applicable to custom repositories.\n:type components: String\n\n :param arches: Optional.  The list of supported\narchitectures.\n:type arches: String\n\n :param key: Optional.  The authentication key to use\nwith the repository.\n:type key: String\n\n :param enabled: Optional.  Whether or not the\nrepository is enabled.\n:type enabled: Boolean\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a package repository\n\nDelete a package repository with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual package repository.\n\nA package repository is identified by its id.",
        "name": "PackageRepositoryHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/package-repositories/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/package-repositories/{id}/"
      },
      "name": "PackageRepositoryHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List package repositories\n\nList all available package repositories.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a package repository\n\nCreate a new package repository.\n\n:param name: Required.  The name of the package\nrepository.\n:type name: String\n\n :param url: Required.  The url of the package\nrepository.\n:type url: String\n\n :param distributions: Optional.  Which package\ndistributions to include.\n:type distributions: String\n\n :param disabled_pockets: Optional.  The list of pockets\nto disable.\n:type disabled_pockets: String\n\n :param disabled_components: Optional.  The list of\ncomponents to disable. Only applicable to the default Ubuntu\nrepositories.\n:type disabled_components: String\n\n :param components: Optional.  The list of components to\nenable. Only applicable to custom repositories.\n:type components: String\n\n :param arches: Optional.  The list of supported\narchitectures.\n:type arches: String\n\n :param key: Optional.  The authentication key to use\nwith the repository.\n:type key: String\n\n :param enabled: Optional.  Whether or not the\nrepository is enabled.\n:type enabled: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all Package Repositories in MAAS.",
        "name": "PackageRepositoriesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/package-repositories/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/package-repositories/"
      },
      "name": "PackageRepositoriesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a DNS resource record description Read a DNS resource record with the given id.\n\n\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a DNS resource record\n\nUpdate a DNS resource record with the given id.\n\n:param rrtype: Optional.  Resource type.\n:type rrtype: String\n\n :param rrdata: Optional.  Resource data (everything to\nthe right of type.)\n:type rrdata: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a DNS resource record\n\nDelete a DNS resource record with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage dnsresourcerecord.",
        "name": "DNSResourceRecordHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/dnsresourcerecords/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dnsresourcerecords/{id}/"
      },
      "name": "DNSResourceRecordHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List all DNS resource records\n\nList all DNS resource records.\n\n:param domain: Optional.  Restricts the listing to\nentries for the domain.\n:type domain: String\n\n :param name: Optional.  Restricts the listing to\nentries of the given name.\n:type name: String\n\n :param rrtype: Optional.  Restricts the listing to\nentries which have records of the given rrtype.\n:type rrtype: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a DNS resource record\n\nCreate a new DNS resource record.\n\n:param fqdn: Optional.  Hostname (with domain) for the\ndnsresource.  Either ``fqdn`` or ``name`` and  ``domain`` must be\nspecified.  ``fqdn`` is ignored if either name or domain is given (e.g.\nwww.your-maas.maas).\n:type fqdn: String\n\n :param name: Optional.  The name (or hostname without a\ndomain) of the DNS resource record (e.g. www.your-maas)\n:type name: String\n\n :param domain: Optional.  The domain (name or id) where\nto create the DNS resource record (Domain (e.g. 'maas')\n:type domain: String\n\n :param rrtype: Optional.  The resource record type (e.g\n``cname``, ``mx``, ``ns``, ``srv``, ``sshfp``, ``txt``).\n:type rrtype: String\n\n :param rrdata: Optional.  The resource record data\n(e.g. 'your-maas', '10 mail.your-maas.maas')\n:type rrdata: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage DNS resource records (e.g. CNAME, MX, NS, SRV, TXT)",
        "name": "DNSResourceRecordsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/dnsresourcerecords/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dnsresourcerecords/"
      },
      "name": "DNSResourceRecordsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a DNS resource\n\nRead a DNS resource by id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a DNS resource\n\nUpdate a DNS resource with the given id.\n\n:param fqdn: Optional.  Hostname (with domain) for the\ndnsresource.  Either ``fqdn`` or ``name`` and ``domain`` must be\nspecified.  ``fqdn`` is ignored if either ``name`` or ``domain`` is\ngiven.\n:type fqdn: String\n\n :param name: Optional.  Hostname (without domain).\n:type name: String\n\n :param domain: Optional.  Domain (name or id).\n:type domain: String\n\n :param address_ttl: Optional.  Default TTL for entries\nin this zone.\n:type address_ttl: String\n\n :param ip_addresses: Optional.  Address (ip or id) to\nassign to the dnsresource. This creates an A or AAAA record,\nfor each of the supplied ip_addresses, IPv4 or IPv6, respectively.\n:type ip_addresses: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a DNS resource\n\nDelete a DNS resource with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage dnsresource.",
        "name": "DNSResourceHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/dnsresources/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dnsresources/{id}/"
      },
      "name": "DNSResourceHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "set_config",
            "doc": "Set a configuration value\n\nSet a configuration value.\n\n:param value: Optional.  The value of the configuration\nitem to be set.\n:type value: String\n\n :param name: Required.  The name of the\nconfiguration item to be set.\n\nAvailable configuration items:\n\n:active_discovery_interval: Active subnet mapping interval.         When enabled, each rack will scan subnets enabled for active mapping. This helps ensure discovery information is accurate and complete.\n:boot_images_auto_import: Automatically import/refresh the boot images every 60 minutes.\n:boot_images_no_proxy: Set no_proxy with the image repository address when MAAS is behind (or set with) a proxy..         By default, when MAAS is behind (and set with) a proxy, it is used to download images from the image repository. In some situations (e.g. when using a local image repository) it doesn't make sense for MAAS to use the proxy to download images because it can access them directly. Setting this option allows MAAS to access the (local) image repository directly by setting the no_proxy variable for the MAAS env with the address of the image repository.\n:commissioning_distro_series: Default Ubuntu release used for commissioning.\n:completed_intro: Marks if the initial intro has been completed.\n:curtin_verbose: Run the fast-path installer with higher verbosity. This provides more detail in the installation logs.\n:default_distro_series: Default OS release used for deployment.\n:default_dns_ttl: Default Time-To-Live for the DNS.         If no TTL value is specified at a more specific point this is how long DNS responses are valid, in seconds.\n:default_min_hwe_kernel: Default Minimum Kernel Version.         The default minimum kernel version used on all new and commissioned nodes.\n:default_osystem: Default operating system used for deployment.\n:default_storage_layout: Default storage layout.         Storage layout that is applied to a node when it is commissioned.        Available choices are: 'bcache' (Bcache layout), 'blank' (No storage (blank) layout), 'flat' (Flat layout), 'lvm' (LVM layout), 'vmfs6' (VMFS6 layout).\n:disk_erase_with_quick_erase: Use quick erase by default when erasing disks..         This is not a secure erase; it wipes only the beginning and end of each disk.\n:disk_erase_with_secure_erase: Use secure erase by default when erasing disks.         Will only be used on devices that support secure erase.  Other devices will fall back to full wipe or quick erase depending on the selected options.\n:dns_trusted_acl: List of external networks (not previously known), that will be allowed to use MAAS for DNS resolution..         MAAS keeps a list of networks that are allowed to use MAAS for DNS resolution. This option allows to add extra networks (not previously known) to the trusted ACL where this list of networks is kept. It also supports specifying IPs or ACL names.\n:dnssec_validation: Enable DNSSEC validation of upstream zones.         Only used when MAAS is running its own DNS server. This value is used as the value of 'dnssec_validation' in the DNS server config.\n:enable_analytics: Enable Google Analytics in MAAS UI to shape improvements in user experience.\n:enable_disk_erasing_on_release: Erase nodes' disks prior to releasing.         Forces users to always erase disks when releasing.\n:enable_http_proxy: Enable the use of an APT or YUM and HTTP/HTTPS proxy.         Provision nodes to use the built-in HTTP proxy (or user specified proxy) for APT or YUM. MAAS also uses the proxy for downloading boot images.\n:enable_third_party_drivers: Enable the installation of proprietary drivers (i.e. HPVSA).\n:enlist_commissioning: Whether to run commissioning during enlistment..         Enables running all built-in commissioning scripts during enlistment.\n:force_v1_network_yaml: Always use the legacy v1 YAML (rather than Netplan format, also known as v2 YAML) when composing the network configuration for a machine..\n:http_proxy: Proxy for APT or YUM and HTTP/HTTPS.         This will be passed onto provisioned nodes to use as a proxy for APT or YUM traffic. MAAS also uses the proxy for downloading boot images. If no URL is provided, the built-in MAAS proxy will be used.\n:kernel_opts: Boot parameters to pass to the kernel by default.\n:maas_auto_ipmi_k_g_bmc_key: The IPMI K_g key to set during BMC configuration..         This IPMI K_g BMC key is used to encrypt all IPMI traffic to a BMC. Once set, all clients will REQUIRE this key upon being commissioned. Any current machines that were previously commissioned will not require this key until they are recommissioned.\n:maas_auto_ipmi_user: MAAS IPMI user..         The name of the IPMI user that MAAS automatically creates during enlistment/commissioning.\n:maas_auto_ipmi_user_privilege_level: MAAS IPMI privilege level.         The default IPMI privilege level to use when creating the MAAS user and talking IPMI BMCs        Available choices are: 'USER' (User), 'OPERATOR' (Operator), 'ADMIN' (Administrator).\n:maas_internal_domain: Domain name used by MAAS for internal mapping of MAAS provided services..         This domain should not collide with an upstream domain provided by the set upstream DNS.\n:maas_name: MAAS name.\n:maas_proxy_port: Port to bind the MAAS built-in proxy (default: 8000).         Defines the port used to bind the built-in proxy. The default port is 8000.\n:maas_syslog_port: Port to bind the MAAS built-in syslog (default: 5247).         Defines the port used to bind the built-in syslog. The default port is 5247.\n:max_node_commissioning_results: The maximum number of commissioning results runs which are stored.\n:max_node_installation_results: The maximum number of installation result runs which are stored.\n:max_node_testing_results: The maximum number of testing results runs which are stored.\n:network_discovery: .         When enabled, MAAS will use passive techniques (such as listening to ARP requests and mDNS advertisements) to observe networks attached to rack controllers. Active subnet mapping will also be available to be enabled on the configured subnets.\n:node_timeout: Time, in minutes, until the node times out during commissioning, testing, deploying, or entering rescue mode..         Commissioning, testing, deploying, and entering rescue mode all set a timeout when beginning. If MAAS does not hear from the node within the specified number of minutes the node is powered off and set into a failed status.\n:ntp_external_only: Use external NTP servers only.         Configure all region controller hosts, rack controller hosts, and subsequently deployed machines to refer directly to the configured external NTP servers. Otherwise only region controller hosts will be configured to use those external NTP servers, rack contoller hosts will in turn refer to the regions' NTP servers, and deployed machines will refer to the racks' NTP servers.\n:ntp_servers: Addresses of NTP servers.         NTP servers, specified as IP addresses or hostnames delimited by commas and/or spaces, to be used as time references for MAAS itself, the machines MAAS deploys, and devices that make use of MAAS's DHCP services.\n:prefer_v4_proxy: Sets IPv4 DNS resolution before IPv6.         If prefer_v4_proxy is set, the proxy will be set to prefer IPv4 DNS resolution before it attempts to perform IPv6 DNS resolution.\n:prometheus_enabled: Enable sending stats to a prometheus gateway..         Allows MAAS to send statistics to Prometheus. This requires the 'prometheus_push_gateway' to be set.\n:prometheus_push_gateway: Address or hostname of the Prometheus push gateway..         Defines the address or hostname of the Prometheus push gateway where MAAS will send data to.\n:prometheus_push_interval: Interval of how often to send data to Prometheus (default: to 60 minutes)..         The internal of how often MAAS will send stats to Prometheus in minutes.\n:release_notifications: Enable or disable notifications for new MAAS releases..\n:remote_syslog: Remote syslog server to forward machine logs.         A remote syslog server that MAAS will set on enlisting, commissioning, testing, and deploying machines to send all log messages. Clearing this value will restore the default behaviour of forwarding syslog to MAAS.\n:subnet_ip_exhaustion_threshold_count: If the number of free IP addresses on a subnet becomes less than or equal to this threshold, an IP exhaustion warning will appear for that subnet.\n:upstream_dns: Upstream DNS used to resolve domains not managed by this MAAS (space-separated IP addresses).         Only used when MAAS is running its own DNS server. This value is used as the value of 'forwarders' in the DNS server config.\n:use_peer_proxy: Use the built-in proxy with an external proxy as a peer.         If enable_http_proxy is set, the built-in proxy will be configured to use http_proxy as a peer proxy. The deployed machines will be configured to use the built-in proxy.\n:use_rack_proxy: Use DNS and HTTP metadata proxy on the rack controllers when a machine is booted..         All DNS and HTTP metadata traffic will flow through the rack controller that a machine is booting from. This isolated region controllers from machines.\n:vcenter_datacenter: VMware vCenter datacenter.         VMware vCenter datacenter which is passed to a deployed VMware ESXi host.\n:vcenter_password: VMware vCenter password.         VMware vCenter server password which is passed to a deployed VMware ESXi host.\n:vcenter_server: VMware vCenter server FQDN or IP address.         VMware vCenter server FQDN or IP address which is passed to a deployed VMware ESXi host.\n:vcenter_username: VMware vCenter username.         VMware vCenter server username which is passed to a deployed VMware ESXi host.\n:windows_kms_host: Windows KMS activation host.         FQDN or IP address of the host that provides the KMS Windows activation service. (Only needed for Windows deployments using KMS activation.)\n:type name: String\n\n ",
            "op": "set_config",
            "restful": false
          },
          {
            "method": "GET",
            "name": "get_config",
            "doc": "Get a configuration value\n\nGet a configuration value.\n\n:param name: Required.  The name of the\nconfiguration item to be retrieved.\n\nAvailable configuration items:\n\n:active_discovery_interval: Active subnet mapping interval.         When enabled, each rack will scan subnets enabled for active mapping. This helps ensure discovery information is accurate and complete.\n:boot_images_auto_import: Automatically import/refresh the boot images every 60 minutes.\n:boot_images_no_proxy: Set no_proxy with the image repository address when MAAS is behind (or set with) a proxy..         By default, when MAAS is behind (and set with) a proxy, it is used to download images from the image repository. In some situations (e.g. when using a local image repository) it doesn't make sense for MAAS to use the proxy to download images because it can access them directly. Setting this option allows MAAS to access the (local) image repository directly by setting the no_proxy variable for the MAAS env with the address of the image repository.\n:commissioning_distro_series: Default Ubuntu release used for commissioning.\n:completed_intro: Marks if the initial intro has been completed.\n:curtin_verbose: Run the fast-path installer with higher verbosity. This provides more detail in the installation logs.\n:default_distro_series: Default OS release used for deployment.\n:default_dns_ttl: Default Time-To-Live for the DNS.         If no TTL value is specified at a more specific point this is how long DNS responses are valid, in seconds.\n:default_min_hwe_kernel: Default Minimum Kernel Version.         The default minimum kernel version used on all new and commissioned nodes.\n:default_osystem: Default operating system used for deployment.\n:default_storage_layout: Default storage layout.         Storage layout that is applied to a node when it is commissioned.        Available choices are: 'bcache' (Bcache layout), 'blank' (No storage (blank) layout), 'flat' (Flat layout), 'lvm' (LVM layout), 'vmfs6' (VMFS6 layout).\n:disk_erase_with_quick_erase: Use quick erase by default when erasing disks..         This is not a secure erase; it wipes only the beginning and end of each disk.\n:disk_erase_with_secure_erase: Use secure erase by default when erasing disks.         Will only be used on devices that support secure erase.  Other devices will fall back to full wipe or quick erase depending on the selected options.\n:dns_trusted_acl: List of external networks (not previously known), that will be allowed to use MAAS for DNS resolution..         MAAS keeps a list of networks that are allowed to use MAAS for DNS resolution. This option allows to add extra networks (not previously known) to the trusted ACL where this list of networks is kept. It also supports specifying IPs or ACL names.\n:dnssec_validation: Enable DNSSEC validation of upstream zones.         Only used when MAAS is running its own DNS server. This value is used as the value of 'dnssec_validation' in the DNS server config.\n:enable_analytics: Enable Google Analytics in MAAS UI to shape improvements in user experience.\n:enable_disk_erasing_on_release: Erase nodes' disks prior to releasing.         Forces users to always erase disks when releasing.\n:enable_http_proxy: Enable the use of an APT or YUM and HTTP/HTTPS proxy.         Provision nodes to use the built-in HTTP proxy (or user specified proxy) for APT or YUM. MAAS also uses the proxy for downloading boot images.\n:enable_third_party_drivers: Enable the installation of proprietary drivers (i.e. HPVSA).\n:enlist_commissioning: Whether to run commissioning during enlistment..         Enables running all built-in commissioning scripts during enlistment.\n:force_v1_network_yaml: Always use the legacy v1 YAML (rather than Netplan format, also known as v2 YAML) when composing the network configuration for a machine..\n:http_proxy: Proxy for APT or YUM and HTTP/HTTPS.         This will be passed onto provisioned nodes to use as a proxy for APT or YUM traffic. MAAS also uses the proxy for downloading boot images. If no URL is provided, the built-in MAAS proxy will be used.\n:kernel_opts: Boot parameters to pass to the kernel by default.\n:maas_auto_ipmi_k_g_bmc_key: The IPMI K_g key to set during BMC configuration..         This IPMI K_g BMC key is used to encrypt all IPMI traffic to a BMC. Once set, all clients will REQUIRE this key upon being commissioned. Any current machines that were previously commissioned will not require this key until they are recommissioned.\n:maas_auto_ipmi_user: MAAS IPMI user..         The name of the IPMI user that MAAS automatically creates during enlistment/commissioning.\n:maas_auto_ipmi_user_privilege_level: MAAS IPMI privilege level.         The default IPMI privilege level to use when creating the MAAS user and talking IPMI BMCs        Available choices are: 'USER' (User), 'OPERATOR' (Operator), 'ADMIN' (Administrator).\n:maas_internal_domain: Domain name used by MAAS for internal mapping of MAAS provided services..         This domain should not collide with an upstream domain provided by the set upstream DNS.\n:maas_name: MAAS name.\n:maas_proxy_port: Port to bind the MAAS built-in proxy (default: 8000).         Defines the port used to bind the built-in proxy. The default port is 8000.\n:maas_syslog_port: Port to bind the MAAS built-in syslog (default: 5247).         Defines the port used to bind the built-in syslog. The default port is 5247.\n:max_node_commissioning_results: The maximum number of commissioning results runs which are stored.\n:max_node_installation_results: The maximum number of installation result runs which are stored.\n:max_node_testing_results: The maximum number of testing results runs which are stored.\n:network_discovery: .         When enabled, MAAS will use passive techniques (such as listening to ARP requests and mDNS advertisements) to observe networks attached to rack controllers. Active subnet mapping will also be available to be enabled on the configured subnets.\n:node_timeout: Time, in minutes, until the node times out during commissioning, testing, deploying, or entering rescue mode..         Commissioning, testing, deploying, and entering rescue mode all set a timeout when beginning. If MAAS does not hear from the node within the specified number of minutes the node is powered off and set into a failed status.\n:ntp_external_only: Use external NTP servers only.         Configure all region controller hosts, rack controller hosts, and subsequently deployed machines to refer directly to the configured external NTP servers. Otherwise only region controller hosts will be configured to use those external NTP servers, rack contoller hosts will in turn refer to the regions' NTP servers, and deployed machines will refer to the racks' NTP servers.\n:ntp_servers: Addresses of NTP servers.         NTP servers, specified as IP addresses or hostnames delimited by commas and/or spaces, to be used as time references for MAAS itself, the machines MAAS deploys, and devices that make use of MAAS's DHCP services.\n:prefer_v4_proxy: Sets IPv4 DNS resolution before IPv6.         If prefer_v4_proxy is set, the proxy will be set to prefer IPv4 DNS resolution before it attempts to perform IPv6 DNS resolution.\n:prometheus_enabled: Enable sending stats to a prometheus gateway..         Allows MAAS to send statistics to Prometheus. This requires the 'prometheus_push_gateway' to be set.\n:prometheus_push_gateway: Address or hostname of the Prometheus push gateway..         Defines the address or hostname of the Prometheus push gateway where MAAS will send data to.\n:prometheus_push_interval: Interval of how often to send data to Prometheus (default: to 60 minutes)..         The internal of how often MAAS will send stats to Prometheus in minutes.\n:release_notifications: Enable or disable notifications for new MAAS releases..\n:remote_syslog: Remote syslog server to forward machine logs.         A remote syslog server that MAAS will set on enlisting, commissioning, testing, and deploying machines to send all log messages. Clearing this value will restore the default behaviour of forwarding syslog to MAAS.\n:subnet_ip_exhaustion_threshold_count: If the number of free IP addresses on a subnet becomes less than or equal to this threshold, an IP exhaustion warning will appear for that subnet.\n:upstream_dns: Upstream DNS used to resolve domains not managed by this MAAS (space-separated IP addresses).         Only used when MAAS is running its own DNS server. This value is used as the value of 'forwarders' in the DNS server config.\n:use_peer_proxy: Use the built-in proxy with an external proxy as a peer.         If enable_http_proxy is set, the built-in proxy will be configured to use http_proxy as a peer proxy. The deployed machines will be configured to use the built-in proxy.\n:use_rack_proxy: Use DNS and HTTP metadata proxy on the rack controllers when a machine is booted..         All DNS and HTTP metadata traffic will flow through the rack controller that a machine is booting from. This isolated region controllers from machines.\n:vcenter_datacenter: VMware vCenter datacenter.         VMware vCenter datacenter which is passed to a deployed VMware ESXi host.\n:vcenter_password: VMware vCenter password.         VMware vCenter server password which is passed to a deployed VMware ESXi host.\n:vcenter_server: VMware vCenter server FQDN or IP address.         VMware vCenter server FQDN or IP address which is passed to a deployed VMware ESXi host.\n:vcenter_username: VMware vCenter username.         VMware vCenter server username which is passed to a deployed VMware ESXi host.\n:windows_kms_host: Windows KMS activation host.         FQDN or IP address of the host that provides the KMS Windows activation service. (Only needed for Windows deployments using KMS activation.)\n:type name: String\n\n ",
            "op": "get_config",
            "restful": false
          }
        ],
        "doc": "Manage the MAAS server.",
        "name": "MaasHandler",
        "params": [],
        "path": "/MAAS/api/2.0/maas/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/maas/"
      },
      "name": "MaasHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List resources\n\nList all resources for the specified criteria.\n\n:param domain: Optional.  Restricts the listing to\nentries for the domain.\n:type domain: String\n\n :param name: Optional.  Restricts the listing to\nentries of the given name.\n:type name: String\n\n :param rrtype: Optional.  Restricts the listing to\nentries which have records of the given rrtype.\n:type rrtype: String\n\n :param all: Optional.  Include implicit DNS records\ncreated for nodes registered in MAAS if true.\n:type all: Boolean\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a DNS resource\n\nCreate a DNS resource.\n\n:param fqdn: Optional.  Hostname (with domain) for the\ndnsresource.  Either ``fqdn`` or ``name`` and ``domain`` must be\nspecified.  ``fqdn`` is ignored if either ``name`` or ``domain`` is\ngiven.\n:type fqdn: String\n\n :param name: Required.  Hostname (without domain).\n:type name: String\n\n :param domain: Required.  Domain (name or id).\n:type domain: String\n\n :param address_ttl: Optional.  Default TTL for entries\nin this zone.\n:type address_ttl: String\n\n :param ip_addresses: Optional.  Address (ip or id) to\nassign to the dnsresource. This creates an A or AAAA record,\nfor each of the supplied ip_addresses, IPv4 or IPv6, respectively.\n:type ip_addresses: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage dnsresources.",
        "name": "DNSResourcesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/dnsresources/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dnsresources/"
      },
      "name": "DNSResourcesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "set_default",
            "doc": "Set domain as default\n\nSet the specified domain to be the default.\n\n",
            "op": "set_default",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read domain\n\nRead a domain with the given id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a domain\n\nUpdate a domain with the given id.\n\n:param name: Required.  Name of the domain.\n:type name: String\n\n :param authoritative: Optional.  True if we are\nauthoritative for this domain.\n:type authoritative: String\n\n :param ttl: Optional.  The default TTL for this domain.\n:type ttl: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete domain\n\nDelete a domain with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage domain.",
        "name": "DomainHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/domains/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/domains/{id}/"
      },
      "name": "DomainHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "set_serial",
            "doc": "Set the SOA serial number\n\nSet the SOA serial number for all DNS zones.\n\n:param serial: Required.  Serial number to use next.\n:type serial: Int\n\n ",
            "op": "set_serial",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List all domains\n\nList all domains.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a domain\n\nCreate a domain.\n\n:param name: Required.  Name of the domain.\n:type name: String\n\n :param authoritative: Optional.  Class type of the\ndomain.\n:type authoritative: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage domains.",
        "name": "DomainsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/domains/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/domains/"
      },
      "name": "DomainsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List block devices\n\nList all block devices belonging to a machine.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a block device\n\nCreate a physical block device.\n\n:param name: Required.  Name of the block device.\n:type name: String\n\n :param model: Optional.  Model of the block device.\n:type model: String\n\n :param serial: Optional.  Serial number of the block\ndevice.\n:type serial: String\n\n :param id_path: Optional.  Only used if model and\nserial cannot be provided. This should be a path that is fixed and\ndoesn't change depending on the boot order or kernel version.\n:type id_path: String\n\n :param size: Required.  Size of the block device.\n:type size: String\n\n :param block_size: Required.  Block size of the block\ndevice.\n:type block_size: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage block devices on a machine.",
        "name": "BlockDevicesHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/blockdevices/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/blockdevices/"
      },
      "name": "BlockDevicesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "add_tag",
            "doc": "Add a tag\n\nAdd a tag to block device on a given machine.\n\n:param tag: Required.  The tag being added.\n:type tag: String\n\n ",
            "op": "add_tag",
            "restful": false
          },
          {
            "method": "POST",
            "name": "remove_tag",
            "doc": "Remove a tag\n\nRemove a tag from block device on a given machine.\n\n:param tag: Optional.  The tag being removed.\n:type tag: String\n\n ",
            "op": "remove_tag",
            "restful": false
          },
          {
            "method": "POST",
            "name": "format",
            "doc": "Format block device\n\nFormat block device with filesystem.\n\n:param fstype: Required.  Type of filesystem.\n:type fstype: String\n\n :param uuid: Optional.  UUID of the filesystem.\n:type uuid: String\n\n ",
            "op": "format",
            "restful": false
          },
          {
            "method": "POST",
            "name": "unformat",
            "doc": "Unformat a block device\n\nUnformat a previously formatted block device.\n\n",
            "op": "unformat",
            "restful": false
          },
          {
            "method": "POST",
            "name": "mount",
            "doc": "Mount a filesystem\n\nMount the filesystem on block device.\n\n:param mount_point: Required.  Path on the filesystem\nto mount.\n:type mount_point: String\n\n :param mount_options: Optional.  Options to pass to\nmount(8).\n:type mount_options: String\n\n ",
            "op": "mount",
            "restful": false
          },
          {
            "method": "POST",
            "name": "unmount",
            "doc": "Unmount a filesystem\n\nUnmount the filesystem on block device.\n\n",
            "op": "unmount",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_boot_disk",
            "doc": "Set boot disk\n\nSet a block device as the boot disk for the machine.\n\n",
            "op": "set_boot_disk",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a block device\n\nRead a block device on a given machine.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a block device\n\nUpdate block device on a given machine.\n\nMachines must have a status of Ready to have access to all options.\nMachines with Deployed status can only have the name, model, serial,\nand/or id_path updated for a block device. This is intented to allow a\nbad block device to be replaced while the machine remains deployed.\n\n:param name: Optional.  (Physical devices) Name of the\nblock device.\n:type name: String\n\n :param model: Optional.  (Physical devices) Model of\nthe block device.\n:type model: String\n\n :param serial: Optional.  (Physical devices) Serial\nnumber of the block device.\n:type serial: String\n\n :param id_path: Optional.  (Physical devices) Only used\nif model and serial cannot be provided. This should be a path that is\nfixed and doesn't change depending on the boot order or kernel version.\n:type id_path: String\n\n :param size: Optional.  (Physical devices) Size of the\nblock device.\n:type size: String\n\n :param block_size: Optional.  (Physical devices) Block\nsize of the block device.\n:type block_size: String\n\n :param name: Optional.  (Virtual devices) Name of\nthe block device.\n:type name: String\n\n :param uuid: Optional.  (Virtual devices) UUID of\nthe block device.\n:type uuid: String\n\n :param size: Optional.  (Virtual devices) Size of\nthe block device. (Only allowed for logical volumes.)\n:type size: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a block device\n\nDelete block device on a given machine.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a block device on a machine.",
        "name": "BlockDeviceHandler",
        "params": [
          "system_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/blockdevices/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/blockdevices/{id}/"
      },
      "name": "BlockDeviceHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "format",
            "doc": "Format a partition\n\nFormat the partition on machine system_id and device\ndevice_id with the given partition id.\n\n:param fstype: Required.  Type of filesystem.\n:type fstype: String\n\n :param uuid: Optional.  The UUID for the filesystem.\n:type uuid: String\n\n :param label: Optional.  The label for the filesystem.\n:type label: String\n\n ",
            "op": "format",
            "restful": false
          },
          {
            "method": "POST",
            "name": "unformat",
            "doc": "Unformat a partition\n\nUnformat the partition on machine system_id and device\ndevice_id with the given partition id.\n\n",
            "op": "unformat",
            "restful": false
          },
          {
            "method": "POST",
            "name": "mount",
            "doc": "Mount a filesystem\n\nMount a filesystem on machine system_id, device device_id\nand partition id.\n\n:param mount_point: Required.  Path on the filesystem to\nmount.\n:type mount_point: String\n\n :param mount_options: Optional.  Options to pass to\nmount(8).\n:type mount_options: String\n\n ",
            "op": "mount",
            "restful": false
          },
          {
            "method": "POST",
            "name": "unmount",
            "doc": "Unmount a filesystem\n\nUnmount a filesystem on machine system_id, device\ndevice_id and partition id.\n\n",
            "op": "unmount",
            "restful": false
          },
          {
            "method": "POST",
            "name": "add_tag",
            "doc": "Add a tag\n\nAdd a tag to a partition on machine system_id, device\ndevice_id and partition id.\n\n:param tag: Required.  The tag being added.\n:type tag: String\n\n ",
            "op": "add_tag",
            "restful": false
          },
          {
            "method": "POST",
            "name": "remove_tag",
            "doc": "Remove a tag\n\nRemove a tag from a partition on machine system_id, device\ndevice_id and partition id.\n\n:param tag: Required.  The tag being removed.\n:type tag: String\n\n ",
            "op": "remove_tag",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a partition\n\nRead the partition from machine system_id and device\ndevice_id with the given partition id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a partition\n\nDelete the partition from machine system_id and device\ndevice_id with the given partition id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage partition on a block device.",
        "name": "PartitionHandler",
        "params": [
          "system_id",
          "device_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/blockdevices/{device_id}/partition/{id}",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/blockdevices/{device_id}/partition/{id}"
      },
      "name": "PartitionHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List partitions\n\nList partitions on a device with the given system_id and\ndevice_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a partition\n\nCreate a partition on a block device.\n\n:param size: Optional.  The size of the partition. If not\nspecified, all available space will be used.\n:type size: Int\n\n :param uuid: Optional.  UUID for the partition. Only\nused if the partition table type for the block device is GPT.\n:type uuid: String\n\n :param bootable: Optional.  If the partition should be\nmarked bootable.\n:type bootable: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage partitions on a block device.",
        "name": "PartitionsHandler",
        "params": [
          "system_id",
          "device_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/blockdevices/{device_id}/partitions/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/blockdevices/{device_id}/partitions/"
      },
      "name": "PartitionsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "create_logical_volume",
            "doc": "Create a logical volume\n\nCreate a logical volume in the volume group with the given\nid on the machine with the given system_id.\n\n:param name: Required.  Name of the logical volume.\n:type name: String\n\n :param uuid: Optional.  (optional) UUID of the logical\nvolume.\n:type uuid: String\n\n :param size: Required.  Size of the logical volume. Must\nbe larger than or equal to 4,194,304 bytes. E.g. ``4194304``.\n:type size: String\n\n ",
            "op": "create_logical_volume",
            "restful": false
          },
          {
            "method": "POST",
            "name": "delete_logical_volume",
            "doc": "Delete a logical volume\n\nDelete a logical volume in the volume group with the given\nid on the machine with the given system_id.\n\nNote: this operation returns HTTP status code 204 even if the logical\nvolume id does not exist.\n\n:param id: Required.  The logical volume id.\n:type id: Int\n\n ",
            "op": "delete_logical_volume",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a volume group\n\nRead a volume group with the given id on the machine with\nthe given system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a volume group\n\nUpdate a volume group with the given id on the machine\nwith the given system_id.\n\n:param name: Optional.  Name of the volume group.\n:type name: String\n\n :param uuid: Optional.  UUID of the volume group.\n:type uuid: String\n\n :param add_block_devices: Optional.  Block devices to\nadd to the volume group.\n:type add_block_devices: String\n\n :param remove_block_devices: Optional.  Block devices\nto remove from the volume group.\n:type remove_block_devices: String\n\n :param add_partitions: Optional.  Partitions to add to\nthe volume group.\n:type add_partitions: String\n\n :param remove_partitions: Optional.  Partitions to\nremove from the volume group.\n:type remove_partitions: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete volume group\n\nDelete a volume group with the given id from the machine\nwith the given system_id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage volume group on a machine.",
        "name": "VolumeGroupHandler",
        "params": [
          "system_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/volume-group/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/volume-group/{id}/"
      },
      "name": "VolumeGroupHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List all volume groups\n\nList all volume groups belonging to a machine with the\ngiven system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a volume group\n\nCreate a volume group belonging to a machine with the\ngiven system_id.\n\nNote that at least one valid block device or partition is required.\n\n:param name: Required.  Name of the volume group.\n:type name: String\n\n :param uuid: Optional.  (optional) UUID of the volume\ngroup.\n:type uuid: String\n\n :param block_devices: Optional.  Block devices to add\nto the volume group.\n:type block_devices: String\n\n :param partitions: Optional.  Partitions to add to the\nvolume group.\n:type partitions: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage volume groups on a machine.",
        "name": "VolumeGroupsHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/volume-groups/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/volume-groups/"
      },
      "name": "VolumeGroupsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a RAID\n\nRead RAID with the given id on a machine with the\ngiven system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a RAID\n\nUpdate a RAID with the given id on a machine with the\ngiven system_id.\n\n:param name: Optional.  Name of the RAID.\n:type name: String\n\n :param uuid: Optional.  UUID of the RAID.\n:type uuid: String\n\n :param add_block_devices: Optional.  Block devices to\nadd to the RAID.\n:type add_block_devices: String\n\n :param remove_block_devices: Optional.  Block devices\nto remove from the RAID.\n:type remove_block_devices: String\n\n :param add_spare_devices: Optional.  Spare block\ndevices to add to the RAID.\n:type add_spare_devices: String\n\n :param remove_spare_devices: Optional.  Spare block\ndevices to remove from the RAID.\n:type remove_spare_devices: String\n\n :param add_partitions: Optional.  Partitions to add to\nthe RAID.\n:type add_partitions: String\n\n :param remove_partitions: Optional.  Partitions to\nremove from the RAID.\n:type remove_partitions: String\n\n :param add_spare_partitions: Optional.  Spare\npartitions to add to the RAID.\n:type add_spare_partitions: String\n\n :param remove_spare_partitions: Optional.  Spare\npartitions to remove from the RAID.\n:type remove_spare_partitions: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a RAID\n\nDelete a RAID with the given id on a machine with the\ngiven system_id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a specific RAID (Redundant Array of Independent Disks) on a\nmachine.",
        "name": "RaidHandler",
        "params": [
          "system_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/raid/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/raid/{id}/"
      },
      "name": "RaidHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a discovery\n\nRead a discovery with the given discovery_id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Read or delete an observed discovery.",
        "name": "DiscoveryHandler",
        "params": [
          "discovery_id"
        ],
        "path": "/MAAS/api/2.0/discovery/{discovery_id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/discovery/{discovery_id}/"
      },
      "name": "DiscoveryHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List all RAIDs\n\nList all RAIDs belonging to a machine with the given\nsystem_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Set up a RAID\n\nSet up a RAID on a machine with the given system_id.\n\n:param name: Optional.  Name of the RAID.\n:type name: String\n\n :param uuid: Optional.  UUID of the RAID.\n:type uuid: String\n\n :param level: Required.  RAID level.\n:type level: Int\n\n :param block_devices: Optional.  Block devices to add\nto the RAID.\n:type block_devices: String\n\n :param spare_devices: Optional.  Spare block devices to\nadd to the RAID.\n:type spare_devices: String\n\n :param partitions: Optional.  Partitions to add to the\nRAID.\n:type partitions: String\n\n :param spare_partitions: Optional.  Spare partitions to\nadd to the RAID.\n:type spare_partitions: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage all RAIDs (Redundant Array of Independent Disks) on a machine.",
        "name": "RaidsHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/raids/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/raids/"
      },
      "name": "RaidsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "import",
            "doc": "Import boot resources\n\nImport the boot resources.\n\n",
            "op": "import",
            "restful": false
          },
          {
            "method": "POST",
            "name": "stop_import",
            "doc": "Stop import boot resources\n\nStop import the boot resources.\n\n",
            "op": "stop_import",
            "restful": false
          },
          {
            "method": "GET",
            "name": "is_importing",
            "doc": "Importing status\n\nGet the status of importing resources.\n\n",
            "op": "is_importing",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List boot resources\n\nList all boot resources\n\n:param type: Optional.  Type of boot resources to list.\nIf not provided, returns all types.\n:type type: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Upload a new boot resource\n\nUploads a new boot resource.\n\n:param name: Required.  Name of the boot resource.\n:type name: String\n\n :param architecture: Required.  Architecture the boot\nresource supports.\n:type architecture: String\n\n :param sha256: Required.  The ``sha256`` hash of the\nresource.\n:type sha256: String\n\n :param size: Required.  The size of the resource in\nbytes.\n:type size: String\n\n :param title: Optional.  Title for the boot resource.\n:type title: String\n\n :param filetype: Optional.  Filetype for uploaded\ncontent. (Default: ``tgz``. Supported: ``tgz``, ``tbz``, ``txz``,\n``ddtgz``, ``ddtbz``, ``ddtxz``, ``ddtar``, ``ddbz2``, ``ddgz``,\n``ddxz``, ``ddraw``)\n:type filetype: String\n\n :param content: Optional.  Image content. Note: this is\nnot a normal parameter, but an ``application/octet-stream`` file\nupload.\n:type content: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the boot resources.",
        "name": "BootResourcesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/boot-resources/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-resources/"
      },
      "name": "BootResourcesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a bcache device\n\nRead bcache device on a machine.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a bcache\n\nUpdate bcache on a machine.\n\nSpecifying both a device and a partition for a given role (cache or\nbacking) is not allowed.\n\n:param name: Optional.  Name of the Bcache.\n:type name: String\n\n :param uuid: Optional.  UUID of the Bcache.\n:type uuid: String\n\n :param cache_set: Optional.  Cache set to replace\ncurrent one.\n:type cache_set: String\n\n :param backing_device: Optional.  Backing block device\nto replace current one.\n:type backing_device: String\n\n :param backing_partition: Optional.  Backing partition\nto replace current one.\n:type backing_partition: String\n\n :param cache_mode: Optional.  Cache mode:\n``WRITEBACK``, ``WRITETHROUGH``, ``WRITEAROUND``.\n:type cache_mode: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a bcache\n\nDelete bcache on a machine.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage bcache device on a machine.",
        "name": "BcacheHandler",
        "params": [
          "system_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/bcache/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/bcache/{id}/"
      },
      "name": "BcacheHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List all bcache devices\n\nList all bcache devices belonging to a\nmachine.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Creates a bcache\n\nCreates a bcache.\n\nSpecifying both a device and a partition for a given role (cache or\nbacking) is not allowed.\n\n:param name: Optional.  Name of the Bcache.\n:type name: String\n\n :param uuid: Optional.  UUID of the Bcache.\n:type uuid: String\n\n :param cache_set: Optional.  Cache set.\n:type cache_set: String\n\n :param backing_device: Optional.  Backing block device.\n:type backing_device: String\n\n :param backing_partition: Optional.  Backing partition.\n:type backing_partition: String\n\n :param cache_mode: Optional.  Cache mode:\n``WRITEBACK``, ``WRITETHROUGH``, ``WRITEAROUND``.\n:type cache_mode: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage bcache devices on a machine.",
        "name": "BcachesHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/bcaches/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/bcaches/"
      },
      "name": "BcachesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "by_unknown_mac",
            "doc": "List all discovered devices with unknown MAC\n\nFilters the list of discovered devices by excluding any\ndiscoveries where an interface known to MAAS is configured with a\ndiscovered MAC address.\n\nDiscoveries are listed in the order they were last observed on the\nnetwork (most recent first).\n\n",
            "op": "by_unknown_mac",
            "restful": false
          },
          {
            "method": "GET",
            "name": "by_unknown_ip",
            "doc": "List all discovered devices with an unknown IP address\n\nLists all discovered devices with an unknown IP address.\n\nFilters the list of discovered devices by excluding any discoveries\nwhere a known MAAS node is configured with the IP address of a\ndiscovery, or has been observed using it after it was assigned by a\nMAAS-managed DHCP server.\n\nDiscoveries are listed in the order they were last observed on the\nnetwork (most recent first).\n\n",
            "op": "by_unknown_ip",
            "restful": false
          },
          {
            "method": "GET",
            "name": "by_unknown_ip_and_mac",
            "doc": "Lists all discovered devices completely unknown to MAAS\n\nLists all discovered devices completely unknown to MAAS.\n\nFilters the list of discovered devices by excluding any discoveries\nwhere a known MAAS node is configured with either the MAC address or\nthe IP address of a discovery.\n\nDiscoveries are listed in the order they were last observed on the\nnetwork (most recent first).\n\n",
            "op": "by_unknown_ip_and_mac",
            "restful": false
          },
          {
            "method": "POST",
            "name": "clear",
            "doc": "Delete all discovered neighbours\n\nDeletes all discovered neighbours and/or mDNS entries.\n\nNote: One of ``mdns``, ``neighbours``, or ``all`` parameters must be\nsupplied.\n\n:param mdns: Optional.  Delete all mDNS entries.\n:type mdns: Boolean\n\n :param neighbours: Optional.  Delete all neighbour\nentries.\n:type neighbours: Boolean\n\n :param all: Optional.  Delete all discovery data.\n:type all: Boolean\n\n ",
            "op": "clear",
            "restful": false
          },
          {
            "method": "POST",
            "name": "clear_by_mac_and_ip",
            "doc": "Delete discoveries that match a MAC and IP\n\nDeletes all discovered neighbours (and associated reverse\nDNS entries) associated with the given IP address and MAC address.\n\n:param ip: Required.  IP address\n:type ip: String\n\n :param mac: Required.  MAC address\n:type mac: String\n\n ",
            "op": "clear_by_mac_and_ip",
            "restful": false
          },
          {
            "method": "POST",
            "name": "scan",
            "doc": "Run discovery scan on rack networks\n\nImmediately run a neighbour discovery scan on all rack\nnetworks.\n\nThis command causes each connected rack controller to execute the\n'maas-rack scan-network' command, which will scan all CIDRs configured\non the rack controller using 'nmap' (if it is installed) or 'ping'.\n\nNetwork discovery must not be set to 'disabled' for this command to be\nuseful.\n\nScanning will be started in the background, and could take a long time\non rack controllers that do not have 'nmap' installed and are connected\nto large networks.\n\nIf the call is a success, this method will return a dictionary of\nresults with the following keys:\n\n``result``: A human-readable string summarizing the results.\n\n``scan_attempted_on``: A list of rack system_id values where a scan\nwas attempted. (That is, an RPC connection was successful and a\nsubsequent call was intended.)\n\n``failed_to_connect_to``: A list of rack system_id values where the\nRPC connection failed.\n\n``scan_started_on``: A list of rack system_id values where a scan was\nsuccessfully started.\n\n``scan_failed_on``: A list of rack system_id values where a scan was\nattempted, but failed because a scan was already in progress.\n\n``rpc_call_timed_out_on``: A list of rack system_id values where the\nRPC connection was made, but the call timed out before a ten second\ntimeout elapsed.\n\n:param cidr: Optional.  The subnet CIDR(s) to scan (can\nbe specified multiple times). If not specified, defaults to all\nnetworks.\n:type cidr: String\n\n :param force: Optional.  If True, will force the scan,\neven if all networks are specified. (This may not be the best idea,\ndepending on acceptable use agreements, and the politics of the\norganization that owns the network.) Note that this parameter is\nrequired if all networks are specified. Default: False.\n:type force: Boolean\n\n :param always_use_ping: Optional.  If True, will force\nthe scan to use 'ping' even if 'nmap' is installed. Default: False.\n:type always_use_ping: String\n\n :param slow: Optional.  If True, and 'nmap' is being\nused, will limit the scan to nine packets per second. If the scanner is\n'ping', this option has no effect. Default: False.\n:type slow: String\n\n :param threads: Optional.  The number of threads to use\nduring scanning. If 'nmap' is the scanner, the default is one thread\nper 'nmap' process. If 'ping' is the scanner, the default is four\nthreads per CPU.\n:type threads: String\n\n ",
            "op": "scan",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List all discovered devices\n\nLists all the devices MAAS has discovered. Discoveries are\nlisted in the order they were last observed on the network (most recent\nfirst).\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Query observed discoveries.",
        "name": "DiscoveriesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/discovery/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/discovery/"
      },
      "name": "DiscoveriesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a bcache cache set\n\nRead bcache cache set on a machine.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a bcache set\n\nUpdate bcache cache set on a machine.\n\nNote: specifying both a cache_device and a cache_partition is not\nallowed.\n\n:param cache_device: Optional.  Cache block device to\nreplace current one.\n:type cache_device: String\n\n :param cache_partition: Optional.  Cache partition to\nreplace current one.\n:type cache_partition: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a bcache set\n\nDelete bcache cache set on a machine.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage bcache cache set on a machine.",
        "name": "BcacheCacheSetHandler",
        "params": [
          "system_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/bcache-cache-set/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/bcache-cache-set/{id}/"
      },
      "name": "BcacheCacheSetHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "query",
            "doc": "List node events\n\nList node events, optionally filtered by various criteria\nvia URL query parameters.\n\n:param hostname: Optional.  An optional hostname. Only\nevents relating to the node with the matching hostname will be\nreturned. This can be specified multiple times to get events relating\nto more than one node.\n:type hostname: String\n\n :param mac_address: Optional.  An optional list of MAC\naddresses.  Only nodes with matching MAC addresses will be returned.\n:type mac_address: String\n\n :param id: Optional.  An optional list of system ids.\nOnly nodes with matching system ids will be returned.\n:type id: String\n\n :param zone: Optional.  An optional name for a physical\nzone. Only nodes in the zone will be returned.\n:type zone: String\n\n :param agent_name: Optional.  An optional agent name.\nOnly nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param level: Optional.  Desired minimum log level of\nreturned events. Returns this level of events and greater. Choose from:\nAUDIT, CRITICAL, DEBUG, ERROR, INFO, WARNING.  The default is INFO.\n:type level: String\n\n :param limit: Optional.  Optional number of events to\nreturn. Default 100.  Maximum: 1000.\n:type limit: String\n\n :param before: Optional.  Optional event id.  Defines\nwhere to start returning older events.\n:type before: String\n\n :param after: Optional.  Optional event id.  Defines\nwhere to start returning newer events.\n:type after: String\n\n :param owner: Optional.  If specified, filters the list\nto show only events owned by the specified username.\n:type owner: String\n\n ",
            "op": "query",
            "restful": false
          }
        ],
        "doc": "Retrieve filtered node events.\n\nA specific Node's events is identified by specifying one or more\nids, hostnames, or mac addresses as a list.",
        "name": "EventsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/events/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/events/"
      },
      "name": "EventsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List bcache sets\n\nList all bcache cache sets belonging to a machine.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Creates a bcache cache set\n\nCreates a bcache cache set.\n\nNote: specifying both a cache_device and a cache_partition is not\nallowed.\n\n:param cache_device: Optional.  Cache block device.\n:type cache_device: String\n\n :param cache_partition: Optional.   Cache partition.\n:type cache_partition: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage bcache cache sets on a machine.",
        "name": "BcacheCacheSetsHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/bcache-cache-sets/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/bcache-cache-sets/"
      },
      "name": "BcacheCacheSetsHandler"
    },
    {
      "anon": {
        "actions": [
          {
            "method": "GET",
            "name": "get_by_key",
            "doc": "Get a file by key\n\nGet a file from the file storage with the given key.\n\n:param key: Required.  The file's key.\n:type key: String\n\n ",
            "op": "get_by_key",
            "restful": false
          }
        ],
        "doc": "Anonymous file operations.\n\nThis is needed for Juju. The story goes something like this:\n\n- The Juju provider will upload a file using an \"unguessable\" name.\n\n- The name of this file (or its URL) will be shared with all the agents in\n  the environment. They cannot modify the file, but they can access it\n  without credentials.",
        "name": "AnonFilesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/files/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/files/"
      },
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "get",
            "doc": "Get a named file\n\nGet a named file from the file storage.\n\n:param filename: Required.  The name of the file.\n:type filename: String\n\n ",
            "op": "get",
            "restful": false
          },
          {
            "method": "GET",
            "name": "get_by_key",
            "doc": "Get a file by key\n\nGet a file from the file storage with the given key.\n\n:param key: Required.  The file's key.\n:type key: String\n\n ",
            "op": "get_by_key",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List files\n\nList the files from the file storage.\n\nThe returned files are ordered by file name and the content is\nexcluded.\n\n:param prefix: Optional.  Prefix used to filter\nreturned files.\n:type prefix: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Add a new file\n\nAdd a new file to the file storage.\n\n:param filename: Required.  The file name to use in\nstorage.\n:type filename: String\n\n :param file: Required.  File data. Content type must be\n``application/octet-stream``.\n:type file: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a file\n\nDelete a stored file.\n\n:param filename: Required.  The filename of the object\nto be deleted.\n:type filename: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all the files in this MAAS.",
        "name": "FilesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/files/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/files/"
      },
      "name": "FilesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a VMFS datastore.\n\nRead a VMFS datastore with the given id on the machine\nwith the given system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a VMFS datastore.\n\nUpdate a VMFS datastore with the given id on the machine\nwith the given system_id.\n\n:param name: Optional.  Name of the VMFS datastore.\n:type name: String\n\n :param uuid: Optional.  UUID of the VMFS datastore.\n:type uuid: String\n\n :param add_block_devices: Optional.  Block devices to\nadd to the VMFS datastore.\n:type add_block_devices: String\n\n :param add_partitions: Optional.  Partitions to add to\nthe VMFS datastore.\n:type add_partitions: String\n\n :param remove_partitions: Optional.  Partitions to\nremove from the VMFS datastore.\n:type remove_partitions: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete the specified VMFS datastore.\n\nDelete a VMFS datastore with the given id from the machine\nwith the given system_id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage VMFS datastore on a machine.",
        "name": "VmfsDatastoreHandler",
        "params": [
          "system_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/vmfs-datastore/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/vmfs-datastore/{id}/"
      },
      "name": "VmfsDatastoreHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a stored file\n\nReads a stored file with the given file name.\n\nThe content of the file is base64-encoded.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a file\n\nDelete a file with the given file name.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a FileStorage object.\n\nThe file is identified by its filename and owner.",
        "name": "FileHandler",
        "params": [
          "filename"
        ],
        "path": "/MAAS/api/2.0/files/{filename}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/files/{filename}/"
      },
      "name": "FileHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List all VMFS datastores.\n\nList all VMFS datastores belonging to a machine with the\ngiven system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a VMFS datastore.\n\nCreate a VMFS datastore belonging to a machine with the\ngiven system_id.\n\nNote that at least one valid block device or partition is required.\n\n:param name: Required.  Name of the VMFS datastore.\n:type name: String\n\n :param uuid: Optional.  (optional) UUID of the VMFS\ngroup.\n:type uuid: String\n\n :param block_devices: Optional.  Block devices to add\nto the VMFS datastore.\n:type block_devices: String\n\n :param partitions: Optional.  Partitions to add to the\nVMFS datastore.\n:type partitions: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage VMFS datastores on a machine.",
        "name": "VmfsDatastoresHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/vmfs-datastores/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/vmfs-datastores/"
      },
      "name": "VmfsDatastoresHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "reserve",
            "doc": "Reserve an IP address\n\nReserve an IP address for use outside of MAAS.\n\nReturns an IP adddress that MAAS will not allow any of its known nodes\nto use; it is free for use by the requesting user until released by the\nuser.\n\nThe user must supply either a subnet or a specific IP address within a\nsubnet.\n\n:param subnet: Optional.  CIDR representation of the\nsubnet on which the IP reservation is required. E.g. 10.1.2.0/24\n:type subnet: String\n\n :param ip: Optional.  The IP address, which must be\nwithin a known subnet.\n:type ip: String\n\n :param ip_address: Optional.  (Deprecated.) Alias for\n'ip' parameter. Provided for backward compatibility.\n:type ip_address: String\n\n :param hostname: Optional.  The hostname to use for the\nspecified IP address.  If no domain component is given, the default\ndomain will be used.\n:type hostname: String\n\n :param mac: Optional.  The MAC address that should be\nlinked to this reservation.\n:type mac: String\n\n ",
            "op": "reserve",
            "restful": false
          },
          {
            "method": "POST",
            "name": "release",
            "doc": "Release an IP address\n\nRelease an IP address that was previously reserved by the\nuser.\n\n:param ip: Required.  The IP address to release.\n:type ip: String\n\n :param force: Optional.  If True, allows a MAAS\nadministrator to force an IP address to be released, even if it is not\na user-reserved IP address or does not belong to the requesting user.\nUse with caution.\n:type force: Boolean\n\n :param discovered: Optional.  If True, allows a MAAS\nadministrator to release a discovered address. Only valid if 'force' is\nspecified. If not specified, MAAS will attempt to release any type of\naddress except for discovered addresses.\n:type discovered: Boolean\n\n ",
            "op": "release",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List IP addresses\n\nList all IP addresses known to MAAS.\n\nBy default, gets a listing of all IP addresses allocated to the\nrequesting user.\n\n:param ip: Optional.  If specified, will only display\ninformation for the specified IP address.\n:type ip: String\n\n :param all: Optional.  (Admin users only) If True, all\nreserved IP addresses will be shown. (By default, only addresses of\ntype 'User reserved' that are assigned to the requesting user are\nshown.)\n:type all: Boolean\n\n :param owner: Optional.  (Admin users only) If\nspecified, filters the list to show only IP addresses owned by the\nspecified username.\n:type owner: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage IP addresses allocated by MAAS.",
        "name": "IPAddressesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/ipaddresses/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/ipaddresses/"
      },
      "name": "IPAddressesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "link_subnet",
            "doc": "Link interface to a subnet\n\nLink an interface with the given system_id and interface\nid to a subnet.\n\n:param mode: Required.  ``AUTO``,\n``DHCP``, ``STATIC`` or ``LINK_UP`` connection to subnet.\n\nMode definitions:\n\n- ``AUTO``: Assign this interface a static IP address from the provided\n  subnet. The subnet must be a managed subnet. The IP address will not\n  be assigned until the node goes to be deployed.\n\n- ``DHCP``: Bring this interface up with DHCP on the given subnet. Only\n  one subnet can be set to ``DHCP``. If the subnet is managed this\n  interface will pull from the dynamic IP range.\n\n- ``STATIC``: Bring this interface up with a static IP address on the\n  given subnet. Any number of static links can exist on an interface.\n\n- ``LINK_UP``: Bring this interface up only on the given subnet. No IP\n  address will be assigned to this interface. The interface cannot have\n  any current ``AUTO``, ``DHCP`` or ``STATIC`` links.\n:type mode: String\n\n :param subnet: Required.  Subnet id linked to interface.\n:type subnet: Int\n\n :param ip_address: Optional.  IP address for the\ninterface in subnet. Only used when mode is ``STATIC``. If not provided\nan IP address from subnet will be auto selected.\n:type ip_address: String\n\n :param force: Optional.  If True, allows ``LINK_UP``\nto be set on the interface even if other links already exist. Also\nallows the selection of any VLAN, even a VLAN MAAS does not believe the\ninterface to currently be on. Using this option will cause all other\nlinks on the interface to be deleted. (Defaults to False.)\n:type force: Boolean\n\n :param default_gateway: Optional.  True sets the\ngateway IP address for the subnet as the default gateway for the node\nthis interface belongs to. Option can only be used with the ``AUTO``\nand ``STATIC`` modes.\n:type default_gateway: String\n\n ",
            "op": "link_subnet",
            "restful": false
          },
          {
            "method": "POST",
            "name": "disconnect",
            "doc": "Disconnect an interface\n\nDisconnect an interface with the given system_id and\ninterface id.\n\nDeletes any linked subnets and IP addresses, and disconnects the\ninterface from any associated VLAN.\n\n",
            "op": "disconnect",
            "restful": false
          },
          {
            "method": "POST",
            "name": "unlink_subnet",
            "doc": "Unlink interface from subnet\n\nUnlink an interface with the given system_id and interface\nid from a subnet.\n\n:param id: Optional.  ID of the subnet link on the\ninterface to remove.\n:type id: Int\n\n ",
            "op": "unlink_subnet",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_default_gateway",
            "doc": "Set the default gateway on a machine\n\nSet the given interface id on the given system_id as the\ndefault gateway.\n\nIf this interface has more than one subnet with a gateway IP in the\nsame IP address family then specifying the ID of the link on\nthis interface is required.\n\n:param link_id: Optional.  ID of the link on this\ninterface to select the default gateway IP address from.\n:type link_id: Int\n\n ",
            "op": "set_default_gateway",
            "restful": false
          },
          {
            "method": "POST",
            "name": "add_tag",
            "doc": "Add a tag to an interface\n\nAdd a tag to an interface with the given system_id and\ninterface id.\n\n:param tag: Optional.  The tag to add.\n:type tag: String\n\n ",
            "op": "add_tag",
            "restful": false
          },
          {
            "method": "POST",
            "name": "remove_tag",
            "doc": "Remove a tag from an interface\n\nRemove a tag from an interface with the given system_id\nand interface id.\n\n:param tag: Optional.  The tag to remove.\n:type tag: String\n\n ",
            "op": "remove_tag",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read an interface\n\nRead an interface with the given system_id and interface\nid.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update an interface\n\nUpdate an interface with the given system_id and interface\nid.\n\nNote: machines must have a status of Ready or Broken to have access to\nall options. Machines with Deployed status can only have the name\nand/or mac_address updated for an interface. This is intented to allow\na bad interface to be replaced while the machine remains deployed.\n\n:param name: Optional.  (Physical interfaces) Name of\nthe interface.\n:type name: String\n\n :param mac_address: Optional.  (Physical interfaces)\nMAC address of the interface.\n:type mac_address: String\n\n :param tags: Optional.  (Physical interfaces) Tags for\nthe interface.\n:type tags: String\n\n :param vlan: Optional.  (Physical interfaces) Untagged\nVLAN id the interface is connected to.  If not set then the interface\nis considered disconnected.\n:type vlan: Int\n\n :param name: Optional.  (Bond interfaces) Name of the\ninterface.\n:type name: String\n\n :param mac_address: Optional.  (Bond interfaces) MAC\naddress of the interface.\n:type mac_address: String\n\n :param tags: Optional.  (Bond interfaces) Tags for the\ninterface.\n:type tags: String\n\n :param vlan: Optional.  (Bond interfaces) Untagged VLAN id\nthe interface is connected to. If not set then the interface is\nconsidered disconnected.\n:type vlan: Int\n\n :param parents: Optional.  (Bond interfaces) Parent\ninterface ids that make this bond.\n:type parents: Int\n\n :param tags: Optional.  (VLAN interfaces) Tags for the\ninterface.\n:type tags: String\n\n :param vlan: Optional.  (VLAN interfaces) Tagged VLAN id\nthe interface is connected to.\n:type vlan: Int\n\n :param parent: Optional.  (VLAN interfaces) Parent\ninterface ids for the VLAN interface.\n:type parent: Int\n\n :param name: Optional.  (Bridge interfaces) Name of the\ninterface.\n:type name: String\n\n :param mac_address: Optional.  (Bridge interfaces) MAC\naddress of the interface.\n:type mac_address: String\n\n :param tags: Optional.  (Bridge interfaces) Tags for\nthe interface.\n:type tags: String\n\n :param vlan: Optional.  (Bridge interfaces) VLAN id the\ninterface is connected to.\n:type vlan: Int\n\n :param parent: Optional.  (Bridge interfaces) Parent\ninterface ids for this bridge interface.\n:type parent: Int\n\n :param bridge_type: Optional.  (Bridge interfaces) Type\nof bridge to create. Possible values are: ``standard``, ``ovs``.\n:type bridge_type: String\n\n :param bridge_stp: Optional.  (Bridge interfaces) Turn\nspanning tree protocol on or off.  (Default: False).\n:type bridge_stp: Boolean\n\n :param bridge_fd: Optional.  (Bridge interfaces) Set\nbridge forward delay to time seconds.  (Default: 15).\n:type bridge_fd: Int\n\n :param bond_miimon: Optional.  (Bonds) The link monitoring\nfreqeuncy in milliseconds.  (Default: 100).\n:type bond_miimon: Int\n\n :param bond_downdelay: Optional.  (Bonds) Specifies the\ntime, in milliseconds, to wait before disabling a slave after a link\nfailure has been detected.\n:type bond_downdelay: Int\n\n :param bond_updelay: Optional.  (Bonds) Specifies the\ntime, in milliseconds, to wait before enabling a slave after a link\nrecovery has been detected.\n:type bond_updelay: Int\n\n :param bond_lacp_rate: Optional.  (Bonds) Option\nspecifying the rate in which we'll ask our link partner to transmit\nLACPDU packets in 802.3ad mode.  Available options are ``fast`` or\n``slow``.  (Default: ``slow``).\n:type bond_lacp_rate: String\n\n :param bond_xmit_hash_policy: Optional.  (Bonds) The\ntransmit hash policy to use for slave selection in balance-xor,\n802.3ad, and tlb modes.  Possible values are: ``layer2``, ``layer2+3``,\n``layer3+4``, ``encap2+3``, ``encap3+4``.\n:type bond_xmit_hash_policy: String\n\n :param bond_mode: Optional.  (Bonds)\nThe operating mode of the bond.  (Default: ``active-backup``).\n\nSupported bonding modes (bond-mode):\n\n- ``balance-rr``: Transmit packets in sequential order from the first\n  available slave through the last. This mode provides load balancing\n  and fault tolerance.\n\n- ``active-backup``: Only one slave in the bond is active. A different\n  slave becomes active if, and only if, the active slave fails. The\n  bond's MAC address is externally visible on only one port (network\n  adapter) to avoid confusing the switch.\n\n- ``balance-xor``: Transmit based on the selected transmit hash policy.\n  The default policy is a simple [(source MAC address XOR'd with\n  destination MAC address XOR packet type ID) modulo slave count].\n\n- ``broadcast``: Transmits everything on all slave interfaces. This\n  mode provides fault tolerance.\n\n- ``802.3ad``: IEEE 802.3ad Dynamic link aggregation. Creates\n  aggregation groups that share the same speed and duplex settings.\n  Utilizes all slaves in the active aggregator according to the 802.3ad\n  specification.\n\n- ``balance-tlb``: Adaptive transmit load balancing: channel bonding\n  that does not require any special switch support.\n\n- ``balance-alb``: Adaptive load balancing: includes balance-tlb plus\n  receive load balancing (rlb) for IPV4 traffic, and does not require\n  any special switch support. The receive load balancing is achieved by\n  ARP negotiation.\n:type bond_mode: String\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: String\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: String\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: String\n\n :param link_connected: Optional. \n(Physical interfaces) Whether or not the interface is physically\nconntected to an uplink.  (Default: True).\n:type link_connected: Boolean\n\n :param interface_speed: Optional.  (Physical interfaces)\nThe speed of the interface in Mbit/s. (Default: 0).\n:type interface_speed: Int\n\n :param link_speed: Optional.  (Physical interfaces)\nThe speed of the link in Mbit/s. (Default: 0).\n:type link_speed: Int\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete an interface\n\nDelete an interface with the given system_id and interface\nid.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a node's or device's interface.",
        "name": "InterfaceHandler",
        "params": [
          "system_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/interfaces/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/interfaces/{id}/"
      },
      "name": "InterfaceHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "connect_macs",
            "doc": "Connect the given MAC addresses to this network.\n\nThis endpoint is no longer available. Use the 'subnet' endpoint\ninstead.",
            "op": "connect_macs",
            "restful": false
          },
          {
            "method": "POST",
            "name": "disconnect_macs",
            "doc": "Disconnect the given MAC addresses from this network.\n\nThis endpoint is no longer available. Use the 'subnet' endpoint\ninstead.",
            "op": "disconnect_macs",
            "restful": false
          },
          {
            "method": "GET",
            "name": "list_connected_macs",
            "doc": "Returns the list of MAC addresses connected to this network.\n\nOnly MAC addresses for nodes visible to the requesting user are\nreturned.",
            "op": "list_connected_macs",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read network definition.",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update network definition.\n\nThis endpoint is no longer available. Use the 'subnet' endpoint\ninstead.\n\n:param name: A simple name for the network, to make it easier to\n    refer to.  Must consist only of letters, digits, dashes, and\n    underscores.\n:param ip: Base IP address for the network, e.g. `10.1.0.0`.  The host\n    bits will be zeroed.\n:param netmask: Subnet mask to indicate which parts of an IP address\n    are part of the network address.  For example, `255.255.255.0`.\n:param vlan_tag: Optional VLAN tag: a number between 1 and 0xffe (4094)\n    inclusive, or zero for an untagged network.\n:param description: Detailed description of the network for the benefit\n    of users and administrators.",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete network definition.\n\nThis endpoint is no longer available. Use the 'subnet' endpoint\ninstead.",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a network.\n\nThis endpoint is deprecated. Use the new 'subnet' endpoint instead.",
        "name": "NetworkHandler",
        "params": [
          "name"
        ],
        "path": "/MAAS/api/2.0/networks/{name}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/networks/{name}/"
      },
      "name": "NetworkHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "create_physical",
            "doc": "Create a physical interface\n\nCreate a physical interface on a machine and device.\n\n:param name: Optional.  Name of the interface.\n:type name: String\n\n :param mac_address: Required.  MAC address of the\ninterface.\n:type mac_address: String\n\n :param tags: Optional.  Tags for the interface.\n:type tags: String\n\n :param vlan: Optional.  Untagged VLAN the interface is\nconnected to. If not provided then the interface is considered\ndisconnected.\n:type vlan: String\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: Int\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: Boolean\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: Boolean\n\n ",
            "op": "create_physical",
            "restful": false
          },
          {
            "method": "POST",
            "name": "create_bond",
            "doc": "Create a bond inteface\n\nCreate a bond interface on a machine.\n\n:param name: Required.  Name of the interface.\n:type name: String\n\n :param mac_address: Optional.  MAC address of the\ninterface.\n:type mac_address: String\n\n :param tags: Optional.  Tags for the interface.\n:type tags: String\n\n :param vlan: Optional.  VLAN the interface is connected\nto. If not provided then the interface is considered disconnected.\n:type vlan: String\n\n :param parents: Required.  Parent interface ids that make\nthis bond.\n:type parents: Int\n\n :param bond_mode: Optional.  The\noperating mode of the bond.  (Default: active-backup).\n\nSupported bonding modes:\n\n- ``balance-rr``: Transmit packets in sequential order from the first\n  available slave through the last. This mode provides load balancing\n  and fault tolerance.\n\n- ``active-backup``: Only one slave in the bond is active. A different\n  slave becomes active if, and only if, the active slave fails. The\n  bond's MAC address is externally visible on only one port (network\n  adapter) to avoid confusing the switch.\n\n- ``balance-xor``: Transmit based on the selected transmit hash policy.\n  The default policy is a simple [(source MAC address XOR'd with\n  destination MAC address XOR packet type ID) modulo slave count].\n\n- ``broadcast``: Transmits everything on all slave interfaces. This\n  mode provides fault tolerance.\n\n- ``802.3ad``: IEEE 802.3ad dynamic link aggregation. Creates\n  aggregation groups that share the same speed and duplex settings.\n  Uses all slaves in the active aggregator according to the 802.3ad\n  specification.\n\n- ``balance-tlb``: Adaptive transmit load balancing: channel bonding\n  that does not require any special switch support.\n\n- ``balance-alb``: Adaptive load balancing: includes balance-tlb plus\n  receive load balancing (rlb) for IPV4 traffic, and does not require\n  any special switch support. The receive load balancing is achieved by\n  ARP negotiation.\n:type bond_mode: String\n\n :param bond_miimon: Optional.  The link monitoring\nfreqeuncy in milliseconds.  (Default: 100).\n:type bond_miimon: Int\n\n :param bond_downdelay: Optional.  Specifies the time, in\nmilliseconds, to wait before disabling a slave after a link failure has\nbeen detected.\n:type bond_downdelay: Int\n\n :param bond_updelay: Optional.  Specifies the time, in\nmilliseconds, to wait before enabling a slave after a link recovery has\nbeen detected.\n:type bond_updelay: Int\n\n :param bond_lacp_rate: Optional.  Option specifying the\nrate at which to ask the link partner to transmit LACPDU packets in\n802.3ad mode. Available options are ``fast`` or ``slow``. (Default:\n``slow``).\n:type bond_lacp_rate: String\n\n :param bond_xmit_hash_policy: Optional.  The transmit\nhash policy to use for slave selection in balance-xor, 802.3ad, and tlb\nmodes. Possible values are: ``layer2``, ``layer2+3``, ``layer3+4``,\n``encap2+3``, ``encap3+4``. (Default: ``layer2``)\n:type bond_xmit_hash_policy: String\n\n :param bond_num_grat_arp: Optional.  The number of peer\nnotifications (IPv4 ARP or IPv6 Neighbour Advertisements) to be issued\nafter a failover. (Default: 1)\n:type bond_num_grat_arp: Int\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: Int\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: Boolean\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: Boolean\n\n ",
            "op": "create_bond",
            "restful": false
          },
          {
            "method": "POST",
            "name": "create_vlan",
            "doc": "Create a VLAN interface\n\nCreate a VLAN interface on a machine.\n\n:param tags: Optional.  Tags for the interface.\n:type tags: String\n\n :param vlan: Required.  Tagged VLAN the interface is\nconnected to.\n:type vlan: String\n\n :param parent: Required.  Parent interface id for this VLAN\ninterface.\n:type parent: Int\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: Int\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: Boolean\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: Boolean\n\n ",
            "op": "create_vlan",
            "restful": false
          },
          {
            "method": "POST",
            "name": "create_bridge",
            "doc": "Create a bridge interface\n\nCreate a bridge interface on a machine.\n\n:param name: Optional.  Name of the interface.\n:type name: String\n\n :param mac_address: Optional.  MAC address of the\ninterface.\n:type mac_address: String\n\n :param tags: Optional.  Tags for the interface.\n:type tags: String\n\n :param vlan: Optional.  VLAN the interface is connected\nto.\n:type vlan: String\n\n :param parent: Optional.  Parent interface id for this\nbridge interface.\n:type parent: Int\n\n :param bridge_type: Optional.  The type of bridge\nto create. Possible values are: ``standard``, ``ovs``.\n:type bridge_type: String\n\n :param bridge_stp: Optional.  Turn spanning tree\nprotocol on or off. (Default: False).\n:type bridge_stp: Boolean\n\n :param bridge_fd: Optional.  Set bridge forward delay\nto time seconds. (Default: 15).\n:type bridge_fd: Int\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: Int\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: Boolean\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: Boolean\n\n ",
            "op": "create_bridge",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List interfaces\n\nList all interfaces belonging to a machine, device, or\nrack controller.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage interfaces on a node.",
        "name": "InterfacesHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/interfaces/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/interfaces/"
      },
      "name": "InterfacesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List networks.\n\n:param node: Optionally, nodes which must be attached to any returned\n    networks.  If more than one node is given, the result will be\n    restricted to networks that these nodes have in common.",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Define a network.\n\nThis endpoint is no longer available. Use the 'subnets' endpoint\ninstead.",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the networks.\n\nThis endpoint is deprecated. Use the new 'subnets' endpoint instead.",
        "name": "NetworksHandler",
        "params": [],
        "path": "/MAAS/api/2.0/networks/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/networks/"
      },
      "name": "NetworksHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "details",
            "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
            "op": "details",
            "restful": false
          },
          {
            "method": "GET",
            "name": "power_parameters",
            "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
            "op": "power_parameters",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a node\n\nDeletes a node with a given system_id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual Node.\n\nThe Node is identified by its system_id.",
        "name": "NodeHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/"
      },
      "name": "NodeHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "nodes",
            "doc": "List nodes by tag\n\nGet a JSON list containing node objects that match\nthe given tag name.\n\n",
            "op": "nodes",
            "restful": false
          },
          {
            "method": "GET",
            "name": "machines",
            "doc": "List machines by tag\n\nGet a JSON list containing machine objects that match\nthe given tag name.\n\n",
            "op": "machines",
            "restful": false
          },
          {
            "method": "GET",
            "name": "devices",
            "doc": "List devices by tag\n\nGet a JSON list containing device objects that match\nthe given tag name.\n\n",
            "op": "devices",
            "restful": false
          },
          {
            "method": "GET",
            "name": "rack_controllers",
            "doc": "List rack controllers by tag\n\nGet a JSON list containing rack-controller objects\nthat match the given tag name.\n\n",
            "op": "rack_controllers",
            "restful": false
          },
          {
            "method": "GET",
            "name": "region_controllers",
            "doc": "List region controllers by tag\n\nGet a JSON list containing region-controller objects\nthat match the given tag name.\n\n",
            "op": "region_controllers",
            "restful": false
          },
          {
            "method": "POST",
            "name": "rebuild",
            "doc": "Trigger a tag-node mapping rebuild\n\nTells MAAS to rebuild the tag-to-node mappings.\nThis is a maintenance operation and should not be necessary under\nnormal circumstances. Adding nodes or updating a tag definition\nshould automatically trigger the mapping rebuild.\n\n",
            "op": "rebuild",
            "restful": false
          },
          {
            "method": "POST",
            "name": "update_nodes",
            "doc": "Add or remove nodes by tag\n\nAdd or remove nodes associated with the given tag.\nNote that you must supply either the ``add`` or ``remove``\nparameter.\n\n:param add: Optional.  The system_id to tag.\n:type add: String\n\n :param remove: Optional.  The system_id to untag.\n:type remove: String\n\n :param definition: Optional.  If given, the\ndefinition (XPATH expression) will be validated against the\ncurrent definition of the tag. If the value does not match, MAAS\nassumes the worker is out of date and will drop the update.\n:type definition: String\n\n :param rack_controller: Optional.  The system ID\nof the rack controller that processed the given tag initially.\nIf not given, the requester must be a MAAS admin. If given,\nthe requester must be the rack controller.\n:type rack_controller: String\n\n ",
            "op": "update_nodes",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a specific tag\n\nReturns a JSON object containing information about a\nspecific tag.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a tag\n\nUpdate elements of a given tag.\n\n:param name: Optional.  The new tag name. Because\nthe name will be used in urls, it should be short.\n:type name: String\n\n :param comment: Optional.  A description of what the\nthe tag will be used for in natural language.\n:type comment: String\n\n :param definition: Optional.  An XPATH query that is\nevaluated against the hardware_details stored for all nodes\n(i.e. the output of ``lshw -xml``).\n:type definition: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a tag\n\nDeletes a tag by name.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Tags are properties that can be associated with a Node and serve as\ncriteria for selecting and allocating nodes.\n\nA Tag is identified by its name.",
        "name": "TagHandler",
        "params": [
          "name"
        ],
        "path": "/MAAS/api/2.0/tags/{name}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/tags/{name}/"
      },
      "name": "TagHandler"
    },
    {
      "anon": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "GET",
            "name": "is_action_in_progress",
            "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_action_in_progress",
            "restful": false
          }
        ],
        "doc": "Anonymous access to Nodes.",
        "name": "AnonNodesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/nodes/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
      },
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_zone",
            "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
            "op": "set_zone",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all the nodes in the MAAS.",
        "name": "NodesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/nodes/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
      },
      "name": "NodesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List tags\n\nOutputs a JSON object containing an array of all\ncurrently defined tag objects.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a new tag\n\nCreate a new tag.\n\n:param name: Required.  The new tag name. Because\nthe name will be used in urls, it should be short.\n:type name: String\n\n :param comment: Optional.  A description of what the\nthe tag will be used for in natural language.\n:type comment: String\n\n :param definition: Optional.  An XPATH query that is\nevaluated against the hardware_details stored for all nodes\n(i.e. the output of ``lshw -xml``).\n:type definition: String\n\n :param kernel_opts: Optional.  Nodes associated\nwith this tag will add this string to their kernel options\nwhen booting. The value overrides the global ``kernel_opts``\nsetting. If more than one tag is associated with a node, command\nline will be concatenated from all associated tags, in alphabetic\ntag name order.\n:type kernel_opts: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage all tags known to MAAS.",
        "name": "TagsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/tags/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/tags/"
      },
      "name": "TagsHandler"
    },
    {
      "anon": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "MAAS version information\n\nRead version and capabilities of this MAAS instance.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Information about this MAAS instance.",
        "name": "VersionHandler",
        "params": [],
        "path": "/MAAS/api/2.0/version/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/version/"
      },
      "auth": null,
      "name": "VersionHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "details",
            "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
            "op": "details",
            "restful": false
          },
          {
            "method": "GET",
            "name": "power_parameters",
            "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
            "op": "power_parameters",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_workload_annotations",
            "doc": "Set key=value data\n\nSet key=value data for the current owner.\n\nPass any key=value form data to this method to add, modify, or remove.\nA key is removed when the value for that key is set to an empty string.\n\nThis operation will not remove any previous keys unless explicitly\npassed with an empty string. All workload annotations are removed when\nthe machine is no longer allocated to a user.\n\n:param key: Required.  ``key`` can be any string value.\n:type key: String\n\n ",
            "op": "set_workload_annotations",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_owner_data",
            "doc": "Deprecated, use set-workload-annotations.\n\nDeprecated, use set-workload-annotations instead.\n\n",
            "op": "set_owner_data",
            "restful": false
          },
          {
            "method": "GET",
            "name": "query_power_state",
            "doc": "Get the power state of a node\n\nGets the power state of a given node. MAAS sends a request\nto the node's power controller, which asks it about the node's state.\nThe reply to this could be delayed by up to 30 seconds while waiting\nfor the power controller to respond.  Use this method sparingly as it\nties up an appserver thread while waiting.\n\n:param system_id: Required.  The node to query.\n:type system_id: String\n\n ",
            "op": "query_power_state",
            "restful": false
          },
          {
            "method": "POST",
            "name": "power_on",
            "doc": "Turn on a node\n\nTurn on the given node with optional user-data and\ncomment.\n\n:param user_data: Optional.  Base64-encoded blob of\ndata to be made available to the nodes through the metadata service.\n:type user_data: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
            "op": "power_on",
            "restful": false
          },
          {
            "method": "POST",
            "name": "power_off",
            "doc": "Power off a node\n\nPowers off a given node.\n\n:param stop_mode: Optional.  Power-off mode. If 'soft',\nperform a soft power down if the node's power type supports it,\notherwise perform a hard power off. For all values other than 'soft',\nand by default, perform a hard power off. A soft power off generally\nasks the OS to shutdown the system gracefully before powering off,\nwhile a hard power off occurs immediately without any warning to the\nOS.\n:type stop_mode: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
            "op": "power_off",
            "restful": false
          },
          {
            "method": "POST",
            "name": "test",
            "doc": "Begin testing process for a node\n\nBegins the testing process for a given node.\n\nA node in the 'ready', 'allocated', 'deployed', 'broken', or any failed\nstate may run tests. If testing is started and successfully passes from\n'broken' or any failed state besides 'failed commissioning' the node\nwill be returned to a ready state. Otherwise the node will return to\nthe state it was when testing started.\n\n:param enable_ssh: Optional.  Whether to enable SSH for\nthe testing environment using the user's SSH key(s). 0 == false. 1 ==\ntrue.\n:type enable_ssh: Int\n\n :param testing_scripts: Optional.  A comma-separated\nlist of testing script names and tags to be run. By default all tests\ntagged 'commissioning' will be run.\n:type testing_scripts: String\n\n :param parameters: Optional.  Scripts selected to run\nmay define their own parameters. These parameters may be passed using\nthe parameter name. Optionally a parameter may have the script name\nprepended to have that parameter only apply to that specific script.\n:type parameters: String\n\n ",
            "op": "test",
            "restful": false
          },
          {
            "method": "POST",
            "name": "override_failed_testing",
            "doc": "Ignore failed tests\n\nIgnore failed tests and put node back into a usable state.\n\n:param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
            "op": "override_failed_testing",
            "restful": false
          },
          {
            "method": "POST",
            "name": "abort",
            "doc": "Abort a node operation\n\nAbort a node's current operation.\n\n:param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
            "op": "abort",
            "restful": false
          },
          {
            "method": "POST",
            "name": "deploy",
            "doc": "Deploy a machine\n\nDeploys an operating system to a machine with the given\nsystem_id.\n\n:param user_data: Optional.  If present, this blob of\nbase64-encoded user-data to be made available to the machines through\nthe metadata service.\n:type user_data: String\n\n :param osystem: Optional.  If present, this parameter\nspecifies the OS the machine will use.\n:type osystem: String\n\n :param distro_series: Optional.  If present, this\nparameter specifies the OS release the machine will use.\n:type distro_series: String\n\n :param hwe_kernel: Optional.  If present, this\nparameter specified the kernel to be used on the machine\n:type hwe_kernel: String\n\n :param agent_name: Optional.  An optional agent name to\nattach to the acquired machine.\n:type agent_name: String\n\n :param bridge_all: Optional.  Optionally create a\nbridge interface for every configured interface on the machine. The\ncreated bridges will be removed once the machine is released.\n(Default: false)\n:type bridge_all: Boolean\n\n :param bridge_type: Optional.  Optionally create the\nbridges with this type. Possible values are: ``standard``, ``ovs``.\n:type bridge_type: String\n\n :param bridge_stp: Optional.  Optionally turn spanning\ntree protocol on or off for the bridges created on every configured\ninterface.  (Default: false)\n:type bridge_stp: Boolean\n\n :param bridge_fd: Optional.  Optionally adjust the forward\ndelay to time seconds.  (Default: 15)\n:type bridge_fd: Int\n\n :param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n :param install_rackd: Optional.  If true, the rack\ncontroller will be installed on this machine.\n:type install_rackd: Boolean\n\n :param install_kvm: Optional.  If true, KVM will be\ninstalled on this machine and added to MAAS.\n:type install_kvm: Boolean\n\n :param register_vmhost: Optional.  If true, the\nmachine will be registered as a LXD VM host in MAAS.\n:type register_vmhost: Boolean\n\n :param ephemeral_deploy: Optional.  If true, machine\nwill be deployed ephemerally even if it has disks.\n:type ephemeral_deploy: Boolean\n\n :param vcenter_registration: Optional.  If false, do\nnot send globally defined VMware vCenter credentials to the machine.\n:type vcenter_registration: Boolean\n\n ",
            "op": "deploy",
            "restful": false
          },
          {
            "method": "POST",
            "name": "release",
            "doc": "Release a machine\n\nReleases a machine with the given system_id. Note that\nthis operation is the opposite of allocating a machine.\n\n**Erasing drives**:\n\nIf neither ``secure_erase`` nor ``quick_erase`` are specified, MAAS\nwill overwrite the whole disk with null bytes. This can be very slow.\n\nIf both ``secure_erase`` and ``quick_erase`` are specified and the\ndrive does NOT have a secure erase feature, MAAS will behave as if only\n``quick_erase`` was specified.\n\nIf ``secure_erase`` is specified and ``quick_erase`` is NOT specified\nand the drive does NOT have a secure erase feature, MAAS will behave as\nif ``secure_erase`` was NOT specified, i.e. MAAS will overwrite the\nwhole disk with null bytes. This can be very slow.\n\n:param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n :param erase: Optional.  Erase the disk when\nreleasing.\n:type erase: Boolean\n\n :param secure_erase: Optional.  Use the drive's secure\nerase feature if available.  In some cases, this can be much faster\nthan overwriting the drive.  Some drives implement secure erasure by\noverwriting themselves so this could still be slow.\n:type secure_erase: Boolean\n\n :param quick_erase: Optional.  Wipe 2MiB at the start\nand at the end of the drive to make data recovery inconvenient and\nunlikely to happen by accident. This is not secure.\n:type quick_erase: Boolean\n\n :param force: Optional.  Will force the release of a\nmachine. If the machine was deployed as a KVM host, this will be\ndeleted as well as all machines inside the KVM host. USE WITH CAUTION.\n:type force: Boolean\n\n ",
            "op": "release",
            "restful": false
          },
          {
            "method": "POST",
            "name": "commission",
            "doc": "Commission a machine\n\nBegin commissioning process for a machine.\n\nA machine in the 'ready', 'declared' or 'failed test' state may\ninitiate a commissioning cycle where it is checked out and tested in\npreparation for transitioning to the 'ready' state. If it is already in\nthe 'ready' state this is considered a re-commissioning process which\nis useful if commissioning tests were changed after it previously\ncommissioned.\n\n:param enable_ssh: Optional.   Whether to enable SSH for\nthe commissioning environment using the user's SSH key(s). '1' == True,\n'0' == False.\n:type enable_ssh: Int\n\n :param skip_bmc_config: Optional.  Whether to skip\nre-configuration of the BMC for IPMI based machines. '1' == True, '0'\n== False.\n:type skip_bmc_config: Int\n\n :param skip_networking: Optional.  Whether to skip\nre-configuring the networking on the machine after the commissioning\nhas completed. '1' == True, '0' == False.\n:type skip_networking: Int\n\n :param skip_storage: Optional.  Whether to skip\nre-configuring the storage on the machine after the commissioning has\ncompleted. '1' == True, '0' == False.\n:type skip_storage: Int\n\n :param commissioning_scripts: Optional.  A comma\nseperated list of commissioning script names and tags to be run. By\ndefault all custom commissioning scripts are run. Built-in\ncommissioning scripts always run. Selecting 'update_firmware' or\n'configure_hba' will run firmware updates or configure HBA's on\nmatching machines.\n:type commissioning_scripts: String\n\n :param testing_scripts: Optional.  A comma seperated\nlist of testing script names and tags to be run. By default all tests\ntagged 'commissioning' will be run. Set to 'none' to disable running\ntests.\n:type testing_scripts: String\n\n :param parameters: Optional.  Scripts selected to run\nmay define their own parameters. These parameters may be passed using\nthe parameter name. Optionally a parameter may have the script name\nprepended to have that parameter only apply to that specific script.\n:type parameters: String\n\n ",
            "op": "commission",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_storage_layout",
            "doc": "Change storage layout\n\nChanges the storage layout on machine with the given\nsystem_id.\n\nThis operation can only be performed on a machine with a status\nof 'Ready'.\n\nNote: This will clear the current storage layout and any extra\nconfiguration and replace it will the new layout.\n\n:param storage_layout: Required.  Storage layout for the\nmachine: ``flat``, ``lvm``, ``bcache``, ``vmfs6``, or ``blank``.\n:type storage_layout: String\n\n :param boot_size: Optional.  All layouts. Size of the\nboot partition (e.g. 512M, 1G).\n:type boot_size: String\n\n :param root_size: Optional.  All layouts. Size of the\nroot partition (e.g. 24G).\n:type root_size: String\n\n :param root_device: Optional.  All layouts. Physical\nblock device to place the root partition (e.g. /dev/sda).\n:type root_device: String\n\n :param vg_name: Optional.  LVM only. Name of created\nvolume group.\n:type vg_name: String\n\n :param lv_name: Optional.  LVM only. Name of created\nlogical volume.\n:type lv_name: String\n\n :param lv_size: Optional.  LVM only.  Size of created\nlogical volume.\n:type lv_size: String\n\n :param cache_device: Optional.  Bcache only. Physical\nblock device to use as the cache device (e.g. /dev/sda).\n:type cache_device: String\n\n :param cache_mode: Optional.  Bcache only. Cache mode\nfor bcache device: ``writeback``, ``writethrough``, ``writearound``.\n:type cache_mode: String\n\n :param cache_size: Optional.  Bcache only. Size of the\ncache partition to create on the cache device (e.g. 48G).\n:type cache_size: String\n\n :param cache_no_part: Optional.  Bcache only. Don't\ncreate a partition on the cache device.  Use the entire disk as the\ncache device.\n:type cache_no_part: Boolean\n\n ",
            "op": "set_storage_layout",
            "restful": false
          },
          {
            "method": "POST",
            "name": "mount_special",
            "doc": "Mount a special-purpose filesystem\n\nMount a special-purpose filesystem, like tmpfs on a\nmachine with the given system_id.\n\n:param fstype: Required.  The filesystem type. This must\nbe a filesystem that does not require a block special device.\n:type fstype: String\n\n :param mount_point: Required.  Path on the filesystem to\nmount.\n:type mount_point: String\n\n :param mount_option: Optional.  Options to pass to\nmount(8).\n:type mount_option: String\n\n ",
            "op": "mount_special",
            "restful": false
          },
          {
            "method": "POST",
            "name": "unmount_special",
            "doc": "Unmount a special-purpose filesystem\n\nUnmount a special-purpose filesystem, like tmpfs, on a\nmachine with the given system_id.\n\n:param mount_point: Required.  Path on the filesystem to\nunmount.\n:type mount_point: String\n\n ",
            "op": "unmount_special",
            "restful": false
          },
          {
            "method": "POST",
            "name": "clear_default_gateways",
            "doc": "Clear set default gateways\n\nClear any set default gateways on a machine with the given\nsystem_id.\n\nThis will clear both IPv4 and IPv6 gateways on the machine. This will\ntransition the logic of identifing the best gateway to MAAS. This logic\nis determined based the following criteria:\n\n1. Managed subnets over unmanaged subnets.\n2. Bond interfaces over physical interfaces.\n3. Machine's boot interface over all other interfaces except bonds.\n4. Physical interfaces over VLAN interfaces.\n5. Sticky IP links over user reserved IP links.\n6. User reserved IP links over auto IP links.\n\nIf the default gateways need to be specific for this machine you can\nset which interface and subnet's gateway to use when this machine is\ndeployed with the `interfaces set-default-gateway` API.\n\n",
            "op": "clear_default_gateways",
            "restful": false
          },
          {
            "method": "GET",
            "name": "get_curtin_config",
            "doc": "Get curtin configuration\n\nReturn the rendered curtin configuration for the machine.\n\n",
            "op": "get_curtin_config",
            "restful": false
          },
          {
            "method": "POST",
            "name": "restore_networking_configuration",
            "doc": "Restore networking options\n\nRestores networking options to their initial state on a\nmachine with the given system_id.\n\n",
            "op": "restore_networking_configuration",
            "restful": false
          },
          {
            "method": "POST",
            "name": "restore_storage_configuration",
            "doc": "Restore storage configuration\n\nRestores storage configuration options to their initial\nstate on a machine with the given system_id.\n\n",
            "op": "restore_storage_configuration",
            "restful": false
          },
          {
            "method": "POST",
            "name": "restore_default_configuration",
            "doc": "Restore default configuration\n\nRestores the default configuration options on a machine\nwith the given system_id.\n\n",
            "op": "restore_default_configuration",
            "restful": false
          },
          {
            "method": "POST",
            "name": "mark_broken",
            "doc": "Mark a machine as Broken\n\nMark a machine with the given system_id as 'Broken'.\n\nIf the node is allocated, release it first.\n\n:param comment: Optional.  Optional comment for the\nevent log. Will be displayed on the node as an error description until\nmarked fixed.\n:type comment: String\n\n ",
            "op": "mark_broken",
            "restful": false
          },
          {
            "method": "POST",
            "name": "mark_fixed",
            "doc": "Mark a machine as Fixed\n\nMark a machine with the given system_id as 'Fixed'.\n\n:param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n ",
            "op": "mark_fixed",
            "restful": false
          },
          {
            "method": "POST",
            "name": "rescue_mode",
            "doc": "Enter rescue mode\n\nBegins the rescue mode process on a machine with the given\nsystem_id.\n\nA machine in the 'deployed' or 'broken' state may initiate the\nrescue mode process.\n\n",
            "op": "rescue_mode",
            "restful": false
          },
          {
            "method": "POST",
            "name": "exit_rescue_mode",
            "doc": "Exit rescue mode\n\nExits the rescue mode process on a machine with the given\nsystem_id.\n\nA machine in the 'rescue mode' state may exit the rescue mode\nprocess.\n\n",
            "op": "exit_rescue_mode",
            "restful": false
          },
          {
            "method": "POST",
            "name": "lock",
            "doc": "Lock a machine\n\nMark a machine with the given system_id as 'Locked' to\nprevent changes.\n\n:param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n ",
            "op": "lock",
            "restful": false
          },
          {
            "method": "POST",
            "name": "unlock",
            "doc": "Unlock a machine\n\nMark a machine with the given system_id as 'Unlocked' to\nallow changes.\n\n:param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n ",
            "op": "unlock",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a machine\n\nUpdates a machine with the given system_id.\n\n:param hostname: Optional.  The new hostname for this\nmachine.\n:type hostname: String\n\n :param description: Optional.  The new description for\nthis machine.\n:type description: String\n\n :param domain: Optional.  The domain for this machine.\nIf not given the default domain is used.\n:type domain: String\n\n :param architecture: Optional.  The new architecture\nfor this machine.\n:type architecture: String\n\n :param min_hwe_kernel: Optional.  A string containing\nthe minimum kernel version allowed to be ran on this machine.\n:type min_hwe_kernel: String\n\n :param power_type: Optional.  The new power type for\nthis machine. If you use the default value, power_parameters will be\nset to the empty string.  Available to admin users.  See the `Power\ntypes`_ section for a list of the available power types.\n:type power_type: String\n\n :param power_parameters_skip_check: Optional. \nWhether or not the new power parameters for this machine should be\nchecked against the expected power parameters for the machine's power\ntype ('true' or 'false').  The default is 'false'.\n:type power_parameters_skip_check: Boolean\n\n :param pool: Optional.  The resource pool to which the\nmachine should belong. All machines belong to the 'default' resource\npool if they do not belong to any other resource pool.\n:type pool: String\n\n :param zone: Optional.  Name of a valid physical zone\nin which to place this machine.\n:type zone: String\n\n :param swap_size: Optional.  Specifies the size of the\nswap file, in bytes. Field accept K, M, G and T suffixes for values\nexpressed respectively in kilobytes, megabytes, gigabytes and\nterabytes.\n:type swap_size: String\n\n :param disable_ipv4: Optional.  Deprecated. If\nspecified, must be false.\n:type disable_ipv4: Boolean\n\n :param cpu_count: Optional.  The amount of CPU cores the\nmachine has.\n:type cpu_count: Int\n\n :param memory: Optional.  How much memory the machine\nhas.  Field accept K, M, G and T suffixes for values expressed\nrespectively in kilobytes, megabytes, gigabytes and terabytes.\n:type memory: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a machine\n\nDeletes a machine with the given system_id.\n\nNote: A machine cannot be deleted if it hosts pod virtual machines.\nUse ``force`` to override this behavior. Forcing deletion will also\nremove hosted pods. E.g. ``/machines/abc123/?force=1``.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual machine.\n\nA machine is identified by its system_id.",
        "name": "MachineHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/machines/{system_id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/machines/{system_id}/"
      },
      "name": "MachineHandler"
    },
    {
      "anon": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "GET",
            "name": "is_action_in_progress",
            "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_action_in_progress",
            "restful": false
          },
          {
            "method": "POST",
            "name": "accept",
            "doc": "Accept a machine's enlistment: not allowed to anonymous users.\n\nAlways returns 401.",
            "op": "accept",
            "restful": false
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a new machine\n\nCreate a new machine.\n\nAdding a server to MAAS wipes its disks and re-installs its operating\nsystem, in the event that it PXE boots.  In anonymous enlistment (and\nwhen the enlistment is done by a non-admin), the machine is held in the\n\"New\" state for approval by a MAAS admin.\n\nThe minimum data required is:\n\narchitecture=<arch string> (e.g. \"i386/generic\")\nmac_addresses=<value> (e.g. \"aa:bb:cc:dd:ee:ff\")\n\n:param architecture: Required.  A string containing the\narchitecture type of the machine. (For example, \"i386\", or \"amd64\".) To\n:type architecture: unicode\n:type architecture: String\n\n :param min_hwe_kernel: Optional.  A string containing\nthe minimum kernel version allowed to be ran on this machine.\n:type min_hwe_kernel: String\n\n :param subarchitecture: Optional.  A string containing\nthe subarchitecture type of the machine. (For example, \"generic\" or\n\"hwe-t\".) To determine the supported subarchitectures, use the\nboot-resources endpoint.\n:type subarchitecture: String\n\n :param mac_addresses: Required.  One or more MAC\naddresses for the machine. To specify more than one MAC address, the\nparameter must be specified twice. (such as \"machines new\nmac_addresses=01:02:03:04:05:06 mac_addresses=02:03:04:05:06:07\")\n:type mac_addresses: String\n\n :param hostname: Optional.  A hostname. If not given,\none will be generated.\n:type hostname: String\n\n :param domain: Optional.  The domain of the machine. If\nnot given the default domain is used.\n:type domain: String\n\n :param power_type: Optional.  A power management type,\nif applicable (e.g.  \"virsh\", \"ipmi\").\n:type power_type: String\n\n :param commission: Optional.  Request\nthe newly created machine to be created with status set to\nCOMMISSIONING. Machines will wait for COMMISSIONING results and not\ntime out. After commissioning is complete machines will still have to\nbe accepted by an administrator.\n:type commission: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Anonymous access to Machines.",
        "name": "AnonMachinesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/machines/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/machines/"
      },
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_zone",
            "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
            "op": "set_zone",
            "restful": false
          },
          {
            "method": "GET",
            "name": "power_parameters",
            "doc": "Get power parameters\n\nGet power parameters for multiple machines. To request\npower parameters for a specific machine or more than one machine:\n``op=power_parameters&id=abc123&id=def456``.\n\n:param id: Optional.  A system ID. To request more\nthan one machine, provide multiple ``id`` arguments in the request.\nOnly machines with matching system ids will be returned.\n:type id: URL String\n\n ",
            "op": "power_parameters",
            "restful": false
          },
          {
            "method": "POST",
            "name": "accept",
            "doc": "Accept declared machines\n\nAccept declared machines into MAAS.\n\nMachines can be enlisted in the MAAS anonymously or by non-admin users,\nas opposed to by an admin.  These machines are held in the New\nstate; a MAAS admin must first verify the authenticity of these\nenlistments, and accept them.\n\nEnlistments can be accepted en masse, by passing multiple machines to\nthis call.  Accepting an already accepted machine is not an error, but\naccepting one that is already allocated, broken, etc. is.\n\n:param machines: Optional.  A list of system_ids of the\nmachines whose enlistment is to be accepted. (An empty list is\nacceptable).\n:type machines: String\n\n ",
            "op": "accept",
            "restful": false
          },
          {
            "method": "POST",
            "name": "accept_all",
            "doc": "Accept all declared machines\n\nAccept all declared machines into MAAS.\n\nMachines can be enlisted in the MAAS anonymously or by non-admin users,\nas opposed to by an admin.  These machines are held in the New\nstate; a MAAS admin must first verify the authenticity of these\nenlistments, and accept them.\n\n",
            "op": "accept_all",
            "restful": false
          },
          {
            "method": "POST",
            "name": "release",
            "doc": "Release machines\n\nRelease multiple machines. Places the machines back into\nthe pool, ready to be reallocated.\n\n:param machines: Required.  A list of system_ids of the\nmachines which are to be released.  (An empty list is acceptable).\n:type machines: String\n\n :param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n ",
            "op": "release",
            "restful": false
          },
          {
            "method": "GET",
            "name": "list_allocated",
            "doc": "List allocated\n\nList machines that were allocated to the User.\n\n",
            "op": "list_allocated",
            "restful": false
          },
          {
            "method": "POST",
            "name": "allocate",
            "doc": "Allocate a machine\n\nAllocates an available machine for deployment.\n\nConstraints parameters can be used to allocate a machine that possesses\ncertain characteristics.  All the constraints are optional and when\nmultiple constraints are provided, they are combined using 'AND'\nsemantics.\n\n:param name: Optional.  Hostname or FQDN of the desired\nmachine. If a FQDN is specified, both the domain and the hostname\nportions must match.\n:type name: String\n\n :param system_id: Optional.  system_id of the desired\nmachine.\n:type system_id: String\n\n :param arch: Optional.  Architecture of\nthe returned machine (e.g. 'i386/generic', 'amd64', 'armhf/highbank',\netc.).\n\nIf multiple architectures are specified, the machine to acquire may\nmatch any of the given architectures. To request multiple\narchitectures, this parameter must be repeated in the request with each\nvalue.\n:type arch: String\n\n :param cpu_count: Optional.  Minimum\nnumber of CPUs a returned machine must have.\n\nA machine with additional CPUs may be allocated if there is no exact\nmatch, or if the 'mem' constraint is not also specified.\n:type cpu_count: Int\n\n :param mem: Optional.  The minimum amount of memory\n(expressed in MB) the returned machine must have. A machine with\nadditional memory may be allocated if there is no exact match, or the\n'cpu_count' constraint is not also specified.\n:type mem: Int\n\n :param tags: Optional.  Tags the\nmachine must match in order to be acquired.\n\nIf multiple tag names are specified, the machine must be tagged with\nall of them. To request multiple tags, this parameter must be repeated\nin the request with each value.\n:type tags: String\n\n :param not_tags: Optional.  Tags the machine must NOT\nmatch. If multiple tag names are specified, the machine must NOT be\ntagged with ANY of them. To request exclusion of multiple tags, this\nparameter must be repeated in the request with each value.\n:type not_tags: String\n\n :param zone: Optional.  Physical zone name the machine\nmust be located in.\n:type zone: String\n\n :param not_in_zone: Optional.  List of physical zones\nfrom which the machine must not be acquired.  If multiple zones are\nspecified, the machine must NOT be associated with ANY of them. To\nrequest multiple zones to exclude, this parameter must be repeated in\nthe request with each value.\n:type not_in_zone: String\n\n :param pool: Optional.  Resource pool name the machine\nmust belong to.\n:type pool: String\n\n :param not_in_pool: Optional.  List of resource pool\nfrom which the machine must not be acquired. If multiple pools are\nspecified, the machine must NOT be associated with ANY of them. To\nrequest multiple pools to exclude, this parameter must be repeated in\nthe request with each value.\n:type not_in_pool: String\n\n :param pod: Optional.  Pod the machine must be located\nin.\n:type pod: String\n\n :param not_pod: Optional.  Pod the machine must not be\nlocated in.\n:type not_pod: String\n\n :param pod_type: Optional.  Pod type the machine must\nbe located in.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Pod type the machine\nmust not be located in.\n:type not_pod_type: String\n\n :param subnets: Optional.  Subnets that\nmust be linked to the machine.\n\n\"Linked to\" means the node must be configured to acquire an address in\nthe specified subnet, have a static IP address in the specified subnet,\nor have been observed to DHCP from the specified subnet during\ncommissioning time (which implies that it *could* have an address on\nthe specified subnet).\n\nSubnets can be specified by one of the following criteria:\n\n- <id>: Match the subnet by its 'id' field\n- fabric:<fabric-spec>: Match all subnets in a given fabric.\n- ip:<ip-address>: Match the subnet containing <ip-address> with the\n  with the longest-prefix match.\n- name:<subnet-name>: Match a subnet with the given name.\n- space:<space-spec>: Match all subnets in a given space.\n- vid:<vid-integer>: Match a subnet on a VLAN with the specified VID.\n  Valid values range from 0 through 4094 (inclusive). An untagged VLAN\n  can be specified by using the value \"0\".\n- vlan:<vlan-spec>: Match all subnets on the given VLAN.\n\nNote that (as of this writing), the 'fabric', 'space', 'vid', and\n'vlan' specifiers are only useful for the 'not_spaces' version of this\nconstraint, because they will most likely force the query to match ALL\nthe subnets in each fabric, space, or VLAN, and thus not return any\nnodes. (This is not a particularly useful behavior, so may be changed\nin the future.)\n\nIf multiple subnets are specified, the machine must be associated with\nall of them. To request multiple subnets, this parameter must be\nrepeated in the request with each value.\n\nNote that this replaces the legacy 'networks' constraint in MAAS 1.x.\n:type subnets: String\n\n :param not_subnets: Optional.  Subnets\nthat must NOT be linked to the machine.\n\nSee the 'subnets' constraint documentation above for more information\nabout how each subnet can be specified.\n\nIf multiple subnets are specified, the machine must NOT be associated\nwith ANY of them. To request multiple subnets to exclude, this\nparameter must be repeated in the request with each value. (Or a\nfabric, space, or VLAN specifier may be used to match multiple\nsubnets).\n\nNote that this replaces the legacy 'not_networks' constraint in MAAS\n1.x.\n:type not_subnets: String\n\n :param storage: Optional.  A list of storage constraint\nidentifiers, in the form: ``label:size(tag[,tag[,...])][,label:...]``.\n:type storage: String\n\n :param interfaces: Optional.  A labeled\nconstraint map associating constraint labels with interface properties\nthat should be matched. Returned nodes must have one or more interface\nmatching the specified constraints. The labeled constraint map must be\nin the format: ``label:key=value[,key2=value2[,...]]``.\n\nEach key can be one of the following:\n\n- ``id``: Matches an interface with the specific id\n- ``fabric``: Matches an interface attached to the specified fabric.\n- ``fabric_class``: Matches an interface attached to a fabric with the\n  specified class.\n- ``ip``: Matches an interface with the specified IP address assigned\n  to it.\n- ``mode``: Matches an interface with the specified mode. (Currently,\n  the only supported mode is \"unconfigured\".)\n- ``name``: Matches an interface with the specified name.  (For\n  example, \"eth0\".)\n- ``hostname``: Matches an interface attached to the node with the\n  specified hostname.\n- ``subnet``: Matches an interface attached to the specified subnet.\n- ``space``: Matches an interface attached to the specified space.\n- ``subnet_cidr``: Matches an interface attached to the specified\n  subnet CIDR. (For example, \"192.168.0.0/24\".)\n- ``type``: Matches an interface of the specified type. (Valid types:\n  \"physical\", \"vlan\", \"bond\", \"bridge\", or \"unknown\".)\n- ``vlan``: Matches an interface on the specified VLAN.\n- ``vid``: Matches an interface on a VLAN with the specified VID.\n- ``tag``: Matches an interface tagged with the specified tag.\n- ``link_speed``: Matches an interface with link_speed equal to or\n  greater than the specified speed.\n:type interfaces: String\n\n :param fabrics: Optional.  Set of fabrics that the\nmachine must be associated with in order to be acquired. If multiple\nfabrics names are specified, the machine can be in any of the specified\nfabrics. To request multiple possible fabrics to match, this parameter\nmust be repeated in the request with each value.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Fabrics the machine must\nNOT be associated with in order to be acquired. If multiple fabrics\nnames are specified, the machine must NOT be in ANY of them. To request\nexclusion of multiple fabrics, this parameter must be repeated in the\nrequest with each value.\n:type not_fabrics: String\n\n :param fabric_classes: Optional.  Set of fabric class\ntypes whose fabrics the machine must be associated with in order to be\nacquired. If multiple fabrics class types are specified, the machine\ncan be in any matching fabric. To request multiple possible fabrics\nclass types to match, this parameter must be repeated in the request\nwith each value.\n:type fabric_classes: String\n\n :param not_fabric_classes: Optional.  Fabric class\ntypes whose fabrics the machine must NOT be associated with in order to\nbe acquired. If multiple fabrics names are specified, the machine must\nNOT be in ANY of them. To request exclusion of multiple fabrics, this\nparameter must be repeated in the request with each value.\n:type not_fabric_classes: String\n\n :param agent_name: Optional.  An optional agent name to\nattach to the acquired machine.\n:type agent_name: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n :param bridge_all: Optional.  Optionally create a\nbridge interface for every configured interface on the machine. The\ncreated bridges will be removed once the machine is released.\n(Default: False)\n:type bridge_all: Boolean\n\n :param bridge_stp: Optional.  Optionally turn spanning\ntree protocol on or off for the bridges created on every configured\ninterface.  (Default: off)\n:type bridge_stp: Boolean\n\n :param bridge_fd: Optional.  Optionally adjust the forward\ndelay to time seconds.  (Default: 15)\n:type bridge_fd: Int\n\n :param devices: Optional.  Only return a node which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n :param dry_run: Optional.  Optional boolean to\nindicate that the machine should not actually be acquired (this is for\nsupport/troubleshooting, or users who want to see which machine would\nmatch a constraint, without acquiring a machine). Defaults to False.\n:type dry_run: Boolean\n\n :param verbose: Optional.  Optional boolean to\nindicate that the user would like additional verbosity in the\nconstraints_by_type field (each constraint will be prefixed by\n``verbose_``, and contain the full data structure that indicates which\nmachine(s) matched).\n:type verbose: Boolean\n\n ",
            "op": "allocate",
            "restful": false
          },
          {
            "method": "POST",
            "name": "add_chassis",
            "doc": "Add special hardware\n\nAdd special hardware types.\n\n:param chassis_type: Required.  The type\nof hardware:\n\n- ``hmcz``: IBM Hardware Management Console (HMC) for Z\n- ``mscm``: Moonshot Chassis Manager.\n- ``msftocs``: Microsoft OCS Chassis Manager.\n- ``powerkvm``: Virtual Machines on Power KVM, managed by Virsh.\n- ``proxmox``: Virtual Machines managed by Proxmox\n- ``recs_box``: Christmann RECS|Box servers.\n- ``sm15k``: Seamicro 1500 Chassis.\n- ``ucsm``: Cisco UCS Manager.\n- ``virsh``: virtual machines managed by Virsh.\n- ``vmware`` is the type for virtual machines managed by VMware.\n:type chassis_type: String\n\n :param hostname: Required.  The URL, hostname, or IP\naddress to access the chassis.\n:type hostname: String\n\n :param username: Optional.  The username used to access\nthe chassis. This field is required for the recs_box, seamicro15k,\nvmware, mscm, msftocs, ucsm, and hmcz chassis types.\n:type username: String\n\n :param password: Optional.  The password used to access\nthe chassis. This field is required for the ``recs_box``,\n``seamicro15k``, ``vmware``, ``mscm``, ``msftocs``, ``ucsm``, and\n``hmcz`` chassis types.\n:type password: String\n\n :param accept_all: Optional.  If true, all enlisted\nmachines will be commissioned.\n:type accept_all: String\n\n :param rack_controller: Optional.  The system_id of the\nrack controller to send the add chassis command through. If none is\nspecifed MAAS will automatically determine the rack controller to use.\n:type rack_controller: String\n\n :param domain: Optional.  The domain that each new\nmachine added should use.\n:type domain: String\n\n :param prefix_filter: Optional.  (``virsh``,\n``vmware``, ``powerkvm``, ``proxmox``, ``hmcz`` only.) Filter machines\nwith supplied prefix.\n:type prefix_filter: String\n\n :param power_control: Optional.  (``seamicro15k`` only)\nThe power_control to use, either ipmi (default), restapi, or restapi2.\n\nThe following are optional if you are adding a proxmox chassis.\n:type power_control: String\n\n :param token_name: Optional.  The name the\nauthentication token to be used instead of a password.\n:type token_name: String\n\n :param token_secret: Optional.  The token secret\nto be used in combination with the power_token_name used in place of\na password.\n:type token_secret: String\n\n :param verify_ssl: Optional.  Whether SSL\nconnections should be verified.\n\nThe following are optional if you are adding a recs_box, vmware or\nmsftocs chassis.\n:type verify_ssl: Boolean\n\n :param port: Optional.  (``recs_box``, ``vmware``,\n``msftocs`` only) The port to use when accessing the chassis.\n\nThe following are optional if you are adding a vmware chassis:\n:type port: Int\n\n :param protocol: Optional.  (``vmware`` only) The\nprotocol to use when accessing the VMware chassis (default: https).\n\n:return: A string containing the chassis powered on by which rack\n    controller.\n:type protocol: String\n\n ",
            "op": "add_chassis",
            "restful": false
          },
          {
            "method": "POST",
            "name": "clone",
            "doc": "Clone storage and/or interface configurations\n\nClone storage and/or interface configurations\n\nA machine storage and/or interface configuration can be cloned to a\nset of destination machines.\n\nFor storage configuration, cloning the destination machine must have at\nleast the same number of physical block devices or more, along with\nthe physical block devices being the same size or greater.\n\nFor interface configuration, cloning the destination machine must have\nat least the same number of interfaces with the same names. The\ndestination machine can have more interfaces than the source, as long\nas the subset of interfaces on the destination have the same matching\nnames as the source.\n\n:param source: Required.  The system_id of the machine\nthat is the source of the configuration.\n:type source: String\n\n :param destinations: Required.  A list of system_ids to\nclone the configuration to.\n:type destinations: String\n\n :param interfaces: Required.  Whether to clone\ninterface configuration. Defaults to False.\n:type interfaces: Boolean\n\n :param storage: Required.  Whether to clone storage\nconfiguration. Defaults to False.\n:type storage: Boolean\n\n ",
            "op": "clone",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a new machine\n\nCreate a new machine.\n\nAdding a server to MAAS wipes its disks and re-installs its operating\nsystem, in the event that it PXE boots.  In anonymous enlistment (and\nwhen the enlistment is done by a non-admin), the machine is held in the\n\"New\" state for approval by a MAAS admin.\n\nThe minimum data required is:\n\narchitecture=<arch string> (e.g. \"i386/generic\")\nmac_addresses=<value> (e.g. \"aa:bb:cc:dd:ee:ff\")\n\n:param architecture: Required.  A string containing the\narchitecture type of the machine. (For example, \"i386\", or \"amd64\".) To\n:type architecture: unicode\n:type architecture: String\n\n :param min_hwe_kernel: Optional.  A string containing\nthe minimum kernel version allowed to be ran on this machine.\n:type min_hwe_kernel: String\n\n :param subarchitecture: Optional.  A string containing\nthe subarchitecture type of the machine. (For example, \"generic\" or\n\"hwe-t\".) To determine the supported subarchitectures, use the\nboot-resources endpoint.\n:type subarchitecture: String\n\n :param mac_addresses: Required.  One or more MAC\naddresses for the machine. To specify more than one MAC address, the\nparameter must be specified twice. (such as \"machines new\nmac_addresses=01:02:03:04:05:06 mac_addresses=02:03:04:05:06:07\")\n:type mac_addresses: String\n\n :param hostname: Optional.  A hostname. If not given,\none will be generated.\n:type hostname: String\n\n :param description: Optional.  A optional description.\n:type description: String\n\n :param domain: Optional.  The domain of the machine. If\nnot given the default domain is used.\n:type domain: String\n\n :param power_type: Optional.  A power management type,\nif applicable (e.g.  \"virsh\", \"ipmi\").\n:type power_type: String\n\n :param commission: Optional.  Request\nthe newly created machine to be created with status set to\nCOMMISSIONING. Machines will wait for COMMISSIONING results and not\ntime out. Machines created by administrators will be commissioned\nunless set to false.\n:type commission: Boolean\n\n :param enable_ssh: Optional.   Whether to enable SSH for\nthe commissioning environment using the user's SSH key(s). '1' == True,\n'0' == False.\n:type enable_ssh: Int\n\n :param skip_bmc_config: Optional.  Whether to skip\nre-configuration of the BMC for IPMI based machines. '1' == True, '0'\n== False.\n:type skip_bmc_config: Int\n\n :param skip_networking: Optional.  Whether to skip\nre-configuring the networking on the machine after the commissioning\nhas completed. '1' == True, '0' == False.\n:type skip_networking: Int\n\n :param skip_storage: Optional.  Whether to skip\nre-configuring the storage on the machine after the commissioning has\ncompleted. '1' == True, '0' == False.\n:type skip_storage: Int\n\n :param commissioning_scripts: Optional.  A comma\nseperated list of commissioning script names and tags to be run. By\ndefault all custom commissioning scripts are run. Built-in\ncommissioning scripts always run. Selecting 'update_firmware' or\n'configure_hba' will run firmware updates or configure HBA's on\nmatching machines.\n:type commissioning_scripts: String\n\n :param testing_scripts: Optional.  A comma seperated\nlist of testing script names and tags to be run. By default all tests\ntagged 'commissioning' will be run. Set to 'none' to disable running\ntests.\n:type testing_scripts: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all the machines in the MAAS.",
        "name": "MachinesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/machines/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/machines/"
      },
      "name": "MachinesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read commissioning results\n\nRead the commissioning results per node visible to the\nuser, optionally filtered.\n\n:param system_id: Optional.  An optional list of system\nids. Only the results related to the nodes with these system ids will\nbe returned.\n:type system_id: String\n\n :param name: Optional.  An optional list of names.\nOnly the results with the specified names will be returned.\n:type name: String\n\n :param result_type: Optional.  An optional result_type.\nOnly the results with the specified result_type will be returned.\n:type result_type: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Read the collection of commissioning script results.",
        "name": "NodeResultsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/installation-results/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/installation-results/"
      },
      "name": "NodeResultsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "details",
            "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
            "op": "details",
            "restful": false
          },
          {
            "method": "GET",
            "name": "power_parameters",
            "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
            "op": "power_parameters",
            "restful": false
          },
          {
            "method": "GET",
            "name": "query_power_state",
            "doc": "Get the power state of a node\n\nGets the power state of a given node. MAAS sends a request\nto the node's power controller, which asks it about the node's state.\nThe reply to this could be delayed by up to 30 seconds while waiting\nfor the power controller to respond.  Use this method sparingly as it\nties up an appserver thread while waiting.\n\n:param system_id: Required.  The node to query.\n:type system_id: String\n\n ",
            "op": "query_power_state",
            "restful": false
          },
          {
            "method": "POST",
            "name": "power_on",
            "doc": "Turn on a node\n\nTurn on the given node with optional user-data and\ncomment.\n\n:param user_data: Optional.  Base64-encoded blob of\ndata to be made available to the nodes through the metadata service.\n:type user_data: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
            "op": "power_on",
            "restful": false
          },
          {
            "method": "POST",
            "name": "power_off",
            "doc": "Power off a node\n\nPowers off a given node.\n\n:param stop_mode: Optional.  Power-off mode. If 'soft',\nperform a soft power down if the node's power type supports it,\notherwise perform a hard power off. For all values other than 'soft',\nand by default, perform a hard power off. A soft power off generally\nasks the OS to shutdown the system gracefully before powering off,\nwhile a hard power off occurs immediately without any warning to the\nOS.\n:type stop_mode: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
            "op": "power_off",
            "restful": false
          },
          {
            "method": "POST",
            "name": "test",
            "doc": "Begin testing process for a node\n\nBegins the testing process for a given node.\n\nA node in the 'ready', 'allocated', 'deployed', 'broken', or any failed\nstate may run tests. If testing is started and successfully passes from\n'broken' or any failed state besides 'failed commissioning' the node\nwill be returned to a ready state. Otherwise the node will return to\nthe state it was when testing started.\n\n:param enable_ssh: Optional.  Whether to enable SSH for\nthe testing environment using the user's SSH key(s). 0 == false. 1 ==\ntrue.\n:type enable_ssh: Int\n\n :param testing_scripts: Optional.  A comma-separated\nlist of testing script names and tags to be run. By default all tests\ntagged 'commissioning' will be run.\n:type testing_scripts: String\n\n :param parameters: Optional.  Scripts selected to run\nmay define their own parameters. These parameters may be passed using\nthe parameter name. Optionally a parameter may have the script name\nprepended to have that parameter only apply to that specific script.\n:type parameters: String\n\n ",
            "op": "test",
            "restful": false
          },
          {
            "method": "POST",
            "name": "override_failed_testing",
            "doc": "Ignore failed tests\n\nIgnore failed tests and put node back into a usable state.\n\n:param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
            "op": "override_failed_testing",
            "restful": false
          },
          {
            "method": "POST",
            "name": "abort",
            "doc": "Abort a node operation\n\nAbort a node's current operation.\n\n:param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
            "op": "abort",
            "restful": false
          },
          {
            "method": "POST",
            "name": "import_boot_images",
            "doc": "Import boot images\n\nImport boot images on a given rack controller or all\nrack controllers.\n\n",
            "op": "import_boot_images",
            "restful": false
          },
          {
            "method": "GET",
            "name": "list_boot_images",
            "doc": "List available boot images\n\nLists all available boot images for a given rack\ncontroller system_id and whether they are in sync with the\nregion controller.\n\n",
            "op": "list_boot_images",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a rack controller\n\nUpdates a rack controller with the given system_id.\n\n:param description: Optional.  The new description for\nthis given rack controller.\n:type description: String\n\n :param power_type: Optional.  The new power type for\nthe given rack controller. If you use the default value,\npower_parameters will be set to an empty string. See the\n`Power types`_ section for a list of available power types. Note that\nonly admin users can set this parameter.\n:type power_type: String\n\n :param power_parameters_skip_check: Optional.  If\ntrue, the new power parameters for the given rack controller will be\nchecked against the expected parameters for the rack controller's power\ntype. Default is false.\n:type power_parameters_skip_check: Boolean\n\n :param zone: Optional.  The name of a valid zone in\nwhich to place the given rack controller.\n:type zone: String\n\n :param domain: Optional.  The domain for this\ncontroller. If not given the default domain is used.\n:type domain: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a rack controller\n\nDeletes a rack controller with the given system_id. A\nrack controller cannot be deleted if it is set to `primary_rack` on\na `VLAN` and another rack controller cannot be used to provide DHCP\nfor said VLAN. Use `force` to override this behavior.\n\nUsing `force` will also allow deleting a rack controller that is\nhosting pod virtual machines. The pod will also be deleted.\n\nRack controllers that are also region controllers will be converted\nto a region controller (and hosted pods will not be affected).\n\n:param force: Optional.  Always delete the rack\ncontroller even if it is the `primary_rack` on a `VLAN` and another\nrack controller cannot provide DHCP on that VLAN. This will disable\nDHCP on those VLANs.\n:type force: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual rack controller.\n\nThe rack controller is identified by its system_id.",
        "name": "RackControllerHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/rackcontrollers/{system_id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/rackcontrollers/{system_id}/"
      },
      "name": "RackControllerHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Retrieve an SSH key\n\nRetrieves an SSH key with the given ID.\n\n:param id: Required.  An SSH key ID.\n:type id: Int\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete an SSH key\n\nDeletes the SSH key with the given ID.\n\n:param id: Required.  An SSH key ID.\n:type id: Int\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an SSH key.\n\nSSH keys can be retrieved or deleted.",
        "name": "SSHKeyHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/account/prefs/sshkeys/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/prefs/sshkeys/{id}/"
      },
      "name": "SSHKeyHandler"
    },
    {
      "anon": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "GET",
            "name": "is_action_in_progress",
            "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_action_in_progress",
            "restful": false
          }
        ],
        "doc": "Anonymous access to Nodes.",
        "name": "AnonNodesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/nodes/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
      },
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "is_registered",
            "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
            "op": "is_registered",
            "restful": false
          },
          {
            "method": "POST",
            "name": "set_zone",
            "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
            "op": "set_zone",
            "restful": false
          },
          {
            "method": "GET",
            "name": "power_parameters",
            "doc": "Get power parameters\n\nGet power parameters for multiple machines. To request\npower parameters for a specific machine or more than one machine:\n``op=power_parameters&id=abc123&id=def456``.\n\n:param id: Optional.  A system ID. To request more\nthan one machine, provide multiple ``id`` arguments in the request.\nOnly machines with matching system ids will be returned.\n:type id: URL String\n\n ",
            "op": "power_parameters",
            "restful": false
          },
          {
            "method": "POST",
            "name": "import_boot_images",
            "doc": "Import boot images on all rack controllers\n\nImports boot images on all rack controllers.\n\n",
            "op": "import_boot_images",
            "restful": false
          },
          {
            "method": "GET",
            "name": "describe_power_types",
            "doc": "Get power information from rack controllers\n\nQueries all rack controllers for power information.\n\n",
            "op": "describe_power_types",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all rack controllers in MAAS.",
        "name": "RackControllersHandler",
        "params": [],
        "path": "/MAAS/api/2.0/rackcontrollers/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/rackcontrollers/"
      },
      "name": "RackControllersHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "import",
            "doc": "Import SSH keys\n\nImport the requesting user's SSH keys for a given protocol\nand authorization ID in protocol:auth_id format.\n\n:param keysource: Required.  The source\nof the keys to import should be provided in the request payload as form\ndata:\n\nE.g.\n\n``source:user``\n\n- ``source``: lp (Launchpad), gh (GitHub)\n- ``user``: User login\n:type keysource: String\n\n ",
            "op": "import",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List SSH keys\n\nList all keys belonging to the requesting user.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Add a new SSH key\n\nAdd a new SSH key to the requesting or supplied user's\naccount.\n\n:param key: Required.  A public SSH key\nshould be provided in the request payload as form data with the name\n'key':\n\n``key: \"key-type public-key-data\"``\n\n- ``key-type``: ecdsa-sha2-nistp256, ecdsa-sha2-nistp384,\n  ecdsa-sha2-nistp521, ssh-dss, ssh-ed25519, ssh-rsa\n- ``public key data``: Base64-encoded key data.\n:type key: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all the SSH keys in this MAAS.",
        "name": "SSHKeysHandler",
        "params": [],
        "path": "/MAAS/api/2.0/account/prefs/sshkeys/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/prefs/sshkeys/"
      },
      "name": "SSHKeysHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Retrieve an SSL key\n\nRetrieves an SSL key with the given ID.\n\n:param id: Required.  An SSL key ID.\n:type id: Int\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete an SSL key\n\nDeletes the SSL key with the given ID.\n\n:param id: Required.  An SSH key ID.\n:type id: Int\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an SSL key.\n\nSSL keys can be retrieved or deleted.",
        "name": "SSLKeyHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/account/prefs/sslkeys/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/prefs/sslkeys/{id}/"
      },
      "name": "SSLKeyHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List keys\n\nList all keys belonging to the requesting user.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Add a new SSL key\n\nAdd a new SSL key to the requesting user's account.\n\n:param key: Required.  An SSL key\nshould be provided in the request payload as form data with the name\n'key':\n\n``key: \"key data\"``\n\n- ``key data``: The contents of a pem file.\n:type key: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Operations on multiple keys.",
        "name": "SSLKeysHandler",
        "params": [],
        "path": "/MAAS/api/2.0/account/prefs/sslkeys/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/prefs/sslkeys/"
      },
      "name": "SSLKeysHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Retrieve user details\n\nRetrieve a user's details.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a user\n\nDeletes a given username.\n\n:param transfer_resources_to: Optional.  An optional\nusername. If supplied, the allocated resources of the user being\ndeleted will be transferred to this user. A user can't be removed\nunless its resources (machines, IP addresses, ...), are released or\ntransfered to another user.\n:type transfer_resources_to: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a user account.",
        "name": "UserHandler",
        "params": [
          "username"
        ],
        "path": "/MAAS/api/2.0/users/{username}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/users/{username}/"
      },
      "name": "UserHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "whoami",
            "doc": "Retrieve logged-in user\n\nReturns the currently logged-in user.\n\n",
            "op": "whoami",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "List users\n\nList users\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a MAAS user account\n\nCreates a MAAS user account.\n\nThis is not safe: the password is sent in plaintext.  Avoid it for\nproduction, unless you are confident that you can prevent eavesdroppers\nfrom observing the request.\n\n:param username: Required.  Identifier-style username\nfor the new user.\n:type username: String\n\n :param email: Required.  Email address for the new user.\n:type email: String\n\n :param password: Required.  Password for the new user.\n:type password: String\n\n :param is_superuser: Required.  Whether the new user is\nto be an administrator. ('0' == False, '1' == True)\n:type is_superuser: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the user accounts of this MAAS.",
        "name": "UsersHandler",
        "params": [],
        "path": "/MAAS/api/2.0/users/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/users/"
      },
      "name": "UsersHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Returns a named zone.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Updates a zone's name or description.\n\nNote that only 'name' and 'description' parameters are honored. Others,\nsuch as 'resource-uri' or 'id' will be ignored.\n\n:param description: Optional.  A brief description of\n    the new zone.\n:type description: String\n\n :param name: Optional.  The zone's new name.\n:type name: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Deletes a zone.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a physical zone.\n\nAny node is in a physical zone, or \"zone\" for short.  The meaning of a\nphysical zone is up to you: it could identify e.g. a server rack, a\nnetwork, or a data centre.  Users can then allocate nodes from specific\nphysical zones, to suit their redundancy or performance requirements.\n\nThis functionality is only available to administrators.  Other users can\nview physical zones, but not modify them.",
        "name": "ZoneHandler",
        "params": [
          "name"
        ],
        "path": "/MAAS/api/2.0/zones/{name}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/zones/{name}/"
      },
      "name": "ZoneHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Get a listing of all zones. Note that there is always\nat least one zone: default.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Creates a new zone.\n\n:param name: Required.  The new zone's name.\n:type name: String\n\n :param description: Optional.  A brief description of\n    the new zone.\n:type description: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage physical zones.",
        "name": "ZonesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/zones/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/zones/"
      },
      "name": "ZonesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a fabric\n\nRead a fabric with the given id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update fabric\n\nUpdate a fabric with the given id.\n\n:param name: Optional.  Name of the fabric.\n:type name: String\n\n :param description: Optional.  Description of the\nfabric.\n:type description: String\n\n :param class_type: Optional.  Class type of the fabric.\n:type class_type: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a fabric\n\nDelete a fabric with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage fabric.",
        "name": "FabricHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/fabrics/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fabrics/{id}/"
      },
      "name": "FabricHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List fabrics\n\nList all fabrics.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a fabric\n\nCreate a fabric.\n\n:param name: Optional.  Name of the fabric.\n:type name: String\n\n :param description: Optional.  Description of the\nfabric.\n:type description: String\n\n :param class_type: Optional.  Class type of the fabric.\n:type class_type: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage fabrics.",
        "name": "FabricsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/fabrics/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fabrics/"
      },
      "name": "FabricsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a fan network\n\nRead a fan network with the given id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a fan network\n\nUpdate a fan network with the given id.\n\n:param name: Optional.  Name of the fan network.\n:type name: String\n\n :param overlay: Optional.  The overlay network.\n:type overlay: String\n\n :param underlay: Optional.  The underlay network.\n:type underlay: String\n\n :param dhcp: Optional.  Configure DHCP server for\noverlay network.\n:type dhcp: Boolean\n\n :param host_reserve: Optional.  The number of IP addresses\nto reserve for host.\n:type host_reserve: Int\n\n :param bridge: Optional.  Override bridge name.\n:type bridge: String\n\n :param off: Optional.  Put this fan network in the\nconfiguration, but disable it.\n:type off: Boolean\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a fan network\n\nDeletes a fan network with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage Fan Network.",
        "name": "FanNetworkHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/fannetworks/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fannetworks/{id}/"
      },
      "name": "FanNetworkHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List fan networks\n\nList all fan networks.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a fan network.\n\nCreate a fan network\n\n:param name: Required.  Name of the fan network.\n:type name: String\n\n :param overlay: Required.  The overlay network.\n:type overlay: String\n\n :param underlay: Required.  The underlay network.\n:type underlay: String\n\n :param dhcp: Optional.  Configure DHCP server for\noverlay network.\n:type dhcp: Boolean\n\n :param host_reserve: Optional.  The number of IP addresses\nto reserve for host.\n:type host_reserve: Int\n\n :param bridge: Optional.  Override bridge name.\n:type bridge: String\n\n :param off: Optional.  Put this fan network in the\nconfiguration, but disable it.\n:type off: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage Fan Networks.",
        "name": "FanNetworksHandler",
        "params": [],
        "path": "/MAAS/api/2.0/fannetworks/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fannetworks/"
      },
      "name": "FanNetworksHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Retrieve VLAN\n\nRetrieves a VLAN on a given fabric_id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update VLAN\n\nUpdates a given VLAN.\n\n:param name: Optional.  Name of the VLAN.\n:type name: String\n\n :param description: Optional.  Description of the VLAN.\n:type description: String\n\n :param mtu: Optional.  The MTU to use on the VLAN.\n:type mtu: Int\n\n :param dhcp_on: Optional.  Whether or not DHCP should\nbe managed on the VLAN.\n:type dhcp_on: Boolean\n\n :param primary_rack: Optional.  The primary rack\ncontroller managing the VLAN (system_id).\n:type primary_rack: String\n\n :param secondary_rack: Optional.  The secondary rack\ncontroller managing the VLAN (system_id).\n:type secondary_rack: String\n\n :param relay_vlan: Optional.  Relay VLAN ID. Only set when\nthis VLAN will be using a DHCP relay to forward DHCP requests to\nanother VLAN that MAAS is managing. MAAS will not run the DHCP relay\nitself, it must be configured to proxy reqests to the primary and/or\nsecondary rack controller interfaces for the VLAN specified in this\nfield.\n:type relay_vlan: Int\n\n :param space: Optional.  The space this VLAN should be\nplaced in. Passing in an empty string (or the string 'undefined') will\ncause the VLAN to be placed in the 'undefined' space.\n:type space: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a VLAN\n\nDelete VLAN on a given fabric.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a VLAN on a fabric.",
        "name": "VlanHandler",
        "params": [
          "fabric_id",
          "vid"
        ],
        "path": "/MAAS/api/2.0/fabrics/{fabric_id}/vlans/{vid}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fabrics/{fabric_id}/vlans/{vid}/"
      },
      "name": "VlanHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List VLANs\n\nList all VLANs belonging to given fabric.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a VLAN\n\nCreates a new VLAN.\n\n:param name: Optional.  Name of the VLAN.\n:type name: String\n\n :param description: Optional.  Description of the new\nVLAN.\n:type description: String\n\n :param vid: Required.  VLAN ID of the new VLAN.\n:type vid: Int\n\n :param mtu: Optional.  The MTU to use on the VLAN.\n:type mtu: Int\n\n :param space: Optional.  The space this VLAN should be\nplaced in. Passing in an empty string (or the string 'undefined') will\ncause the VLAN to be placed in the 'undefined' space.\n:type space: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage VLANs on a fabric.",
        "name": "VlansHandler",
        "params": [
          "fabric_id"
        ],
        "path": "/MAAS/api/2.0/fabrics/{fabric_id}/vlans/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fabrics/{fabric_id}/vlans/"
      },
      "name": "VlansHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Reads a space\n\nGets a space with the given ID.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update space\n\nUpdates a space with the given ID.\n\n:param name: Required.  The name of the new space.\n:type name: String\n\n :param description: Optional.  A description of the new\nspace.\n:type description: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a space\n\nDeletes a space with the given ID.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage space.",
        "name": "SpaceHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/spaces/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/spaces/{id}/"
      },
      "name": "SpaceHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List all spaces\n\nGenerates a list of all spaces.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a space\n\nCreate a new space.\n\n:param name: Required.  The name of the new space.\n:type name: String\n\n :param description: Optional.  A description of the new\nspace.\n:type description: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage spaces.",
        "name": "SpacesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/spaces/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/spaces/"
      },
      "name": "SpacesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "reserved_ip_ranges",
            "doc": "List reserved IP ranges\n\nLists IP ranges currently reserved in the subnet.\n\n",
            "op": "reserved_ip_ranges",
            "restful": false
          },
          {
            "method": "GET",
            "name": "unreserved_ip_ranges",
            "doc": "List unreserved IP ranges\n\nLists IP ranges currently unreserved in the subnet.\n\n",
            "op": "unreserved_ip_ranges",
            "restful": false
          },
          {
            "method": "GET",
            "name": "statistics",
            "doc": "Get subnet statistics\n\nReturns statistics for the specified subnet, including:\n\n- **num_available**: the number of available IP addresses\n- **largest_available**: the largest number of contiguous free IP\n  addresses\n- **num_unavailable**: the number of unavailable IP addresses\n- **total_addresses**: the sum of the available plus unavailable\n  addresses\n- **usage**: the (floating point) usage percentage of this subnet\n- **usage_string**: the (formatted unicode) usage percentage of this\n  subnet\n- **ranges**: the specific IP ranges present in ths subnet (if\n  specified)\n\nNote: to supply additional optional parameters for this request, add\nthem to the request URI: e.g.\n``/subnets/1/?op=statistics&include_suggestions=1``\n\n:param include_ranges: Optional.  If '1', includes\ndetailed information about the usage of this range. '1' == True, '0' ==\nFalse.\n:type include_ranges: Int\n\n :param include_suggestions: Optional.  If '1', includes\nthe suggested gateway and dynamic range for this subnet, if it were to\nbe configured. '1' == True, '0' == False.\n:type include_suggestions: Int\n\n ",
            "op": "statistics",
            "restful": false
          },
          {
            "method": "GET",
            "name": "ip_addresses",
            "doc": "Summary of IP addresses\n\nReturns a summary of IP addresses assigned to this subnet.\n\n:param with_username: Optional.  If '0', suppresses the\ndisplay of usernames associated with each address. '1' == True, '0' ==\nFalse. (Default: '1')\n:type with_username: Int\n\n :param with_summary: Optional.  If '0', suppresses the\ndisplay of nodes, BMCs, and and DNS records associated with each\naddress. '1' == True, '0' == False. (Default: True)\n:type with_summary: Int\n\n :param with_node_summary: Optional.  Deprecated. Use\n'with_summary'.\n:type with_node_summary: Int\n\n ",
            "op": "ip_addresses",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Get a subnet\n\nGet information about a subnet with the given ID.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a subnet\n\nUpdate a subnet with the given ID.\n\n:param cidr: Optional.  The network CIDR for this\nsubnet.\n:type cidr: String\n\n :param name: Optional.  The subnet's name.\n:type name: String\n\n :param description: Optional.  The subnet's\ndescription.\n:type description: String\n\n :param vlan: Optional.  VLAN this subnet belongs to.\nDefaults to the default VLAN for the provided fabric or defaults to the\ndefault VLAN in the default fabric (if unspecified).\n:type vlan: String\n\n :param fabric: Optional.  Fabric for the subnet.\nDefaults to the fabric the provided VLAN belongs to, or defaults to the\ndefault fabric.\n:type fabric: String\n\n :param vid: Optional.  VID of the VLAN this subnet belongs\nto. Only used when vlan is not provided. Picks the VLAN with this VID\nin the provided fabric or the default fabric if one is not given.\n:type vid: Int\n\n :param space: Optional.  Space this subnet is in.\nDefaults to the default space.\n:type space: String\n\n :param gateway_ip: Optional.  The gateway IP address\nfor this subnet.\n:type gateway_ip: String\n\n :param rdns_mode: Optional.  How reverse\nDNS is handled for this subnet.  One of:\n\n- ``0`` Disabled: No reverse zone is created.\n- ``1`` Enabled: Generate reverse zone.\n- ``2`` RFC2317: Extends '1' to create the necessary parent zone with\n  the appropriate CNAME resource records for the network, if the the\n  network is small enough to require the support described in RFC2317.\n:type rdns_mode: Int\n\n :param allow_dns: Optional.  Configure MAAS DNS to allow\nDNS resolution from this subnet. '0' == False,'1' == True.\n:type allow_dns: Int\n\n :param allow_proxy: Optional.  Configure maas-proxy to\nallow requests from this subnet. '0' == False, '1' == True.\n:type allow_proxy: Int\n\n :param dns_servers: Optional.  Comma-seperated list of\nDNS servers for this subnet.\n:type dns_servers: String\n\n :param managed: Optional.  In MAAS 2.0+,\nall subnets are assumed to be managed by default.\n:type managed: Int\n\n :param disabled_boot_architectures: Optional.  A comma\nor space seperated list of boot architectures which will not be\nresponded to by isc-dhcpd. Values may be the MAAS name for the boot\narchitecture, the IANA hex value, or the isc-dhcpd octet.\n\nOnly managed subnets allow DHCP to be enabled on their related dynamic\nranges. (Thus, dynamic ranges become \"informational only\"; an\nindication that another DHCP server is currently handling them, or that\nMAAS will handle them when the subnet is enabled for management.)\n\nManaged subnets do not allow IP allocation by default. The meaning of a\n\"reserved\" IP range is reversed for an unmanaged subnet. (That is, for\nmanaged subnets, \"reserved\" means \"MAAS cannot allocate any IP address\nwithin this reserved block\". For unmanaged subnets, \"reserved\" means\n\"MAAS must allocate IP addresses only from reserved IP ranges.\"\n:type disabled_boot_architectures: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a subnet\n\nDelete a subnet with the given ID.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage subnet.",
        "name": "SubnetHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/subnets/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/subnets/{id}/"
      },
      "name": "SubnetHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List all subnets\n\nGet a list of all subnets.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a subnet\n\nCreates a new subnet.\n\n:param cidr: Required.  The network CIDR for this\nsubnet.\n:type cidr: String\n\n :param name: Optional.  The subnet's name.\n:type name: String\n\n :param description: Optional.  The subnet's\ndescription.\n:type description: String\n\n :param vlan: Optional.  VLAN this subnet belongs to.\nDefaults to the default VLAN for the provided fabric or defaults to the\ndefault VLAN in the default fabric (if unspecified).\n:type vlan: String\n\n :param fabric: Optional.  Fabric for the subnet.\nDefaults to the fabric the provided VLAN belongs to, or defaults to the\ndefault fabric.\n:type fabric: String\n\n :param vid: Optional.  VID of the VLAN this subnet belongs\nto. Only used when vlan is not provided. Picks the VLAN with this VID\nin the provided fabric or the default fabric if one is not given.\n:type vid: Int\n\n :param space: Optional.  Space this subnet is in.\nDefaults to the default space.\n:type space: String\n\n :param gateway_ip: Optional.  The gateway IP address\nfor this subnet.\n:type gateway_ip: String\n\n :param rdns_mode: Optional.  How reverse\nDNS is handled for this subnet.  One of:\n\n- ``0`` Disabled: No reverse zone is created.\n- ``1`` Enabled: Generate reverse zone.\n- ``2`` RFC2317: Extends '1' to create the necessary parent zone with\n  the appropriate CNAME resource records for the network, if the the\n  network is small enough to require the support described in RFC2317.\n:type rdns_mode: Int\n\n :param allow_dns: Optional.  Configure MAAS DNS to allow\nDNS resolution from this subnet. '0' == False,'1' == True.\n:type allow_dns: Int\n\n :param allow_proxy: Optional.  Configure maas-proxy to\nallow requests from this subnet. '0' == False, '1' == True.\n:type allow_proxy: Int\n\n :param dns_servers: Optional.  Comma-seperated list of\nDNS servers for this subnet.\n:type dns_servers: String\n\n :param managed: Optional.  In MAAS 2.0+,\nall subnets are assumed to be managed by default.\n:type managed: Int\n\n :param disabled_boot_architectures: Optional.  A comma\nor space seperated list of boot architectures which will not be\nresponded to by isc-dhcpd. Values may be the MAAS name for the boot\narchitecture, the IANA hex value, or the isc-dhcpd octet.\n\nOnly managed subnets allow DHCP to be enabled on their related dynamic\nranges. (Thus, dynamic ranges become \"informational only\"; an\nindication that another DHCP server is currently handling them, or that\nMAAS will handle them when the subnet is enabled for management.)\n\nManaged subnets do not allow IP allocation by default. The meaning of a\n\"reserved\" IP range is reversed for an unmanaged subnet. (That is, for\nmanaged subnets, \"reserved\" means \"MAAS cannot allocate any IP address\nwithin this reserved block\". For unmanaged subnets, \"reserved\" means\n\"MAAS must allocate IP addresses only from reserved IP ranges.\"\n:type disabled_boot_architectures: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage subnets.",
        "name": "SubnetsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/subnets/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/subnets/"
      },
      "name": "SubnetsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read an IP range\n\nRead an IP range with the given id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update an IP range\n\nUpdate an IP range with the given id.\n\n:param start_ip: Optional.  Start IP address of this\nrange (inclusive).\n:type start_ip: String\n\n :param end_ip: Optional.  End IP address of this range\n(inclusive).\n:type end_ip: String\n\n :param comment: Optional.  A description of this range.\n(optional)\n:type comment: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete an IP range\n\nDelete an IP range with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage IP range.",
        "name": "IPRangeHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/ipranges/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/ipranges/{id}/"
      },
      "name": "IPRangeHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List all IP ranges\n\nList all available IP ranges.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create an IP range\n\nCreate a new IP range.\n\n:param type: Required.  Type of this range. (``dynamic``\nor ``reserved``)\n:type type: String\n\n :param start_ip: Required.  Start IP address of this\nrange (inclusive).\n:type start_ip: String\n\n :param end_ip: Required.  End IP address of this range\n(inclusive).\n:type end_ip: String\n\n :param subnet: Required.  Subnet associated with this\nrange.\n:type subnet: String\n\n :param comment: Optional.  A description of this range.\n:type comment: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage IP ranges.",
        "name": "IPRangesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/ipranges/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/ipranges/"
      },
      "name": "IPRangesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Get a static route\n\nGets a static route with the given ID.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a static route\n\nUpdates a static route with the given ID.\n\n:param source: Optional.  Source subnet name for the\nroute.\n:type source: String\n\n :param destination: Optional.  Destination subnet name\nfor the route.\n:type destination: String\n\n :param gateway_ip: Optional.   IP address of the\ngateway on the source subnet.\n:type gateway_ip: String\n\n :param metric: Optional.  Weight of the route on a\ndeployed machine.\n:type metric: Int\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete static route\n\nDeletes the static route with the given ID.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage static route.",
        "name": "StaticRouteHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/static-routes/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/static-routes/{id}/"
      },
      "name": "StaticRouteHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List static routes\n\nLists all static routes.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a static route\n\nCreates a static route.\n\n:param source: Required.  Source subnet name for the\nroute.\n:type source: String\n\n :param destination: Required.  Destination subnet name\nfor the route.\n:type destination: String\n\n :param gateway_ip: Required.   IP address of the\ngateway on the source subnet.\n:type gateway_ip: String\n\n :param metric: Optional.  Weight of the route on a\ndeployed machine.\n:type metric: Int\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage static routes.",
        "name": "StaticRoutesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/static-routes/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/static-routes/"
      },
      "name": "StaticRoutesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "POST",
            "name": "dismiss",
            "doc": "Dismiss a notification\n\nDismiss a notification with the given id.\n\nIt is safe to call multiple times for the same notification.\n\n",
            "op": "dismiss",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a notification\n\nRead a notification with the given id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a notification\n\nUpdate a notification with a given id.\n\nThis is available to admins *only*.\n\nNote: One of the ``user``, ``users`` or ``admins`` parameters must be\nset to True for the notification to be visible to anyone.\n\n:param message: Required.  The message for this\nnotification. May contain basic HTML, such as formatting. This string\nwill be sanitised before display so that it doesn't break MAAS HTML.\n:type message: String\n\n :param context: Optional.  Optional JSON context. The\nroot object *must* be an object (i.e. a mapping). The values herein can\nbe referenced by ``message`` with Python's \"format\" (not %) codes.\n:type context: String\n\n :param category: Optional.  Choose from: ``error``,\n``warning``, ``success``, or ``info``. Defaults to ``info``.\n:type category: String\n\n :param ident: Optional.  Unique identifier for this\nnotification.\n:type ident: String\n\n :param user: Optional.  User ID this notification is\nintended for. By default it will not be targeted to any individual\nuser.\n:type user: String\n\n :param users: Optional.  True to notify all users,\ndefaults to false, i.e. not targeted to all users.\n:type users: Boolean\n\n :param admins: Optional.  True to notify all admins,\ndefaults to false, i.e. not targeted to all admins.\n:type admins: Boolean\n\n :param dismissable: Optional.  True to allow users\ndimissing the notification. Defaults to true.\n:type dismissable: Boolean\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a notification\n\nDelete a notification with a given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage an individual notification.",
        "name": "NotificationHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/notifications/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/notifications/{id}/"
      },
      "name": "NotificationHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List notifications\n\nList notifications relevant to the invoking user.\n\nNotifications that have been dismissed are *not* returned.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a notification\n\nCreate a new notification.\n\nThis is available to admins *only*.\n\nNote: One of the ``user``, ``users`` or ``admins`` parameters must be\nset to True for the notification to be visible to anyone.\n\n:param message: Required.  The message for this\nnotification. May contain basic HTML, such as formatting. This string\nwill be sanitised before display so that it doesn't break MAAS HTML.\n:type message: String\n\n :param context: Optional.  Optional JSON context. The\nroot object *must* be an object (i.e. a mapping). The values herein can\nbe referenced by ``message`` with Python's \"format\" (not %) codes.\n:type context: String\n\n :param category: Optional.  Choose from: ``error``,\n``warning``, ``success``, or ``info``. Defaults to ``info``.\n:type category: String\n\n :param ident: Optional.  Unique identifier for this\nnotification.\n:type ident: String\n\n :param user: Optional.  User ID this notification is\nintended for. By default it will not be targeted to any individual\nuser.\n:type user: String\n\n :param users: Optional.  True to notify all users,\ndefaults to false, i.e. not targeted to all users.\n:type users: Boolean\n\n :param admins: Optional.  True to notify all admins,\ndefaults to false, i.e. not targeted to all admins.\n:type admins: Boolean\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of all the notifications in MAAS.",
        "name": "NotificationsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/notifications/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/notifications/"
      },
      "name": "NotificationsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "download",
            "doc": "Download a script\n\nDownload a script with the given name.\n\n:param revision: Optional.  What revision to download,\nlatest by default. Can use rev as a shortcut.\n:type revision: Int\n\n ",
            "op": "download",
            "restful": false
          },
          {
            "method": "POST",
            "name": "revert",
            "doc": "Revert a script version\n\nRevert a script with the given name to an earlier version.\n\n:param to: Optional.  What revision in the script's\nhistory to revert to. This can either be an ID or a negative number\nrepresenting how far back to go.\n:type to: Int\n\n ",
            "op": "revert",
            "restful": false
          },
          {
            "method": "POST",
            "name": "add_tag",
            "doc": "Add a tag\n\nAdd a single tag to a script with the given name.\n\n:param tag: Optional.  The tag being added.\n:type tag: String\n\n ",
            "op": "add_tag",
            "restful": false
          },
          {
            "method": "POST",
            "name": "remove_tag",
            "doc": "Remove a tag\n\nRemove a tag from a script with the given name.\n\n:param tag: Optional.  The tag being removed.\n:type tag: String\n\n ",
            "op": "remove_tag",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Return script metadata\n\nReturn metadata belonging to the script with the given\nname.\n\n:param include_script: Optional.  Include the base64\nencoded script content if any value is given for include_script.\n:type include_script: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a script\n\nUpdate a script with the given name.\n\n:param title: Optional.  The title of the script.\n:type title: String\n\n :param description: Optional.  A description of what\nthe script does.\n:type description: String\n\n :param tags: Optional.  A comma seperated list of tags\nfor this script.\n:type tags: String\n\n :param type: Optional.  The type defines when the\nscript should be used. Can be ``testing`` or ``commissioning``,\ndefaults to ``testing``.\n:type type: String\n\n :param hardware_type: Optional.  The hardware_type\ndefines what type of hardware the script is assoicated with. May be\n``cpu``, ``memory``, ``storage``, ``network``, or ``node``.\n:type hardware_type: String\n\n :param parallel: Optional.  Whether the script may be\nrun in parallel with other scripts. May be disabled to run by itself,\ninstance to run along scripts with the same name, or any to run along\nany script. ``1`` == True, ``0`` == False.\n:type parallel: Int\n\n :param timeout: Optional.  How long the script is allowed\nto run before failing.  0 gives unlimited time, defaults to 0.\n:type timeout: Int\n\n :param destructive: Optional.  Whether or not the\nscript overwrites data on any drive on the running system. Destructive\nscripts can not be run on deployed systems. Defaults to false.\n:type destructive: Boolean\n\n :param script: Optional.  The content of the script to\nbe uploaded in binary form. Note: this is not a normal parameter, but\na file upload. Its filename is ignored; MAAS will know it by the name\nyou pass to the request. Optionally you can ignore the name and script\nparameter in favor of uploading a single file as part of the request.\n:type script: String\n\n :param comment: Optional.  A comment about what this\nchange does.\n:type comment: String\n\n :param for_hardware: Optional.  A list of modalias, PCI\nIDs, and/or USB IDs the script will automatically run on. Must start\nwith ``modalias:``, ``pci:``, or ``usb:``.\n:type for_hardware: String\n\n :param may_reboot: Optional.  Whether or not the\nscript may reboot the system while running.\n:type may_reboot: Boolean\n\n :param recommission: Optional.  Whether built-in\ncommissioning scripts should be rerun after successfully running this\nscripts.\n:type recommission: Boolean\n\n :param apply_configured_networking: Optional.  Whether\nto apply the provided network configuration before the script runs.\n:type apply_configured_networking: Boolean\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a script\n\nDeletes a script with the given name.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage or view a custom script.",
        "name": "NodeScriptHandler",
        "params": [
          "name"
        ],
        "path": "/MAAS/api/2.0/scripts/{name}",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/scripts/{name}"
      },
      "name": "NodeScriptHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List stored scripts\n\nReturn a list of stored scripts.\n\nNote that parameters should be passed in the URI. E.g.\n``/script/?type=testing``.\n\n:param type: Optional.  Only return scripts with the\ngiven type. This can be ``testing`` or ``commissioning``. Defaults to\nshowing both.\n:type type: String\n\n :param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``cpu``, ``memory``, ``storage``,\n``network``, or ``node``.  Defaults to all.\n:type hardware_type: String\n\n :param include_script: Optional.  Include the base64-\nencoded script content.\n:type include_script: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results with a script name or tag.\n:type filters: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a new script\n\nCreate a new script.\n\n:param name: Required.  The name of the script.\n:type name: String\n\n :param title: Optional.  The title of the script.\n:type title: String\n\n :param description: Optional.  A description of what\nthe script does.\n:type description: String\n\n :param tags: Optional.  A comma seperated list of tags\nfor this script.\n:type tags: String\n\n :param type: Optional.  The script_type defines when\nthe script should be used: ``testing`` or ``commissioning``. Defaults\nto ``testing``.\n:type type: String\n\n :param hardware_type: Optional.  The hardware_type\ndefines what type of hardware the script is assoicated with. May be\nCPU, memory, storage, network, or node.\n:type hardware_type: String\n\n :param parallel: Optional.  Whether the script may be\nrun in parallel with other scripts. May be disabled to run by itself,\ninstance to run along scripts with the same name, or any to run along\nany script. 1 == True, 0 == False.\n:type parallel: Int\n\n :param timeout: Optional.  How long the script is allowed\nto run before failing.  0 gives unlimited time, defaults to 0.\n:type timeout: Int\n\n :param destructive: Optional.  Whether or not the\nscript overwrites data on any drive on the running system. Destructive\nscripts can not be run on deployed systems. Defaults to false.\n:type destructive: Boolean\n\n :param script: Optional.  The content of the script to\nbe uploaded in binary form. Note: this is not a normal parameter, but\na file upload. Its filename is ignored; MAAS will know it by the name\nyou pass to the request. Optionally you can ignore the name and script\nparameter in favor of uploading a single file as part of the request.\n:type script: String\n\n :param comment: Optional.  A comment about what this\nchange does.\n:type comment: String\n\n :param for_hardware: Optional.  A list of modalias, PCI\nIDs, and/or USB IDs the script will automatically run on. Must start\nwith ``modalias:``, ``pci:``, or ``usb:``.\n:type for_hardware: String\n\n :param may_reboot: Optional.  Whether or not the\nscript may reboot the system while running.\n:type may_reboot: Boolean\n\n :param recommission: Optional.  Whether builtin\ncommissioning scripts should be rerun after successfully running this\nscripts.\n:type recommission: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage custom scripts.\n\nThis functionality is only available to administrators.",
        "name": "NodeScriptsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/scripts/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/scripts/"
      },
      "name": "NodeScriptsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "download",
            "doc": "Download script results\n\nDownload a compressed tar containing all results from the\ngiven system_id with the given id.\n\n\"id\" can either by the script set id, ``current-commissioning``,\n``current-testing``, or ``current-installation``.\n\n:param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``, or\n``storage``.  Defaults to all.\n:type hardware_type: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results that ran with a script name or tag.\n:type filters: String\n\n :param output: Optional.  Can be either ``combined``,\n``stdout``, ``stderr``, or ``all``. By default only the combined output\nis returned.\n:type output: String\n\n :param filetype: Optional.  Filetype to output, can be\n``txt`` or ``tar.xz``.\n:type filetype: String\n\n ",
            "op": "download",
            "restful": false
          },
          {
            "method": "GET",
            "name": "read",
            "doc": "Get specific script result\n\nView a set of test results for a given system_id and\nscript id.\n\n\"id\" can either by the script set id, ``current-commissioning``,\n``current-testing``, or ``current-installation``.\n\n:param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``, or\n``storage``.  Defaults to all.\n:type hardware_type: String\n\n :param include_output: Optional.  Include the base64\nencoded output from the script if any value for include_output is\ngiven.\n:type include_output: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results that ran with a script name, tag, or id.\n:type filters: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update specific script result\n\nUpdate a set of test results for a given system_id and\nscript id.\n\n\"id\" can either be the script set id, ``current-commissioning``,\n``current-testing``, or ``current-installation``.\n\n:param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``, or\n``storage``.  Defaults to all.\n:type hardware_type: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results that ran with a script name, tag, or id.\n:type filters: String\n\n :param include_output: Optional.  Include the base64\nencoded output from the script if any value for include_output is\ngiven.\n:type include_output: String\n\n :param suppressed: Optional.  Set whether or not\nthis script result should be suppressed using 'true' or 'false'.\n:type suppressed: Boolean\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete script results\n\nDelete script results from the given system_id with the\ngiven id.\n\n\"id\" can either by the script set id, ``current-commissioning``,\n``current-testing``, or ``current-installation``.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage node script results.",
        "name": "NodeScriptResultHandler",
        "params": [
          "system_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/results/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/results/{id}/"
      },
      "name": "NodeScriptResultHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Return script results\n\nReturn a list of script results grouped by run for the\ngiven system_id.\n\n:param type: Optional.  Only return scripts with the\ngiven type. This can be ``commissioning``, ``testing``, or\n``installion``. Defaults to showing all.\n:type type: String\n\n :param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``, or\n``storage``.  Defaults to all.\n:type hardware_type: String\n\n :param include_output: Optional.  Include base64\nencoded output from the script. Note that any value of include_output\nwill include the encoded output from the script.\n:type include_output: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results with a script name or tag.\n:type filters: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage node script results.",
        "name": "NodeScriptResultsHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/results/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/results/"
      },
      "name": "NodeScriptResultsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Returns a resource pool.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Updates a resource pool's name or description.\n\nNote that any other given parameters are silently ignored.\n\n:param description: Optional.  A brief description of\n    the resource pool.\n:type description: String\n\n :param name: Optional.  The resource pool's new name.\n:type name: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Deletes a resource pool.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a resource pool.",
        "name": "ResourcePoolHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/resourcepool/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/resourcepool/{id}/"
      },
      "name": "ResourcePoolHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Get a listing of all resource pools.\n\nNote that there is always at least one resource pool: default.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Creates a new resource pool.\n\n:param name: Required.  The new resource pool's name.\n:type name: String\n\n :param description: Optional.  A brief description of\n    the new resource pool.\n:type description: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage resource pools.",
        "name": "ResourcePoolsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/resourcepools/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/resourcepools/"
      },
      "name": "ResourcePoolsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Return a specific node device\n\nReturn a node device with the given system_id and node\ndevice id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a node device\n\nDelete a node device with the given system_id and id.\nIf the device is still present in the system it will be recreated\nwhen the node is commissioned.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "View a specific NodeDevice from a Node.",
        "name": "NodeDeviceHandler",
        "params": [
          "system_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/devices/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/devices/{id}/"
      },
      "name": "NodeDeviceHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Return node devices\n\nReturn a list of devices attached to the node given by\na system_id.\n\n:param bus: Optional.  Only return devices attached to\nthe specified bus. Can be PCIE or USB. Defaults to all.\n:type bus: String\n\n :param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``,\n``storage`` or ``gpu``.  Defaults to all.\n:type hardware_type: String\n\n :param vendor_id: Optional.  Only return devices which\nhave the specified vendor id.\n:type vendor_id: String\n\n :param product_id: Optional.  Only return devices which\nhave the specified product id.\n:type product_id: String\n\n :param vendor_name: Optional.  Only return devices\nwhich have the specified vendor_name.\n:type vendor_name: String\n\n :param product_name: Optional.  Only return devices\nwhich have the specified product_name.\n:type product_name: String\n\n :param commissioning_driver: Optional.  Only return\ndevices which use the specified driver when commissioning.\n:type commissioning_driver: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "View NodeDevices from a Node.",
        "name": "NodeDevicesHandler",
        "params": [
          "system_id"
        ],
        "path": "/MAAS/api/2.0/nodes/{system_id}/devices/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/devices/"
      },
      "name": "NodeDevicesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a commissioning script.",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a commissioning script.",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a commissioning script.",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a custom commissioning script.\n\nThis functionality is only available to administrators.\n\nThis endpoint has been deprecated in favor of the node-script endpoint.",
        "name": "CommissioningScriptHandler",
        "params": [
          "name"
        ],
        "path": "/MAAS/api/2.0/commissioning-scripts/{name}",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/commissioning-scripts/{name}"
      },
      "name": "CommissioningScriptHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List commissioning scripts.",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a new commissioning script.\n\nEach commissioning script is identified by a unique name.\n\nBy convention the name should consist of a two-digit number, a dash,\nand a brief descriptive identifier consisting only of ASCII\ncharacters.  You don't need to follow this convention, but not doing\nso opens you up to risks w.r.t. encoding and ordering.  The name must\nnot contain any whitespace, quotes, or apostrophes.\n\nA commissioning machine will run each of the scripts in lexicographical\norder.  There are no promises about how non-ASCII characters are\nsorted, or even how upper-case letters are sorted relative to\nlower-case letters.  So where ordering matters, use unique numbers.\n\nScripts built into MAAS will have names starting with \"00-maas\" or\n\"99-maas\" to ensure that they run first or last, respectively.\n\nUsually a commissioning script will be just that, a script.  Ideally a\nscript should be ASCII text to avoid any confusion over encoding.  But\nin some cases a commissioning script might consist of a binary tool\nprovided by a hardware vendor.  Either way, the script gets passed to\nthe commissioning machine in the exact form in which it was uploaded.\n\n:param name: Unique identifying name for the script.  Names should\n    follow the pattern of \"25-burn-in-hard-disk\" (all ASCII, and with\n    numbers greater than zero, and generally no \"weird\" characters).\n:param content: A script file, to be uploaded in binary form.  Note:\n    this is not a normal parameter, but a file upload.  Its filename\n    is ignored; MAAS will know it by the name you pass to the request.",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage custom commissioning scripts.\n\nThis functionality is only available to administrators.\n\nThis endpoint has been deprecated in favor of the node-scripts endpoint.",
        "name": "CommissioningScriptsHandler",
        "params": [],
        "path": "/MAAS/api/2.0/commissioning-scripts/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/commissioning-scripts/"
      },
      "name": "CommissioningScriptsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a boot source\n\nRead a boot source with the given id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a boot source\n\nUpdate a boot source with the given id.\n\n:param url: Optional.  The URL of the BootSource.\n:type url: String\n\n :param keyring_filename: Optional.  The path to the\nkeyring file for this BootSource.\n:type keyring_filename: String\n\n :param keyring_data: Optional.  The GPG keyring for\nthis BootSource, base64-encoded data.\n:type keyring_data: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a boot source\n\nDelete a boot source with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a boot source.",
        "name": "BootSourceHandler",
        "params": [
          "id"
        ],
        "path": "/MAAS/api/2.0/boot-sources/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-sources/{id}/"
      },
      "name": "BootSourceHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List boot sources\n\nList all boot sources.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a boot source\n\nCreate a new boot source. Note that in addition to\n``url``, you must supply either ``keyring_data`` or\n``keyring_filename``.\n\n:param url: Required.  The URL of the BootSource.\n:type url: String\n\n :param keyring_filename: Optional.  The path to the\nkeyring file for this BootSource.\n:type keyring_filename: String\n\n :param keyring_data: Optional.  The GPG keyring for\nthis BootSource, base64-encoded.\n:type keyring_data: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of boot sources.",
        "name": "BootSourcesHandler",
        "params": [],
        "path": "/MAAS/api/2.0/boot-sources/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-sources/"
      },
      "name": "BootSourcesHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read a boot source selection\n\nRead a boot source selection with the given id.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update a boot-source selection\n\nUpdate a boot source selection with the given id.\n\n:param os: Optional.  The OS (e.g. ubuntu, centos) for\nwhich to import resources.\n:type os: String\n\n :param release: Optional.  The release for which to\nimport resources.\n:type release: String\n\n :param arches: Optional.  The list of architectures for\nwhich to import resources.\n:type arches: String\n\n :param subarches: Optional.  The list of\nsub-architectures for which to import resources.\n:type subarches: String\n\n :param labels: Optional.  The list of labels for which\nto import resources.\n:type labels: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete a boot source\n\nDelete a boot source with the given id.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a boot source selection.",
        "name": "BootSourceSelectionHandler",
        "params": [
          "boot_source_id",
          "id"
        ],
        "path": "/MAAS/api/2.0/boot-sources/{boot_source_id}/selections/{id}/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-sources/{boot_source_id}/selections/{id}/"
      },
      "name": "BootSourceSelectionHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List boot-source selections\n\nList all available boot-source selections.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Create a boot-source selection\n\nCreate a new boot source selection.\n\n:param os: Optional.  The OS (e.g. ubuntu, centos) for\nwhich to import resources.\n:type os: String\n\n :param release: Optional.  The release for which to\nimport resources.\n:type release: String\n\n :param arches: Optional.  The architecture list for\nwhich to import resources.\n:type arches: String\n\n :param subarches: Optional.  The subarchitecture list\nfor which to import resources.\n:type subarches: String\n\n :param labels: Optional.  The label lists for which to\nimport resources.\n:type labels: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the collection of boot source selections.",
        "name": "BootSourceSelectionsHandler",
        "params": [
          "boot_source_id"
        ],
        "path": "/MAAS/api/2.0/boot-sources/{boot_source_id}/selections/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-sources/{boot_source_id}/selections/"
      },
      "name": "BootSourceSelectionsHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "Read license key\n\nRead a license key for the given operating sytem and\ndistro series.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "PUT",
            "name": "update",
            "doc": "Update license key\n\nUpdate a license key for the given operating system and\ndistro series.\n\n:param license_key: Optional.  License key for\nosystem/distro_series combo.\n:type license_key: String\n\n ",
            "op": null,
            "restful": true
          },
          {
            "method": "DELETE",
            "name": "delete",
            "doc": "Delete license key\n\nDelete license key for the given operation system and\ndistro series.\n\n",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage a license key.",
        "name": "LicenseKeyHandler",
        "params": [
          "osystem",
          "distro_series"
        ],
        "path": "/MAAS/api/2.0/license-key/{osystem}/{distro_series}",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/license-key/{osystem}/{distro_series}"
      },
      "name": "LicenseKeyHandler"
    },
    {
      "anon": null,
      "auth": {
        "actions": [
          {
            "method": "GET",
            "name": "read",
            "doc": "List license keys\n\nList all available license keys.\n\n",
            "op": null,
            "restful": true
          },
          {
            "method": "POST",
            "name": "create",
            "doc": "Define a license key\n\nDefine a license key.\n\n:param osystem: Required.  Operating system that the key\nbelongs to.\n:type osystem: String\n\n :param distro_series: Required.  OS release that the key\nbelongs to.\n:type distro_series: String\n\n :param license_key: Required.  License key for\nosystem/distro_series combo.\n:type license_key: String\n\n ",
            "op": null,
            "restful": true
          }
        ],
        "doc": "Manage the license keys.",
        "name": "LicenseKeysHandler",
        "params": [],
        "path": "/MAAS/api/2.0/license-keys/",
        "uri": "http://192.0.2.1:5240/MAAS/api/2.0/license-keys/"
      },
      "name": "LicenseKeysHandler"
    }
  ],
  "handlers": [
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "GET",
          "name": "is_action_in_progress",
          "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_action_in_progress",
          "restful": false
        }
      ],
      "doc": "Anonymous access to Nodes.",
      "name": "AnonNodesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/nodes/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "GET",
          "name": "is_action_in_progress",
          "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_action_in_progress",
          "restful": false
        }
      ],
      "doc": "Anonymous access to Nodes.",
      "name": "AnonNodesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/nodes/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "get_by_key",
          "doc": "Get a file by key\n\nGet a file from the file storage with the given key.\n\n:param key: Required.  The file's key.\n:type key: String\n\n ",
          "op": "get_by_key",
          "restful": false
        }
      ],
      "doc": "Anonymous file operations.\n\nThis is needed for Juju. The story goes something like this:\n\n- The Juju provider will upload a file using an \"unguessable\" name.\n\n- The name of this file (or its URL) will be shared with all the agents in\n  the environment. They cannot modify the file, but they can access it\n  without credentials.",
      "name": "AnonFilesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/files/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/files/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "GET",
          "name": "is_action_in_progress",
          "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_action_in_progress",
          "restful": false
        }
      ],
      "doc": "Anonymous access to Nodes.",
      "name": "AnonNodesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/nodes/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "MAAS version information\n\nRead version and capabilities of this MAAS instance.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Information about this MAAS instance.",
      "name": "VersionHandler",
      "params": [],
      "path": "/MAAS/api/2.0/version/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/version/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "GET",
          "name": "is_action_in_progress",
          "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_action_in_progress",
          "restful": false
        },
        {
          "method": "POST",
          "name": "accept",
          "doc": "Accept a machine's enlistment: not allowed to anonymous users.\n\nAlways returns 401.",
          "op": "accept",
          "restful": false
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a new machine\n\nCreate a new machine.\n\nAdding a server to MAAS wipes its disks and re-installs its operating\nsystem, in the event that it PXE boots.  In anonymous enlistment (and\nwhen the enlistment is done by a non-admin), the machine is held in the\n\"New\" state for approval by a MAAS admin.\n\nThe minimum data required is:\n\narchitecture=<arch string> (e.g. \"i386/generic\")\nmac_addresses=<value> (e.g. \"aa:bb:cc:dd:ee:ff\")\n\n:param architecture: Required.  A string containing the\narchitecture type of the machine. (For example, \"i386\", or \"amd64\".) To\n:type architecture: unicode\n:type architecture: String\n\n :param min_hwe_kernel: Optional.  A string containing\nthe minimum kernel version allowed to be ran on this machine.\n:type min_hwe_kernel: String\n\n :param subarchitecture: Optional.  A string containing\nthe subarchitecture type of the machine. (For example, \"generic\" or\n\"hwe-t\".) To determine the supported subarchitectures, use the\nboot-resources endpoint.\n:type subarchitecture: String\n\n :param mac_addresses: Required.  One or more MAC\naddresses for the machine. To specify more than one MAC address, the\nparameter must be specified twice. (such as \"machines new\nmac_addresses=01:02:03:04:05:06 mac_addresses=02:03:04:05:06:07\")\n:type mac_addresses: String\n\n :param hostname: Optional.  A hostname. If not given,\none will be generated.\n:type hostname: String\n\n :param domain: Optional.  The domain of the machine. If\nnot given the default domain is used.\n:type domain: String\n\n :param power_type: Optional.  A power management type,\nif applicable (e.g.  \"virsh\", \"ipmi\").\n:type power_type: String\n\n :param commission: Optional.  Request\nthe newly created machine to be created with status set to\nCOMMISSIONING. Machines will wait for COMMISSIONING results and not\ntime out. After commissioning is complete machines will still have to\nbe accepted by an administrator.\n:type commission: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Anonymous access to Machines.",
      "name": "AnonMachinesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/machines/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/machines/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "GET",
          "name": "is_action_in_progress",
          "doc": "MAC address of deploying or commissioning node\n\nReturns whether or not the given MAC address is a machine\nthat's either 'deploying' or 'commissioning'.\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_action_in_progress",
          "restful": false
        }
      ],
      "doc": "Anonymous access to Nodes.",
      "name": "AnonNodesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/nodes/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "details",
          "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
          "op": "details",
          "restful": false
        },
        {
          "method": "GET",
          "name": "power_parameters",
          "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
          "op": "power_parameters",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a region controller\n\nUpdates a region controller with the given system_id.\n\n:param description: Optional.  The new description for\nthis given region controller.\n:type description: String\n\n :param power_type: Optional.  The new power type for\nthis region controller. If you use the default value, power_parameters\nwill be set to the empty string.  Available to admin users.  See the\n`Power types`_ section for a list of the available power types.\n:type power_type: String\n\n :param power_parameters_skip_check: Optional.  Whether\nor not the new power parameters for this region controller should be\nchecked against the expected power parameters for the region\ncontroller's power type ('true' or 'false').  The default is 'false'.\n:type power_parameters_skip_check: Boolean\n\n :param zone: Optional.  Name of a valid physical zone\nin which to place this region controller.\n:type zone: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a region controller\n\nDeletes a region controller with the given system_id.\n\nA region controller cannot be deleted if it hosts pod virtual machines.\nUse `force` to override this behavior. Forcing deletion will also\nremove hosted pods.\n\n:param force: Optional.  Tells MAAS to override\ndisallowing deletion of region controllers that host pod virtual\nmachines.\n:type force: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual region controller.\n\nThe region controller is identified by its system_id.",
      "name": "RegionControllerHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/regioncontrollers/{system_id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/regioncontrollers/{system_id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_zone",
          "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
          "op": "set_zone",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all region controllers in MAAS.",
      "name": "RegionControllersHandler",
      "params": [],
      "path": "/MAAS/api/2.0/regioncontrollers/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/regioncontrollers/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "details",
          "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
          "op": "details",
          "restful": false
        },
        {
          "method": "GET",
          "name": "power_parameters",
          "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
          "op": "power_parameters",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_workload_annotations",
          "doc": "Set key=value data\n\nSet key=value data for the current owner.\n\nPass any key=value form data to this method to add, modify, or remove.\nA key is removed when the value for that key is set to an empty string.\n\nThis operation will not remove any previous keys unless explicitly\npassed with an empty string. All workload annotations are removed when\nthe machine is no longer allocated to a user.\n\n:param key: Required.  ``key`` can be any string value.\n:type key: String\n\n ",
          "op": "set_workload_annotations",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_owner_data",
          "doc": "Deprecated, use set-workload-annotations.\n\nDeprecated, use set-workload-annotations instead.\n\n",
          "op": "set_owner_data",
          "restful": false
        },
        {
          "method": "POST",
          "name": "restore_networking_configuration",
          "doc": "Reset networking options\n\nRestore the networking options of a device with the given\nsystem_id to default values.\n\n",
          "op": "restore_networking_configuration",
          "restful": false
        },
        {
          "method": "POST",
          "name": "restore_default_configuration",
          "doc": "Reset device configuration\n\nRestore the configuration options of a device with the\ngiven system_id to default values.\n\n",
          "op": "restore_default_configuration",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a device\n\nUpdate a device with a given system_id.\n\n:param hostname: Optional.  The hostname for this\ndevice.\n:type hostname: String\n\n :param description: Optional.  The optional description\nfor this machine.\n:type description: String\n\n :param domain: Optional.  The domain for this device.\n:type domain: String\n\n :param parent: Optional.  Optional system_id to\nindicate this device's parent. If the parent is already set and this\nparameter is omitted, the parent will be unchanged.\n:type parent: String\n\n :param zone: Optional.  Name of a valid physical zone\nin which to place this node.\n:type zone: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a device\n\nDelete a device with the given system_id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual device.\n\nThe device is identified by its system_id.",
      "name": "DeviceHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/devices/{system_id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/devices/{system_id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_zone",
          "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
          "op": "set_zone",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a new device\n\nCreate a new device.\n\n:param hostname: Optional.  A hostname. If not given,\none will be generated.\n:type hostname: String\n\n :param description: Optional.  A optional description.\n:type description: String\n\n :param domain: Optional.  The domain of the device. If\nnot given the default domain is used.\n:type domain: String\n\n :param mac_addresses: Required.  One or more MAC\naddresses for the device.\n:type mac_addresses: String\n\n :param parent: Optional.  The system id of the parent.\n:type parent: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all the devices in the MAAS.",
      "name": "DevicesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/devices/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/devices/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "refresh",
          "doc": "Refresh a VM host\n\nPerforms VM host discovery and updates all discovered\ninformation and discovered machines.\n\n",
          "op": "refresh",
          "restful": false
        },
        {
          "method": "GET",
          "name": "parameters",
          "doc": "Obtain VM host parameters\n\nThis returns a VM host's configuration parameters. For some\ntypes of VM host, this will include private information such as passwords\nand secret keys.\n\nNote: This method is reserved for admin users.\n\n",
          "op": "parameters",
          "restful": false
        },
        {
          "method": "POST",
          "name": "compose",
          "doc": "Compose a virtual machine on the host.\n\nCompose a new machine from a VM host.\n\n:param cores: Optional.  The minimum number of CPU cores.\n:type cores: Int\n\n :param memory: Optional.  The minimum amount of memory,\nspecified in MiB (e.g. 2 MiB == 2*1024*1024).\n:type memory: Int\n\n :param hugepages_backed: Optional.  Whether to request\nhugepages backing for the machine.\n:type hugepages_backed: Boolean\n\n :param pinned_cores: Optional.  List of host CPU cores\nto pin the VM to. If this is passed, the \"cores\" parameter is ignored.\n:type pinned_cores: Int\n\n :param cpu_speed: Optional.  The minimum CPU speed,\nspecified in MHz.\n:type cpu_speed: Int\n\n :param architecture: Optional.  The architecture of\nthe new machine (e.g. amd64). This must be an architecture the VM host\nsupports.\n:type architecture: String\n\n :param storage: Optional.  A list of storage\nconstraint identifiers in the form ``label:size(tag,tag,...),\nlabel:size(tag,tag,...)``. For more information please see the CLI\nVM host management page of the official MAAS documentation.\n:type storage: String\n\n :param interfaces: Optional.  A\nlabeled constraint map associating constraint labels with desired\ninterface properties. MAAS will assign interfaces that match the\ngiven interface properties.\n\nFormat: ``label:key=value,key=value,...``\n\nKeys:\n\n- ``id``: Matches an interface with the specific id\n- ``fabric``: Matches an interface attached to the specified fabric.\n- ``fabric_class``: Matches an interface attached to a fabric\n  with the specified class.\n- ``ip``: Matches an interface whose VLAN is on the subnet implied by\n  the given IP address, and allocates the specified IP address for\n  the machine on that interface (if it is available).\n- ``mode``: Matches an interface with the specified mode. (Currently,\n  the only supported mode is \"unconfigured\".)\n- ``name``: Matches an interface with the specified name.\n  (For example, \"eth0\".)\n- ``hostname``: Matches an interface attached to the node with\n  the specified hostname.\n- ``subnet``: Matches an interface attached to the specified subnet.\n- ``space``: Matches an interface attached to the specified space.\n- ``subnet_cidr``: Matches an interface attached to the specified\n  subnet CIDR. (For example, \"192.168.0.0/24\".)\n- ``type``: Matches an interface of the specified type. (Valid\n  types: \"physical\", \"vlan\", \"bond\", \"bridge\", or \"unknown\".)\n- ``vlan``: Matches an interface on the specified VLAN.\n- ``vid``: Matches an interface on a VLAN with the specified VID.\n- ``tag``: Matches an interface tagged with the specified tag.\n:type interfaces: String\n\n :param hostname: Optional.  The hostname of the newly\ncomposed machine.\n:type hostname: String\n\n :param domain: Optional.  The ID of the domain in which\nto put the newly composed machine.\n:type domain: Int\n\n :param zone: Optional.  The ID of the zone in which to\nput the newly composed machine.\n:type zone: Int\n\n :param pool: Optional.  The ID of the pool in which to\nput the newly composed machine.\n:type pool: Int\n\n ",
          "op": "compose",
          "restful": false
        },
        {
          "method": "POST",
          "name": "add_tag",
          "doc": "Add a tag to a VM host\n\nAdds a tag to a given VM host.\n\n:param tag: Required.  The tag to add.\n:type tag: String\n\n ",
          "op": "add_tag",
          "restful": false
        },
        {
          "method": "POST",
          "name": "remove_tag",
          "doc": "Remove a tag from a VM host\n\nRemoves a given tag from a VM host.\n\n:param tag: Required.  The tag to add.\n:type tag: String\n\n ",
          "op": "remove_tag",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": null,
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a specific VM host\n\nUpdate a specific VM host by ID.\n\nNote: A VM host's 'type' cannot be updated. The VM host must be deleted\nand re-added to change the type.\n\n:param name: Optional.  The VM host's name.\n:type name: String\n\n :param pool: Optional.  The name of the resource pool\nassociated with this VM host -- composed machines will be assigned to this\nresource pool by default.\n:type pool: String\n\n :param cpu_over_commit_ratio: Optional.  CPU overcommit\nratio (0-10)\n:type cpu_over_commit_ratio: Int\n\n :param memory_over_commit_ratio: Optional.  CPU overcommit\nratio (0-10)\n:type memory_over_commit_ratio: Int\n\n :param default_storage_pool: Optional.  Default KVM\nstorage pool to use when the VM host has storage pools.\n:type default_storage_pool: String\n\n :param power_address: Optional.  Address for power\ncontrol of the VM host.\n:type power_address: String\n\n :param power_pass: Optional.  Password for access to\npower control of the VM host.\n:type power_pass: String\n\n :param zone: Optional.  The VM host's zone.\n:type zone: String\n\n :param default_macvlan_mode: Optional.  Default macvlan\nmode for VM hosts that use it: bridge, passthru, private, vepa.\n:type default_macvlan_mode: String\n\n :param tags: Optional.  Tag or tags (command separated)\nassociated with the VM host.\n:type tags: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Deletes a VM host\n\nDeletes a VM host with the given ID.\n\n:param decompose: Optional.  Whether to also also\ndecompose all machines in the VM host on removal. If not provided, machines\nwill not be removed.\n:type decompose: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual Pod.\n\nThe /pod/ API endpoint is deprecated. Please use the /vm-host/ one instead.",
      "name": "PodHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/pods/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/pods/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List VM hosts\n\nGet a listing of all VM hosts.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a VM host\n\nCreate or discover a new VM host.\n\n:param type: Required.  The type of VM host to create:\n``lxd`` or ``virsh``.\n:type type: String\n\n :param power_address: Required.  Address that gives\nMAAS access to the VM host power control. For example, for virsh\n``qemu+ssh://172.16.99.2/system``\nFor ``lxd``, this is just the address of the host.\n:type power_address: String\n\n :param power_user: Required.  Username to use for\npower control of the VM host. Required for ``virsh``\nVM hosts that do not have SSH set up for public-key authentication.\n:type power_user: String\n\n :param power_pass: Required.  Password to use for\npower control of the VM host. Required ``virsh`` VM hosts that do\nnot have SSH set up for public-key authentication and for ``lxd``\nif the MAAS certificate is not registered already in the LXD server.\n:type power_pass: String\n\n :param name: Optional.  The new VM host's name.\n:type name: String\n\n :param zone: Optional.  The new VM host's zone.\n:type zone: String\n\n :param pool: Optional.  The name of the resource\npool the new VM host will belong to. Machines composed from this VM host\nwill be assigned to this resource pool by default.\n:type pool: String\n\n :param tags: Optional.  A tag or list of tags (\ncomma delimited) to assign to the new VM host.\n:type tags: String\n\n :param project: Optional.  For ``lxd`` VM hosts, the\nproject that MAAS will manage. If not provided, the ``default`` project\nwill be used. If a nonexistent name is given, a new project with that\nname will be created.\n:type project: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all the pods in the MAAS.\n\nThe /pods/ API endpoint is deprecated. Please use the /vm-hosts/ one\ninstead.",
      "name": "PodsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/pods/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/pods/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "refresh",
          "doc": "Refresh a VM host\n\nPerforms VM host discovery and updates all discovered\ninformation and discovered machines.\n\n",
          "op": "refresh",
          "restful": false
        },
        {
          "method": "GET",
          "name": "parameters",
          "doc": "Obtain VM host parameters\n\nThis returns a VM host's configuration parameters. For some\ntypes of VM host, this will include private information such as passwords\nand secret keys.\n\nNote: This method is reserved for admin users.\n\n",
          "op": "parameters",
          "restful": false
        },
        {
          "method": "POST",
          "name": "compose",
          "doc": "Compose a virtual machine on the host.\n\nCompose a new machine from a VM host.\n\n:param cores: Optional.  The minimum number of CPU cores.\n:type cores: Int\n\n :param memory: Optional.  The minimum amount of memory,\nspecified in MiB (e.g. 2 MiB == 2*1024*1024).\n:type memory: Int\n\n :param hugepages_backed: Optional.  Whether to request\nhugepages backing for the machine.\n:type hugepages_backed: Boolean\n\n :param pinned_cores: Optional.  List of host CPU cores\nto pin the VM to. If this is passed, the \"cores\" parameter is ignored.\n:type pinned_cores: Int\n\n :param cpu_speed: Optional.  The minimum CPU speed,\nspecified in MHz.\n:type cpu_speed: Int\n\n :param architecture: Optional.  The architecture of\nthe new machine (e.g. amd64). This must be an architecture the VM host\nsupports.\n:type architecture: String\n\n :param storage: Optional.  A list of storage\nconstraint identifiers in the form ``label:size(tag,tag,...),\nlabel:size(tag,tag,...)``. For more information please see the CLI\nVM host management page of the official MAAS documentation.\n:type storage: String\n\n :param interfaces: Optional.  A\nlabeled constraint map associating constraint labels with desired\ninterface properties. MAAS will assign interfaces that match the\ngiven interface properties.\n\nFormat: ``label:key=value,key=value,...``\n\nKeys:\n\n- ``id``: Matches an interface with the specific id\n- ``fabric``: Matches an interface attached to the specified fabric.\n- ``fabric_class``: Matches an interface attached to a fabric\n  with the specified class.\n- ``ip``: Matches an interface whose VLAN is on the subnet implied by\n  the given IP address, and allocates the specified IP address for\n  the machine on that interface (if it is available).\n- ``mode``: Matches an interface with the specified mode. (Currently,\n  the only supported mode is \"unconfigured\".)\n- ``name``: Matches an interface with the specified name.\n  (For example, \"eth0\".)\n- ``hostname``: Matches an interface attached to the node with\n  the specified hostname.\n- ``subnet``: Matches an interface attached to the specified subnet.\n- ``space``: Matches an interface attached to the specified space.\n- ``subnet_cidr``: Matches an interface attached to the specified\n  subnet CIDR. (For example, \"192.168.0.0/24\".)\n- ``type``: Matches an interface of the specified type. (Valid\n  types: \"physical\", \"vlan\", \"bond\", \"bridge\", or \"unknown\".)\n- ``vlan``: Matches an interface on the specified VLAN.\n- ``vid``: Matches an interface on a VLAN with the specified VID.\n- ``tag``: Matches an interface tagged with the specified tag.\n:type interfaces: String\n\n :param hostname: Optional.  The hostname of the newly\ncomposed machine.\n:type hostname: String\n\n :param domain: Optional.  The ID of the domain in which\nto put the newly composed machine.\n:type domain: Int\n\n :param zone: Optional.  The ID of the zone in which to\nput the newly composed machine.\n:type zone: Int\n\n :param pool: Optional.  The ID of the pool in which to\nput the newly composed machine.\n:type pool: Int\n\n ",
          "op": "compose",
          "restful": false
        },
        {
          "method": "POST",
          "name": "add_tag",
          "doc": "Add a tag to a VM host\n\nAdds a tag to a given VM host.\n\n:param tag: Required.  The tag to add.\n:type tag: String\n\n ",
          "op": "add_tag",
          "restful": false
        },
        {
          "method": "POST",
          "name": "remove_tag",
          "doc": "Remove a tag from a VM host\n\nRemoves a given tag from a VM host.\n\n:param tag: Required.  The tag to add.\n:type tag: String\n\n ",
          "op": "remove_tag",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": null,
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a specific VM host\n\nUpdate a specific VM host by ID.\n\nNote: A VM host's 'type' cannot be updated. The VM host must be deleted\nand re-added to change the type.\n\n:param name: Optional.  The VM host's name.\n:type name: String\n\n :param pool: Optional.  The name of the resource pool\nassociated with this VM host -- composed machines will be assigned to this\nresource pool by default.\n:type pool: String\n\n :param cpu_over_commit_ratio: Optional.  CPU overcommit\nratio (0-10)\n:type cpu_over_commit_ratio: Int\n\n :param memory_over_commit_ratio: Optional.  CPU overcommit\nratio (0-10)\n:type memory_over_commit_ratio: Int\n\n :param default_storage_pool: Optional.  Default KVM\nstorage pool to use when the VM host has storage pools.\n:type default_storage_pool: String\n\n :param power_address: Optional.  Address for power\ncontrol of the VM host.\n:type power_address: String\n\n :param power_pass: Optional.  Password for access to\npower control of the VM host.\n:type power_pass: String\n\n :param zone: Optional.  The VM host's zone.\n:type zone: String\n\n :param default_macvlan_mode: Optional.  Default macvlan\nmode for VM hosts that use it: bridge, passthru, private, vepa.\n:type default_macvlan_mode: String\n\n :param tags: Optional.  Tag or tags (command separated)\nassociated with the VM host.\n:type tags: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Deletes a VM host\n\nDeletes a VM host with the given ID.\n\n:param decompose: Optional.  Whether to also also\ndecompose all machines in the VM host on removal. If not provided, machines\nwill not be removed.\n:type decompose: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual VM host.\n\nA VM host is identified by its id.",
      "name": "VmHostHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/vm-hosts/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/vm-hosts/{id}/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "create_authorisation_token",
          "doc": "Create an authorisation token\n\nCreate an authorisation OAuth token and OAuth consumer.\n\n:param name: Optional.  Optional name of the token that\nwill be generated.\n:type name: String\n\n ",
          "op": "create_authorisation_token",
          "restful": false
        },
        {
          "method": "POST",
          "name": "delete_authorisation_token",
          "doc": "Delete an authorisation token\n\nDelete an authorisation OAuth token and the related OAuth\nconsumer.\n\n:param token_key: Required.  The key of the token to be\ndeleted.\n:type token_key: String\n\n ",
          "op": "delete_authorisation_token",
          "restful": false
        },
        {
          "method": "POST",
          "name": "update_token_name",
          "doc": "Modify authorisation token\n\nModify the consumer name of an authorisation OAuth token.\n\n:param token: Required.  Can be the whole token or only\nthe token key.\n:type token: String\n\n :param name: Required.  New name of the token.\n:type name: String\n\n ",
          "op": "update_token_name",
          "restful": false
        },
        {
          "method": "GET",
          "name": "list_authorisation_tokens",
          "doc": "List authorisation tokens\n\nList authorisation tokens available to the currently\nlogged-in user.\n\n",
          "op": "list_authorisation_tokens",
          "restful": false
        }
      ],
      "doc": "Manage the current logged-in user.",
      "name": "AccountHandler",
      "params": [],
      "path": "/MAAS/api/2.0/account/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List VM hosts\n\nGet a listing of all VM hosts.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a VM host\n\nCreate or discover a new VM host.\n\n:param type: Required.  The type of VM host to create:\n``lxd`` or ``virsh``.\n:type type: String\n\n :param power_address: Required.  Address that gives\nMAAS access to the VM host power control. For example, for virsh\n``qemu+ssh://172.16.99.2/system``\nFor ``lxd``, this is just the address of the host.\n:type power_address: String\n\n :param power_user: Required.  Username to use for\npower control of the VM host. Required for ``virsh``\nVM hosts that do not have SSH set up for public-key authentication.\n:type power_user: String\n\n :param power_pass: Required.  Password to use for\npower control of the VM host. Required ``virsh`` VM hosts that do\nnot have SSH set up for public-key authentication and for ``lxd``\nif the MAAS certificate is not registered already in the LXD server.\n:type power_pass: String\n\n :param name: Optional.  The new VM host's name.\n:type name: String\n\n :param zone: Optional.  The new VM host's zone.\n:type zone: String\n\n :param pool: Optional.  The name of the resource\npool the new VM host will belong to. Machines composed from this VM host\nwill be assigned to this resource pool by default.\n:type pool: String\n\n :param tags: Optional.  A tag or list of tags (\ncomma delimited) to assign to the new VM host.\n:type tags: String\n\n :param project: Optional.  For ``lxd`` VM hosts, the\nproject that MAAS will manage. If not provided, the ``default`` project\nwill be used. If a nonexistent name is given, a new project with that\nname will be created.\n:type project: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all the VM hosts in MAAS.",
      "name": "VmHostsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/vm-hosts/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/vm-hosts/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a boot resource\n\nReads a boot resource by id\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a boot resource\n\nDelete a boot resource by id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a boot resource.",
      "name": "BootResourceHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/boot-resources/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-resources/{id}/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "revert",
          "doc": "Revert DHCP snippet to earlier version\n\nRevert the value of a DHCP snippet with the given id to an\nearlier revision.\n\n:param to: Required.  What revision in the DHCP snippet's\nhistory to revert to.  This can either be an ID or a negative number\nrepresenting how far back to go.\n:type to: Int\n\n ",
          "op": "revert",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a DHCP snippet\n\nRead a DHCP snippet with the given id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a DHCP snippet\n\nUpdate a DHCP snippet with the given id.\n\n:param name: Optional.  The name of the DHCP snippet.\n:type name: String\n\n :param value: Optional.  The new value of the DHCP\nsnippet to be used in dhcpd.conf. Previous values are stored and can be\nreverted.\n:type value: String\n\n :param description: Optional.  A description of what\nthe DHCP snippet does.\n:type description: String\n\n :param enabled: Optional.  Whether or not the DHCP\nsnippet is currently enabled.\n:type enabled: Boolean\n\n :param node: Optional.  The node the DHCP snippet is to\nbe used for. Can not be set if subnet is set.\n:type node: String\n\n :param subnet: Optional.  The subnet the DHCP snippet\nis to be used for. Can not be set if node is set.\n:type subnet: String\n\n :param global_snippet: Optional.  Set the DHCP snippet\nto be a global option. This removes any node or subnet links.\n:type global_snippet: Boolean\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a DHCP snippet\n\nDelete a DHCP snippet with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual DHCP snippet.\n\nThe DHCP snippet is identified by its id.",
      "name": "DHCPSnippetHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/dhcp-snippets/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dhcp-snippets/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List DHCP snippets\n\nList all available DHCP snippets.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a DHCP snippet\n\nCreates a DHCP snippet.\n\n:param name: Required.  The name of the DHCP snippet.\n:type name: String\n\n :param value: Required.  The snippet of config inserted\ninto dhcpd.conf.\n:type value: String\n\n :param description: Optional.  A description of what\nthe snippet does.\n:type description: String\n\n :param enabled: Optional.  Whether or not the snippet\nis currently enabled.\n:type enabled: Boolean\n\n :param node: Optional.  The node this snippet applies\nto. Cannot be used with subnet or global_snippet.\n:type node: String\n\n :param subnet: Optional.  The subnet this snippet\napplies to. Cannot be used with node or global_snippet.\n:type subnet: String\n\n :param iprange: Optional.  The iprange within a subnet\nthis snippet applies to. Must also provide a subnet value.\n:type iprange: String\n\n :param global_snippet: Optional.  Whether or not this\nsnippet is to be applied globally. Cannot be used with node or subnet.\n:type global_snippet: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all DHCP snippets in MAAS.",
      "name": "DHCPSnippetsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/dhcp-snippets/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dhcp-snippets/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a package repository\n\nRead a package repository with the given id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a package repository\n\nUpdate the package repository with the given id.\n\n:param name: Optional.  The name of the package\nrepository.\n:type name: String\n\n :param url: Optional.  The url of the package\nrepository.\n:type url: String\n\n :param distributions: Optional.  Which package\ndistributions to include.\n:type distributions: String\n\n :param disabled_pockets: Optional.  The list of pockets\nto disable.\n:type disabled_pockets: String\n\n :param disabled_components: Optional.  The list of\ncomponents to disable. Only applicable to the default Ubuntu\nrepositories.\n:type disabled_components: String\n\n :param disable_sources: Optional.  Disable deb-src\nlines.\n:type disable_sources: String\n\n :param components: Optional.  The list of components to\nenable. Only applicable to custom repositories.\n:type components: String\n\n :param arches: Optional.  The list of supported\narchitectures.\n:type arches: String\n\n :param key: Optional.  The authentication key to use\nwith the repository.\n:type key: String\n\n :param enabled: Optional.  Whether or not the\nrepository is enabled.\n:type enabled: Boolean\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a package repository\n\nDelete a package repository with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual package repository.\n\nA package repository is identified by its id.",
      "name": "PackageRepositoryHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/package-repositories/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/package-repositories/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List package repositories\n\nList all available package repositories.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a package repository\n\nCreate a new package repository.\n\n:param name: Required.  The name of the package\nrepository.\n:type name: String\n\n :param url: Required.  The url of the package\nrepository.\n:type url: String\n\n :param distributions: Optional.  Which package\ndistributions to include.\n:type distributions: String\n\n :param disabled_pockets: Optional.  The list of pockets\nto disable.\n:type disabled_pockets: String\n\n :param disabled_components: Optional.  The list of\ncomponents to disable. Only applicable to the default Ubuntu\nrepositories.\n:type disabled_components: String\n\n :param components: Optional.  The list of components to\nenable. Only applicable to custom repositories.\n:type components: String\n\n :param arches: Optional.  The list of supported\narchitectures.\n:type arches: String\n\n :param key: Optional.  The authentication key to use\nwith the repository.\n:type key: String\n\n :param enabled: Optional.  Whether or not the\nrepository is enabled.\n:type enabled: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all Package Repositories in MAAS.",
      "name": "PackageRepositoriesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/package-repositories/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/package-repositories/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a DNS resource record description Read a DNS resource record with the given id.\n\n\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a DNS resource record\n\nUpdate a DNS resource record with the given id.\n\n:param rrtype: Optional.  Resource type.\n:type rrtype: String\n\n :param rrdata: Optional.  Resource data (everything to\nthe right of type.)\n:type rrdata: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a DNS resource record\n\nDelete a DNS resource record with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage dnsresourcerecord.",
      "name": "DNSResourceRecordHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/dnsresourcerecords/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dnsresourcerecords/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List all DNS resource records\n\nList all DNS resource records.\n\n:param domain: Optional.  Restricts the listing to\nentries for the domain.\n:type domain: String\n\n :param name: Optional.  Restricts the listing to\nentries of the given name.\n:type name: String\n\n :param rrtype: Optional.  Restricts the listing to\nentries which have records of the given rrtype.\n:type rrtype: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a DNS resource record\n\nCreate a new DNS resource record.\n\n:param fqdn: Optional.  Hostname (with domain) for the\ndnsresource.  Either ``fqdn`` or ``name`` and  ``domain`` must be\nspecified.  ``fqdn`` is ignored if either name or domain is given (e.g.\nwww.your-maas.maas).\n:type fqdn: String\n\n :param name: Optional.  The name (or hostname without a\ndomain) of the DNS resource record (e.g. www.your-maas)\n:type name: String\n\n :param domain: Optional.  The domain (name or id) where\nto create the DNS resource record (Domain (e.g. 'maas')\n:type domain: String\n\n :param rrtype: Optional.  The resource record type (e.g\n``cname``, ``mx``, ``ns``, ``srv``, ``sshfp``, ``txt``).\n:type rrtype: String\n\n :param rrdata: Optional.  The resource record data\n(e.g. 'your-maas', '10 mail.your-maas.maas')\n:type rrdata: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage DNS resource records (e.g. CNAME, MX, NS, SRV, TXT)",
      "name": "DNSResourceRecordsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/dnsresourcerecords/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dnsresourcerecords/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a DNS resource\n\nRead a DNS resource by id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a DNS resource\n\nUpdate a DNS resource with the given id.\n\n:param fqdn: Optional.  Hostname (with domain) for the\ndnsresource.  Either ``fqdn`` or ``name`` and ``domain`` must be\nspecified.  ``fqdn`` is ignored if either ``name`` or ``domain`` is\ngiven.\n:type fqdn: String\n\n :param name: Optional.  Hostname (without domain).\n:type name: String\n\n :param domain: Optional.  Domain (name or id).\n:type domain: String\n\n :param address_ttl: Optional.  Default TTL for entries\nin this zone.\n:type address_ttl: String\n\n :param ip_addresses: Optional.  Address (ip or id) to\nassign to the dnsresource. This creates an A or AAAA record,\nfor each of the supplied ip_addresses, IPv4 or IPv6, respectively.\n:type ip_addresses: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a DNS resource\n\nDelete a DNS resource with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage dnsresource.",
      "name": "DNSResourceHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/dnsresources/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dnsresources/{id}/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "set_config",
          "doc": "Set a configuration value\n\nSet a configuration value.\n\n:param value: Optional.  The value of the configuration\nitem to be set.\n:type value: String\n\n :param name: Required.  The name of the\nconfiguration item to be set.\n\nAvailable configuration items:\n\n:active_discovery_interval: Active subnet mapping interval.         When enabled, each rack will scan subnets enabled for active mapping. This helps ensure discovery information is accurate and complete.\n:boot_images_auto_import: Automatically import/refresh the boot images every 60 minutes.\n:boot_images_no_proxy: Set no_proxy with the image repository address when MAAS is behind (or set with) a proxy..         By default, when MAAS is behind (and set with) a proxy, it is used to download images from the image repository. In some situations (e.g. when using a local image repository) it doesn't make sense for MAAS to use the proxy to download images because it can access them directly. Setting this option allows MAAS to access the (local) image repository directly by setting the no_proxy variable for the MAAS env with the address of the image repository.\n:commissioning_distro_series: Default Ubuntu release used for commissioning.\n:completed_intro: Marks if the initial intro has been completed.\n:curtin_verbose: Run the fast-path installer with higher verbosity. This provides more detail in the installation logs.\n:default_distro_series: Default OS release used for deployment.\n:default_dns_ttl: Default Time-To-Live for the DNS.         If no TTL value is specified at a more specific point this is how long DNS responses are valid, in seconds.\n:default_min_hwe_kernel: Default Minimum Kernel Version.         The default minimum kernel version used on all new and commissioned nodes.\n:default_osystem: Default operating system used for deployment.\n:default_storage_layout: Default storage layout.         Storage layout that is applied to a node when it is commissioned.        Available choices are: 'bcache' (Bcache layout), 'blank' (No storage (blank) layout), 'flat' (Flat layout), 'lvm' (LVM layout), 'vmfs6' (VMFS6 layout).\n:disk_erase_with_quick_erase: Use quick erase by default when erasing disks..         This is not a secure erase; it wipes only the beginning and end of each disk.\n:disk_erase_with_secure_erase: Use secure erase by default when erasing disks.         Will only be used on devices that support secure erase.  Other devices will fall back to full wipe or quick erase depending on the selected options.\n:dns_trusted_acl: List of external networks (not previously known), that will be allowed to use MAAS for DNS resolution..         MAAS keeps a list of networks that are allowed to use MAAS for DNS resolution. This option allows to add extra networks (not previously known) to the trusted ACL where this list of networks is kept. It also supports specifying IPs or ACL names.\n:dnssec_validation: Enable DNSSEC validation of upstream zones.         Only used when MAAS is running its own DNS server. This value is used as the value of 'dnssec_validation' in the DNS server config.\n:enable_analytics: Enable Google Analytics in MAAS UI to shape improvements in user experience.\n:enable_disk_erasing_on_release: Erase nodes' disks prior to releasing.         Forces users to always erase disks when releasing.\n:enable_http_proxy: Enable the use of an APT or YUM and HTTP/HTTPS proxy.         Provision nodes to use the built-in HTTP proxy (or user specified proxy) for APT or YUM. MAAS also uses the proxy for downloading boot images.\n:enable_third_party_drivers: Enable the installation of proprietary drivers (i.e. HPVSA).\n:enlist_commissioning: Whether to run commissioning during enlistment..         Enables running all built-in commissioning scripts during enlistment.\n:force_v1_network_yaml: Always use the legacy v1 YAML (rather than Netplan format, also known as v2 YAML) when composing the network configuration for a machine..\n:http_proxy: Proxy for APT or YUM and HTTP/HTTPS.         This will be passed onto provisioned nodes to use as a proxy for APT or YUM traffic. MAAS also uses the proxy for downloading boot images. If no URL is provided, the built-in MAAS proxy will be used.\n:kernel_opts: Boot parameters to pass to the kernel by default.\n:maas_auto_ipmi_k_g_bmc_key: The IPMI K_g key to set during BMC configuration..         This IPMI K_g BMC key is used to encrypt all IPMI traffic to a BMC. Once set, all clients will REQUIRE this key upon being commissioned. Any current machines that were previously commissioned will not require this key until they are recommissioned.\n:maas_auto_ipmi_user: MAAS IPMI user..         The name of the IPMI user that MAAS automatically creates during enlistment/commissioning.\n:maas_auto_ipmi_user_privilege_level: MAAS IPMI privilege level.         The default IPMI privilege level to use when creating the MAAS user and talking IPMI BMCs        Available choices are: 'USER' (User), 'OPERATOR' (Operator), 'ADMIN' (Administrator).\n:maas_internal_domain: Domain name used by MAAS for internal mapping of MAAS provided services..         This domain should not collide with an upstream domain provided by the set upstream DNS.\n:maas_name: MAAS name.\n:maas_proxy_port: Port to bind the MAAS built-in proxy (default: 8000).         Defines the port used to bind the built-in proxy. The default port is 8000.\n:maas_syslog_port: Port to bind the MAAS built-in syslog (default: 5247).         Defines the port used to bind the built-in syslog. The default port is 5247.\n:max_node_commissioning_results: The maximum number of commissioning results runs which are stored.\n:max_node_installation_results: The maximum number of installation result runs which are stored.\n:max_node_testing_results: The maximum number of testing results runs which are stored.\n:network_discovery: .         When enabled, MAAS will use passive techniques (such as listening to ARP requests and mDNS advertisements) to observe networks attached to rack controllers. Active subnet mapping will also be available to be enabled on the configured subnets.\n:node_timeout: Time, in minutes, until the node times out during commissioning, testing, deploying, or entering rescue mode..         Commissioning, testing, deploying, and entering rescue mode all set a timeout when beginning. If MAAS does not hear from the node within the specified number of minutes the node is powered off and set into a failed status.\n:ntp_external_only: Use external NTP servers only.         Configure all region controller hosts, rack controller hosts, and subsequently deployed machines to refer directly to the configured external NTP servers. Otherwise only region controller hosts will be configured to use those external NTP servers, rack contoller hosts will in turn refer to the regions' NTP servers, and deployed machines will refer to the racks' NTP servers.\n:ntp_servers: Addresses of NTP servers.         NTP servers, specified as IP addresses or hostnames delimited by commas and/or spaces, to be used as time references for MAAS itself, the machines MAAS deploys, and devices that make use of MAAS's DHCP services.\n:prefer_v4_proxy: Sets IPv4 DNS resolution before IPv6.         If prefer_v4_proxy is set, the proxy will be set to prefer IPv4 DNS resolution before it attempts to perform IPv6 DNS resolution.\n:prometheus_enabled: Enable sending stats to a prometheus gateway..         Allows MAAS to send statistics to Prometheus. This requires the 'prometheus_push_gateway' to be set.\n:prometheus_push_gateway: Address or hostname of the Prometheus push gateway..         Defines the address or hostname of the Prometheus push gateway where MAAS will send data to.\n:prometheus_push_interval: Interval of how often to send data to Prometheus (default: to 60 minutes)..         The internal of how often MAAS will send stats to Prometheus in minutes.\n:release_notifications: Enable or disable notifications for new MAAS releases..\n:remote_syslog: Remote syslog server to forward machine logs.         A remote syslog server that MAAS will set on enlisting, commissioning, testing, and deploying machines to send all log messages. Clearing this value will restore the default behaviour of forwarding syslog to MAAS.\n:subnet_ip_exhaustion_threshold_count: If the number of free IP addresses on a subnet becomes less than or equal to this threshold, an IP exhaustion warning will appear for that subnet.\n:upstream_dns: Upstream DNS used to resolve domains not managed by this MAAS (space-separated IP addresses).         Only used when MAAS is running its own DNS server. This value is used as the value of 'forwarders' in the DNS server config.\n:use_peer_proxy: Use the built-in proxy with an external proxy as a peer.         If enable_http_proxy is set, the built-in proxy will be configured to use http_proxy as a peer proxy. The deployed machines will be configured to use the built-in proxy.\n:use_rack_proxy: Use DNS and HTTP metadata proxy on the rack controllers when a machine is booted..         All DNS and HTTP metadata traffic will flow through the rack controller that a machine is booting from. This isolated region controllers from machines.\n:vcenter_datacenter: VMware vCenter datacenter.         VMware vCenter datacenter which is passed to a deployed VMware ESXi host.\n:vcenter_password: VMware vCenter password.         VMware vCenter server password which is passed to a deployed VMware ESXi host.\n:vcenter_server: VMware vCenter server FQDN or IP address.         VMware vCenter server FQDN or IP address which is passed to a deployed VMware ESXi host.\n:vcenter_username: VMware vCenter username.         VMware vCenter server username which is passed to a deployed VMware ESXi host.\n:windows_kms_host: Windows KMS activation host.         FQDN or IP address of the host that provides the KMS Windows activation service. (Only needed for Windows deployments using KMS activation.)\n:type name: String\n\n ",
          "op": "set_config",
          "restful": false
        },
        {
          "method": "GET",
          "name": "get_config",
          "doc": "Get a configuration value\n\nGet a configuration value.\n\n:param name: Required.  The name of the\nconfiguration item to be retrieved.\n\nAvailable configuration items:\n\n:active_discovery_interval: Active subnet mapping interval.         When enabled, each rack will scan subnets enabled for active mapping. This helps ensure discovery information is accurate and complete.\n:boot_images_auto_import: Automatically import/refresh the boot images every 60 minutes.\n:boot_images_no_proxy: Set no_proxy with the image repository address when MAAS is behind (or set with) a proxy..         By default, when MAAS is behind (and set with) a proxy, it is used to download images from the image repository. In some situations (e.g. when using a local image repository) it doesn't make sense for MAAS to use the proxy to download images because it can access them directly. Setting this option allows MAAS to access the (local) image repository directly by setting the no_proxy variable for the MAAS env with the address of the image repository.\n:commissioning_distro_series: Default Ubuntu release used for commissioning.\n:completed_intro: Marks if the initial intro has been completed.\n:curtin_verbose: Run the fast-path installer with higher verbosity. This provides more detail in the installation logs.\n:default_distro_series: Default OS release used for deployment.\n:default_dns_ttl: Default Time-To-Live for the DNS.         If no TTL value is specified at a more specific point this is how long DNS responses are valid, in seconds.\n:default_min_hwe_kernel: Default Minimum Kernel Version.         The default minimum kernel version used on all new and commissioned nodes.\n:default_osystem: Default operating system used for deployment.\n:default_storage_layout: Default storage layout.         Storage layout that is applied to a node when it is commissioned.        Available choices are: 'bcache' (Bcache layout), 'blank' (No storage (blank) layout), 'flat' (Flat layout), 'lvm' (LVM layout), 'vmfs6' (VMFS6 layout).\n:disk_erase_with_quick_erase: Use quick erase by default when erasing disks..         This is not a secure erase; it wipes only the beginning and end of each disk.\n:disk_erase_with_secure_erase: Use secure erase by default when erasing disks.         Will only be used on devices that support secure erase.  Other devices will fall back to full wipe or quick erase depending on the selected options.\n:dns_trusted_acl: List of external networks (not previously known), that will be allowed to use MAAS for DNS resolution..         MAAS keeps a list of networks that are allowed to use MAAS for DNS resolution. This option allows to add extra networks (not previously known) to the trusted ACL where this list of networks is kept. It also supports specifying IPs or ACL names.\n:dnssec_validation: Enable DNSSEC validation of upstream zones.         Only used when MAAS is running its own DNS server. This value is used as the value of 'dnssec_validation' in the DNS server config.\n:enable_analytics: Enable Google Analytics in MAAS UI to shape improvements in user experience.\n:enable_disk_erasing_on_release: Erase nodes' disks prior to releasing.         Forces users to always erase disks when releasing.\n:enable_http_proxy: Enable the use of an APT or YUM and HTTP/HTTPS proxy.         Provision nodes to use the built-in HTTP proxy (or user specified proxy) for APT or YUM. MAAS also uses the proxy for downloading boot images.\n:enable_third_party_drivers: Enable the installation of proprietary drivers (i.e. HPVSA).\n:enlist_commissioning: Whether to run commissioning during enlistment..         Enables running all built-in commissioning scripts during enlistment.\n:force_v1_network_yaml: Always use the legacy v1 YAML (rather than Netplan format, also known as v2 YAML) when composing the network configuration for a machine..\n:http_proxy: Proxy for APT or YUM and HTTP/HTTPS.         This will be passed onto provisioned nodes to use as a proxy for APT or YUM traffic. MAAS also uses the proxy for downloading boot images. If no URL is provided, the built-in MAAS proxy will be used.\n:kernel_opts: Boot parameters to pass to the kernel by default.\n:maas_auto_ipmi_k_g_bmc_key: The IPMI K_g key to set during BMC configuration..         This IPMI K_g BMC key is used to encrypt all IPMI traffic to a BMC. Once set, all clients will REQUIRE this key upon being commissioned. Any current machines that were previously commissioned will not require this key until they are recommissioned.\n:maas_auto_ipmi_user: MAAS IPMI user..         The name of the IPMI user that MAAS automatically creates during enlistment/commissioning.\n:maas_auto_ipmi_user_privilege_level: MAAS IPMI privilege level.         The default IPMI privilege level to use when creating the MAAS user and talking IPMI BMCs        Available choices are: 'USER' (User), 'OPERATOR' (Operator), 'ADMIN' (Administrator).\n:maas_internal_domain: Domain name used by MAAS for internal mapping of MAAS provided services..         This domain should not collide with an upstream domain provided by the set upstream DNS.\n:maas_name: MAAS name.\n:maas_proxy_port: Port to bind the MAAS built-in proxy (default: 8000).         Defines the port used to bind the built-in proxy. The default port is 8000.\n:maas_syslog_port: Port to bind the MAAS built-in syslog (default: 5247).         Defines the port used to bind the built-in syslog. The default port is 5247.\n:max_node_commissioning_results: The maximum number of commissioning results runs which are stored.\n:max_node_installation_results: The maximum number of installation result runs which are stored.\n:max_node_testing_results: The maximum number of testing results runs which are stored.\n:network_discovery: .         When enabled, MAAS will use passive techniques (such as listening to ARP requests and mDNS advertisements) to observe networks attached to rack controllers. Active subnet mapping will also be available to be enabled on the configured subnets.\n:node_timeout: Time, in minutes, until the node times out during commissioning, testing, deploying, or entering rescue mode..         Commissioning, testing, deploying, and entering rescue mode all set a timeout when beginning. If MAAS does not hear from the node within the specified number of minutes the node is powered off and set into a failed status.\n:ntp_external_only: Use external NTP servers only.         Configure all region controller hosts, rack controller hosts, and subsequently deployed machines to refer directly to the configured external NTP servers. Otherwise only region controller hosts will be configured to use those external NTP servers, rack contoller hosts will in turn refer to the regions' NTP servers, and deployed machines will refer to the racks' NTP servers.\n:ntp_servers: Addresses of NTP servers.         NTP servers, specified as IP addresses or hostnames delimited by commas and/or spaces, to be used as time references for MAAS itself, the machines MAAS deploys, and devices that make use of MAAS's DHCP services.\n:prefer_v4_proxy: Sets IPv4 DNS resolution before IPv6.         If prefer_v4_proxy is set, the proxy will be set to prefer IPv4 DNS resolution before it attempts to perform IPv6 DNS resolution.\n:prometheus_enabled: Enable sending stats to a prometheus gateway..         Allows MAAS to send statistics to Prometheus. This requires the 'prometheus_push_gateway' to be set.\n:prometheus_push_gateway: Address or hostname of the Prometheus push gateway..         Defines the address or hostname of the Prometheus push gateway where MAAS will send data to.\n:prometheus_push_interval: Interval of how often to send data to Prometheus (default: to 60 minutes)..         The internal of how often MAAS will send stats to Prometheus in minutes.\n:release_notifications: Enable or disable notifications for new MAAS releases..\n:remote_syslog: Remote syslog server to forward machine logs.         A remote syslog server that MAAS will set on enlisting, commissioning, testing, and deploying machines to send all log messages. Clearing this value will restore the default behaviour of forwarding syslog to MAAS.\n:subnet_ip_exhaustion_threshold_count: If the number of free IP addresses on a subnet becomes less than or equal to this threshold, an IP exhaustion warning will appear for that subnet.\n:upstream_dns: Upstream DNS used to resolve domains not managed by this MAAS (space-separated IP addresses).         Only used when MAAS is running its own DNS server. This value is used as the value of 'forwarders' in the DNS server config.\n:use_peer_proxy: Use the built-in proxy with an external proxy as a peer.         If enable_http_proxy is set, the built-in proxy will be configured to use http_proxy as a peer proxy. The deployed machines will be configured to use the built-in proxy.\n:use_rack_proxy: Use DNS and HTTP metadata proxy on the rack controllers when a machine is booted..         All DNS and HTTP metadata traffic will flow through the rack controller that a machine is booting from. This isolated region controllers from machines.\n:vcenter_datacenter: VMware vCenter datacenter.         VMware vCenter datacenter which is passed to a deployed VMware ESXi host.\n:vcenter_password: VMware vCenter password.         VMware vCenter server password which is passed to a deployed VMware ESXi host.\n:vcenter_server: VMware vCenter server FQDN or IP address.         VMware vCenter server FQDN or IP address which is passed to a deployed VMware ESXi host.\n:vcenter_username: VMware vCenter username.         VMware vCenter server username which is passed to a deployed VMware ESXi host.\n:windows_kms_host: Windows KMS activation host.         FQDN or IP address of the host that provides the KMS Windows activation service. (Only needed for Windows deployments using KMS activation.)\n:type name: String\n\n ",
          "op": "get_config",
          "restful": false
        }
      ],
      "doc": "Manage the MAAS server.",
      "name": "MaasHandler",
      "params": [],
      "path": "/MAAS/api/2.0/maas/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/maas/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List resources\n\nList all resources for the specified criteria.\n\n:param domain: Optional.  Restricts the listing to\nentries for the domain.\n:type domain: String\n\n :param name: Optional.  Restricts the listing to\nentries of the given name.\n:type name: String\n\n :param rrtype: Optional.  Restricts the listing to\nentries which have records of the given rrtype.\n:type rrtype: String\n\n :param all: Optional.  Include implicit DNS records\ncreated for nodes registered in MAAS if true.\n:type all: Boolean\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a DNS resource\n\nCreate a DNS resource.\n\n:param fqdn: Optional.  Hostname (with domain) for the\ndnsresource.  Either ``fqdn`` or ``name`` and ``domain`` must be\nspecified.  ``fqdn`` is ignored if either ``name`` or ``domain`` is\ngiven.\n:type fqdn: String\n\n :param name: Required.  Hostname (without domain).\n:type name: String\n\n :param domain: Required.  Domain (name or id).\n:type domain: String\n\n :param address_ttl: Optional.  Default TTL for entries\nin this zone.\n:type address_ttl: String\n\n :param ip_addresses: Optional.  Address (ip or id) to\nassign to the dnsresource. This creates an A or AAAA record,\nfor each of the supplied ip_addresses, IPv4 or IPv6, respectively.\n:type ip_addresses: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage dnsresources.",
      "name": "DNSResourcesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/dnsresources/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/dnsresources/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "set_default",
          "doc": "Set domain as default\n\nSet the specified domain to be the default.\n\n",
          "op": "set_default",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read domain\n\nRead a domain with the given id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a domain\n\nUpdate a domain with the given id.\n\n:param name: Required.  Name of the domain.\n:type name: String\n\n :param authoritative: Optional.  True if we are\nauthoritative for this domain.\n:type authoritative: String\n\n :param ttl: Optional.  The default TTL for this domain.\n:type ttl: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete domain\n\nDelete a domain with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage domain.",
      "name": "DomainHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/domains/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/domains/{id}/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "set_serial",
          "doc": "Set the SOA serial number\n\nSet the SOA serial number for all DNS zones.\n\n:param serial: Required.  Serial number to use next.\n:type serial: Int\n\n ",
          "op": "set_serial",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List all domains\n\nList all domains.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a domain\n\nCreate a domain.\n\n:param name: Required.  Name of the domain.\n:type name: String\n\n :param authoritative: Optional.  Class type of the\ndomain.\n:type authoritative: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage domains.",
      "name": "DomainsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/domains/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/domains/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List block devices\n\nList all block devices belonging to a machine.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a block device\n\nCreate a physical block device.\n\n:param name: Required.  Name of the block device.\n:type name: String\n\n :param model: Optional.  Model of the block device.\n:type model: String\n\n :param serial: Optional.  Serial number of the block\ndevice.\n:type serial: String\n\n :param id_path: Optional.  Only used if model and\nserial cannot be provided. This should be a path that is fixed and\ndoesn't change depending on the boot order or kernel version.\n:type id_path: String\n\n :param size: Required.  Size of the block device.\n:type size: String\n\n :param block_size: Required.  Block size of the block\ndevice.\n:type block_size: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage block devices on a machine.",
      "name": "BlockDevicesHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/blockdevices/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/blockdevices/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "add_tag",
          "doc": "Add a tag\n\nAdd a tag to block device on a given machine.\n\n:param tag: Required.  The tag being added.\n:type tag: String\n\n ",
          "op": "add_tag",
          "restful": false
        },
        {
          "method": "POST",
          "name": "remove_tag",
          "doc": "Remove a tag\n\nRemove a tag from block device on a given machine.\n\n:param tag: Optional.  The tag being removed.\n:type tag: String\n\n ",
          "op": "remove_tag",
          "restful": false
        },
        {
          "method": "POST",
          "name": "format",
          "doc": "Format block device\n\nFormat block device with filesystem.\n\n:param fstype: Required.  Type of filesystem.\n:type fstype: String\n\n :param uuid: Optional.  UUID of the filesystem.\n:type uuid: String\n\n ",
          "op": "format",
          "restful": false
        },
        {
          "method": "POST",
          "name": "unformat",
          "doc": "Unformat a block device\n\nUnformat a previously formatted block device.\n\n",
          "op": "unformat",
          "restful": false
        },
        {
          "method": "POST",
          "name": "mount",
          "doc": "Mount a filesystem\n\nMount the filesystem on block device.\n\n:param mount_point: Required.  Path on the filesystem\nto mount.\n:type mount_point: String\n\n :param mount_options: Optional.  Options to pass to\nmount(8).\n:type mount_options: String\n\n ",
          "op": "mount",
          "restful": false
        },
        {
          "method": "POST",
          "name": "unmount",
          "doc": "Unmount a filesystem\n\nUnmount the filesystem on block device.\n\n",
          "op": "unmount",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_boot_disk",
          "doc": "Set boot disk\n\nSet a block device as the boot disk for the machine.\n\n",
          "op": "set_boot_disk",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a block device\n\nRead a block device on a given machine.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a block device\n\nUpdate block device on a given machine.\n\nMachines must have a status of Ready to have access to all options.\nMachines with Deployed status can only have the name, model, serial,\nand/or id_path updated for a block device. This is intented to allow a\nbad block device to be replaced while the machine remains deployed.\n\n:param name: Optional.  (Physical devices) Name of the\nblock device.\n:type name: String\n\n :param model: Optional.  (Physical devices) Model of\nthe block device.\n:type model: String\n\n :param serial: Optional.  (Physical devices) Serial\nnumber of the block device.\n:type serial: String\n\n :param id_path: Optional.  (Physical devices) Only used\nif model and serial cannot be provided. This should be a path that is\nfixed and doesn't change depending on the boot order or kernel version.\n:type id_path: String\n\n :param size: Optional.  (Physical devices) Size of the\nblock device.\n:type size: String\n\n :param block_size: Optional.  (Physical devices) Block\nsize of the block device.\n:type block_size: String\n\n :param name: Optional.  (Virtual devices) Name of\nthe block device.\n:type name: String\n\n :param uuid: Optional.  (Virtual devices) UUID of\nthe block device.\n:type uuid: String\n\n :param size: Optional.  (Virtual devices) Size of\nthe block device. (Only allowed for logical volumes.)\n:type size: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a block device\n\nDelete block device on a given machine.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a block device on a machine.",
      "name": "BlockDeviceHandler",
      "params": [
        "system_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/blockdevices/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/blockdevices/{id}/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "format",
          "doc": "Format a partition\n\nFormat the partition on machine system_id and device\ndevice_id with the given partition id.\n\n:param fstype: Required.  Type of filesystem.\n:type fstype: String\n\n :param uuid: Optional.  The UUID for the filesystem.\n:type uuid: String\n\n :param label: Optional.  The label for the filesystem.\n:type label: String\n\n ",
          "op": "format",
          "restful": false
        },
        {
          "method": "POST",
          "name": "unformat",
          "doc": "Unformat a partition\n\nUnformat the partition on machine system_id and device\ndevice_id with the given partition id.\n\n",
          "op": "unformat",
          "restful": false
        },
        {
          "method": "POST",
          "name": "mount",
          "doc": "Mount a filesystem\n\nMount a filesystem on machine system_id, device device_id\nand partition id.\n\n:param mount_point: Required.  Path on the filesystem to\nmount.\n:type mount_point: String\n\n :param mount_options: Optional.  Options to pass to\nmount(8).\n:type mount_options: String\n\n ",
          "op": "mount",
          "restful": false
        },
        {
          "method": "POST",
          "name": "unmount",
          "doc": "Unmount a filesystem\n\nUnmount a filesystem on machine system_id, device\ndevice_id and partition id.\n\n",
          "op": "unmount",
          "restful": false
        },
        {
          "method": "POST",
          "name": "add_tag",
          "doc": "Add a tag\n\nAdd a tag to a partition on machine system_id, device\ndevice_id and partition id.\n\n:param tag: Required.  The tag being added.\n:type tag: String\n\n ",
          "op": "add_tag",
          "restful": false
        },
        {
          "method": "POST",
          "name": "remove_tag",
          "doc": "Remove a tag\n\nRemove a tag from a partition on machine system_id, device\ndevice_id and partition id.\n\n:param tag: Required.  The tag being removed.\n:type tag: String\n\n ",
          "op": "remove_tag",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a partition\n\nRead the partition from machine system_id and device\ndevice_id with the given partition id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a partition\n\nDelete the partition from machine system_id and device\ndevice_id with the given partition id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage partition on a block device.",
      "name": "PartitionHandler",
      "params": [
        "system_id",
        "device_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/blockdevices/{device_id}/partition/{id}",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/blockdevices/{device_id}/partition/{id}"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List partitions\n\nList partitions on a device with the given system_id and\ndevice_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a partition\n\nCreate a partition on a block device.\n\n:param size: Optional.  The size of the partition. If not\nspecified, all available space will be used.\n:type size: Int\n\n :param uuid: Optional.  UUID for the partition. Only\nused if the partition table type for the block device is GPT.\n:type uuid: String\n\n :param bootable: Optional.  If the partition should be\nmarked bootable.\n:type bootable: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage partitions on a block device.",
      "name": "PartitionsHandler",
      "params": [
        "system_id",
        "device_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/blockdevices/{device_id}/partitions/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/blockdevices/{device_id}/partitions/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "create_logical_volume",
          "doc": "Create a logical volume\n\nCreate a logical volume in the volume group with the given\nid on the machine with the given system_id.\n\n:param name: Required.  Name of the logical volume.\n:type name: String\n\n :param uuid: Optional.  (optional) UUID of the logical\nvolume.\n:type uuid: String\n\n :param size: Required.  Size of the logical volume. Must\nbe larger than or equal to 4,194,304 bytes. E.g. ``4194304``.\n:type size: String\n\n ",
          "op": "create_logical_volume",
          "restful": false
        },
        {
          "method": "POST",
          "name": "delete_logical_volume",
          "doc": "Delete a logical volume\n\nDelete a logical volume in the volume group with the given\nid on the machine with the given system_id.\n\nNote: this operation returns HTTP status code 204 even if the logical\nvolume id does not exist.\n\n:param id: Required.  The logical volume id.\n:type id: Int\n\n ",
          "op": "delete_logical_volume",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a volume group\n\nRead a volume group with the given id on the machine with\nthe given system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a volume group\n\nUpdate a volume group with the given id on the machine\nwith the given system_id.\n\n:param name: Optional.  Name of the volume group.\n:type name: String\n\n :param uuid: Optional.  UUID of the volume group.\n:type uuid: String\n\n :param add_block_devices: Optional.  Block devices to\nadd to the volume group.\n:type add_block_devices: String\n\n :param remove_block_devices: Optional.  Block devices\nto remove from the volume group.\n:type remove_block_devices: String\n\n :param add_partitions: Optional.  Partitions to add to\nthe volume group.\n:type add_partitions: String\n\n :param remove_partitions: Optional.  Partitions to\nremove from the volume group.\n:type remove_partitions: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete volume group\n\nDelete a volume group with the given id from the machine\nwith the given system_id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage volume group on a machine.",
      "name": "VolumeGroupHandler",
      "params": [
        "system_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/volume-group/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/volume-group/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List all volume groups\n\nList all volume groups belonging to a machine with the\ngiven system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a volume group\n\nCreate a volume group belonging to a machine with the\ngiven system_id.\n\nNote that at least one valid block device or partition is required.\n\n:param name: Required.  Name of the volume group.\n:type name: String\n\n :param uuid: Optional.  (optional) UUID of the volume\ngroup.\n:type uuid: String\n\n :param block_devices: Optional.  Block devices to add\nto the volume group.\n:type block_devices: String\n\n :param partitions: Optional.  Partitions to add to the\nvolume group.\n:type partitions: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage volume groups on a machine.",
      "name": "VolumeGroupsHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/volume-groups/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/volume-groups/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a RAID\n\nRead RAID with the given id on a machine with the\ngiven system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a RAID\n\nUpdate a RAID with the given id on a machine with the\ngiven system_id.\n\n:param name: Optional.  Name of the RAID.\n:type name: String\n\n :param uuid: Optional.  UUID of the RAID.\n:type uuid: String\n\n :param add_block_devices: Optional.  Block devices to\nadd to the RAID.\n:type add_block_devices: String\n\n :param remove_block_devices: Optional.  Block devices\nto remove from the RAID.\n:type remove_block_devices: String\n\n :param add_spare_devices: Optional.  Spare block\ndevices to add to the RAID.\n:type add_spare_devices: String\n\n :param remove_spare_devices: Optional.  Spare block\ndevices to remove from the RAID.\n:type remove_spare_devices: String\n\n :param add_partitions: Optional.  Partitions to add to\nthe RAID.\n:type add_partitions: String\n\n :param remove_partitions: Optional.  Partitions to\nremove from the RAID.\n:type remove_partitions: String\n\n :param add_spare_partitions: Optional.  Spare\npartitions to add to the RAID.\n:type add_spare_partitions: String\n\n :param remove_spare_partitions: Optional.  Spare\npartitions to remove from the RAID.\n:type remove_spare_partitions: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a RAID\n\nDelete a RAID with the given id on a machine with the\ngiven system_id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a specific RAID (Redundant Array of Independent Disks) on a\nmachine.",
      "name": "RaidHandler",
      "params": [
        "system_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/raid/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/raid/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a discovery\n\nRead a discovery with the given discovery_id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Read or delete an observed discovery.",
      "name": "DiscoveryHandler",
      "params": [
        "discovery_id"
      ],
      "path": "/MAAS/api/2.0/discovery/{discovery_id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/discovery/{discovery_id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List all RAIDs\n\nList all RAIDs belonging to a machine with the given\nsystem_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Set up a RAID\n\nSet up a RAID on a machine with the given system_id.\n\n:param name: Optional.  Name of the RAID.\n:type name: String\n\n :param uuid: Optional.  UUID of the RAID.\n:type uuid: String\n\n :param level: Required.  RAID level.\n:type level: Int\n\n :param block_devices: Optional.  Block devices to add\nto the RAID.\n:type block_devices: String\n\n :param spare_devices: Optional.  Spare block devices to\nadd to the RAID.\n:type spare_devices: String\n\n :param partitions: Optional.  Partitions to add to the\nRAID.\n:type partitions: String\n\n :param spare_partitions: Optional.  Spare partitions to\nadd to the RAID.\n:type spare_partitions: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage all RAIDs (Redundant Array of Independent Disks) on a machine.",
      "name": "RaidsHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/raids/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/raids/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "import",
          "doc": "Import boot resources\n\nImport the boot resources.\n\n",
          "op": "import",
          "restful": false
        },
        {
          "method": "POST",
          "name": "stop_import",
          "doc": "Stop import boot resources\n\nStop import the boot resources.\n\n",
          "op": "stop_import",
          "restful": false
        },
        {
          "method": "GET",
          "name": "is_importing",
          "doc": "Importing status\n\nGet the status of importing resources.\n\n",
          "op": "is_importing",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List boot resources\n\nList all boot resources\n\n:param type: Optional.  Type of boot resources to list.\nIf not provided, returns all types.\n:type type: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Upload a new boot resource\n\nUploads a new boot resource.\n\n:param name: Required.  Name of the boot resource.\n:type name: String\n\n :param architecture: Required.  Architecture the boot\nresource supports.\n:type architecture: String\n\n :param sha256: Required.  The ``sha256`` hash of the\nresource.\n:type sha256: String\n\n :param size: Required.  The size of the resource in\nbytes.\n:type size: String\n\n :param title: Optional.  Title for the boot resource.\n:type title: String\n\n :param filetype: Optional.  Filetype for uploaded\ncontent. (Default: ``tgz``. Supported: ``tgz``, ``tbz``, ``txz``,\n``ddtgz``, ``ddtbz``, ``ddtxz``, ``ddtar``, ``ddbz2``, ``ddgz``,\n``ddxz``, ``ddraw``)\n:type filetype: String\n\n :param content: Optional.  Image content. Note: this is\nnot a normal parameter, but an ``application/octet-stream`` file\nupload.\n:type content: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the boot resources.",
      "name": "BootResourcesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/boot-resources/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-resources/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a bcache device\n\nRead bcache device on a machine.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a bcache\n\nUpdate bcache on a machine.\n\nSpecifying both a device and a partition for a given role (cache or\nbacking) is not allowed.\n\n:param name: Optional.  Name of the Bcache.\n:type name: String\n\n :param uuid: Optional.  UUID of the Bcache.\n:type uuid: String\n\n :param cache_set: Optional.  Cache set to replace\ncurrent one.\n:type cache_set: String\n\n :param backing_device: Optional.  Backing block device\nto replace current one.\n:type backing_device: String\n\n :param backing_partition: Optional.  Backing partition\nto replace current one.\n:type backing_partition: String\n\n :param cache_mode: Optional.  Cache mode:\n``WRITEBACK``, ``WRITETHROUGH``, ``WRITEAROUND``.\n:type cache_mode: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a bcache\n\nDelete bcache on a machine.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage bcache device on a machine.",
      "name": "BcacheHandler",
      "params": [
        "system_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/bcache/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/bcache/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List all bcache devices\n\nList all bcache devices belonging to a\nmachine.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Creates a bcache\n\nCreates a bcache.\n\nSpecifying both a device and a partition for a given role (cache or\nbacking) is not allowed.\n\n:param name: Optional.  Name of the Bcache.\n:type name: String\n\n :param uuid: Optional.  UUID of the Bcache.\n:type uuid: String\n\n :param cache_set: Optional.  Cache set.\n:type cache_set: String\n\n :param backing_device: Optional.  Backing block device.\n:type backing_device: String\n\n :param backing_partition: Optional.  Backing partition.\n:type backing_partition: String\n\n :param cache_mode: Optional.  Cache mode:\n``WRITEBACK``, ``WRITETHROUGH``, ``WRITEAROUND``.\n:type cache_mode: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage bcache devices on a machine.",
      "name": "BcachesHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/bcaches/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/bcaches/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "by_unknown_mac",
          "doc": "List all discovered devices with unknown MAC\n\nFilters the list of discovered devices by excluding any\ndiscoveries where an interface known to MAAS is configured with a\ndiscovered MAC address.\n\nDiscoveries are listed in the order they were last observed on the\nnetwork (most recent first).\n\n",
          "op": "by_unknown_mac",
          "restful": false
        },
        {
          "method": "GET",
          "name": "by_unknown_ip",
          "doc": "List all discovered devices with an unknown IP address\n\nLists all discovered devices with an unknown IP address.\n\nFilters the list of discovered devices by excluding any discoveries\nwhere a known MAAS node is configured with the IP address of a\ndiscovery, or has been observed using it after it was assigned by a\nMAAS-managed DHCP server.\n\nDiscoveries are listed in the order they were last observed on the\nnetwork (most recent first).\n\n",
          "op": "by_unknown_ip",
          "restful": false
        },
        {
          "method": "GET",
          "name": "by_unknown_ip_and_mac",
          "doc": "Lists all discovered devices completely unknown to MAAS\n\nLists all discovered devices completely unknown to MAAS.\n\nFilters the list of discovered devices by excluding any discoveries\nwhere a known MAAS node is configured with either the MAC address or\nthe IP address of a discovery.\n\nDiscoveries are listed in the order they were last observed on the\nnetwork (most recent first).\n\n",
          "op": "by_unknown_ip_and_mac",
          "restful": false
        },
        {
          "method": "POST",
          "name": "clear",
          "doc": "Delete all discovered neighbours\n\nDeletes all discovered neighbours and/or mDNS entries.\n\nNote: One of ``mdns``, ``neighbours``, or ``all`` parameters must be\nsupplied.\n\n:param mdns: Optional.  Delete all mDNS entries.\n:type mdns: Boolean\n\n :param neighbours: Optional.  Delete all neighbour\nentries.\n:type neighbours: Boolean\n\n :param all: Optional.  Delete all discovery data.\n:type all: Boolean\n\n ",
          "op": "clear",
          "restful": false
        },
        {
          "method": "POST",
          "name": "clear_by_mac_and_ip",
          "doc": "Delete discoveries that match a MAC and IP\n\nDeletes all discovered neighbours (and associated reverse\nDNS entries) associated with the given IP address and MAC address.\n\n:param ip: Required.  IP address\n:type ip: String\n\n :param mac: Required.  MAC address\n:type mac: String\n\n ",
          "op": "clear_by_mac_and_ip",
          "restful": false
        },
        {
          "method": "POST",
          "name": "scan",
          "doc": "Run discovery scan on rack networks\n\nImmediately run a neighbour discovery scan on all rack\nnetworks.\n\nThis command causes each connected rack controller to execute the\n'maas-rack scan-network' command, which will scan all CIDRs configured\non the rack controller using 'nmap' (if it is installed) or 'ping'.\n\nNetwork discovery must not be set to 'disabled' for this command to be\nuseful.\n\nScanning will be started in the background, and could take a long time\non rack controllers that do not have 'nmap' installed and are connected\nto large networks.\n\nIf the call is a success, this method will return a dictionary of\nresults with the following keys:\n\n``result``: A human-readable string summarizing the results.\n\n``scan_attempted_on``: A list of rack system_id values where a scan\nwas attempted. (That is, an RPC connection was successful and a\nsubsequent call was intended.)\n\n``failed_to_connect_to``: A list of rack system_id values where the\nRPC connection failed.\n\n``scan_started_on``: A list of rack system_id values where a scan was\nsuccessfully started.\n\n``scan_failed_on``: A list of rack system_id values where a scan was\nattempted, but failed because a scan was already in progress.\n\n``rpc_call_timed_out_on``: A list of rack system_id values where the\nRPC connection was made, but the call timed out before a ten second\ntimeout elapsed.\n\n:param cidr: Optional.  The subnet CIDR(s) to scan (can\nbe specified multiple times). If not specified, defaults to all\nnetworks.\n:type cidr: String\n\n :param force: Optional.  If True, will force the scan,\neven if all networks are specified. (This may not be the best idea,\ndepending on acceptable use agreements, and the politics of the\norganization that owns the network.) Note that this parameter is\nrequired if all networks are specified. Default: False.\n:type force: Boolean\n\n :param always_use_ping: Optional.  If True, will force\nthe scan to use 'ping' even if 'nmap' is installed. Default: False.\n:type always_use_ping: String\n\n :param slow: Optional.  If True, and 'nmap' is being\nused, will limit the scan to nine packets per second. If the scanner is\n'ping', this option has no effect. Default: False.\n:type slow: String\n\n :param threads: Optional.  The number of threads to use\nduring scanning. If 'nmap' is the scanner, the default is one thread\nper 'nmap' process. If 'ping' is the scanner, the default is four\nthreads per CPU.\n:type threads: String\n\n ",
          "op": "scan",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List all discovered devices\n\nLists all the devices MAAS has discovered. Discoveries are\nlisted in the order they were last observed on the network (most recent\nfirst).\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Query observed discoveries.",
      "name": "DiscoveriesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/discovery/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/discovery/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a bcache cache set\n\nRead bcache cache set on a machine.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a bcache set\n\nUpdate bcache cache set on a machine.\n\nNote: specifying both a cache_device and a cache_partition is not\nallowed.\n\n:param cache_device: Optional.  Cache block device to\nreplace current one.\n:type cache_device: String\n\n :param cache_partition: Optional.  Cache partition to\nreplace current one.\n:type cache_partition: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a bcache set\n\nDelete bcache cache set on a machine.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage bcache cache set on a machine.",
      "name": "BcacheCacheSetHandler",
      "params": [
        "system_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/bcache-cache-set/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/bcache-cache-set/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "query",
          "doc": "List node events\n\nList node events, optionally filtered by various criteria\nvia URL query parameters.\n\n:param hostname: Optional.  An optional hostname. Only\nevents relating to the node with the matching hostname will be\nreturned. This can be specified multiple times to get events relating\nto more than one node.\n:type hostname: String\n\n :param mac_address: Optional.  An optional list of MAC\naddresses.  Only nodes with matching MAC addresses will be returned.\n:type mac_address: String\n\n :param id: Optional.  An optional list of system ids.\nOnly nodes with matching system ids will be returned.\n:type id: String\n\n :param zone: Optional.  An optional name for a physical\nzone. Only nodes in the zone will be returned.\n:type zone: String\n\n :param agent_name: Optional.  An optional agent name.\nOnly nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param level: Optional.  Desired minimum log level of\nreturned events. Returns this level of events and greater. Choose from:\nAUDIT, CRITICAL, DEBUG, ERROR, INFO, WARNING.  The default is INFO.\n:type level: String\n\n :param limit: Optional.  Optional number of events to\nreturn. Default 100.  Maximum: 1000.\n:type limit: String\n\n :param before: Optional.  Optional event id.  Defines\nwhere to start returning older events.\n:type before: String\n\n :param after: Optional.  Optional event id.  Defines\nwhere to start returning newer events.\n:type after: String\n\n :param owner: Optional.  If specified, filters the list\nto show only events owned by the specified username.\n:type owner: String\n\n ",
          "op": "query",
          "restful": false
        }
      ],
      "doc": "Retrieve filtered node events.\n\nA specific Node's events is identified by specifying one or more\nids, hostnames, or mac addresses as a list.",
      "name": "EventsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/events/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/events/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List bcache sets\n\nList all bcache cache sets belonging to a machine.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Creates a bcache cache set\n\nCreates a bcache cache set.\n\nNote: specifying both a cache_device and a cache_partition is not\nallowed.\n\n:param cache_device: Optional.  Cache block device.\n:type cache_device: String\n\n :param cache_partition: Optional.   Cache partition.\n:type cache_partition: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage bcache cache sets on a machine.",
      "name": "BcacheCacheSetsHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/bcache-cache-sets/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/bcache-cache-sets/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "get",
          "doc": "Get a named file\n\nGet a named file from the file storage.\n\n:param filename: Required.  The name of the file.\n:type filename: String\n\n ",
          "op": "get",
          "restful": false
        },
        {
          "method": "GET",
          "name": "get_by_key",
          "doc": "Get a file by key\n\nGet a file from the file storage with the given key.\n\n:param key: Required.  The file's key.\n:type key: String\n\n ",
          "op": "get_by_key",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List files\n\nList the files from the file storage.\n\nThe returned files are ordered by file name and the content is\nexcluded.\n\n:param prefix: Optional.  Prefix used to filter\nreturned files.\n:type prefix: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Add a new file\n\nAdd a new file to the file storage.\n\n:param filename: Required.  The file name to use in\nstorage.\n:type filename: String\n\n :param file: Required.  File data. Content type must be\n``application/octet-stream``.\n:type file: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a file\n\nDelete a stored file.\n\n:param filename: Required.  The filename of the object\nto be deleted.\n:type filename: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all the files in this MAAS.",
      "name": "FilesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/files/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/files/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a VMFS datastore.\n\nRead a VMFS datastore with the given id on the machine\nwith the given system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a VMFS datastore.\n\nUpdate a VMFS datastore with the given id on the machine\nwith the given system_id.\n\n:param name: Optional.  Name of the VMFS datastore.\n:type name: String\n\n :param uuid: Optional.  UUID of the VMFS datastore.\n:type uuid: String\n\n :param add_block_devices: Optional.  Block devices to\nadd to the VMFS datastore.\n:type add_block_devices: String\n\n :param add_partitions: Optional.  Partitions to add to\nthe VMFS datastore.\n:type add_partitions: String\n\n :param remove_partitions: Optional.  Partitions to\nremove from the VMFS datastore.\n:type remove_partitions: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete the specified VMFS datastore.\n\nDelete a VMFS datastore with the given id from the machine\nwith the given system_id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage VMFS datastore on a machine.",
      "name": "VmfsDatastoreHandler",
      "params": [
        "system_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/vmfs-datastore/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/vmfs-datastore/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a stored file\n\nReads a stored file with the given file name.\n\nThe content of the file is base64-encoded.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a file\n\nDelete a file with the given file name.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a FileStorage object.\n\nThe file is identified by its filename and owner.",
      "name": "FileHandler",
      "params": [
        "filename"
      ],
      "path": "/MAAS/api/2.0/files/{filename}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/files/{filename}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List all VMFS datastores.\n\nList all VMFS datastores belonging to a machine with the\ngiven system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a VMFS datastore.\n\nCreate a VMFS datastore belonging to a machine with the\ngiven system_id.\n\nNote that at least one valid block device or partition is required.\n\n:param name: Required.  Name of the VMFS datastore.\n:type name: String\n\n :param uuid: Optional.  (optional) UUID of the VMFS\ngroup.\n:type uuid: String\n\n :param block_devices: Optional.  Block devices to add\nto the VMFS datastore.\n:type block_devices: String\n\n :param partitions: Optional.  Partitions to add to the\nVMFS datastore.\n:type partitions: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage VMFS datastores on a machine.",
      "name": "VmfsDatastoresHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/vmfs-datastores/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/vmfs-datastores/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "reserve",
          "doc": "Reserve an IP address\n\nReserve an IP address for use outside of MAAS.\n\nReturns an IP adddress that MAAS will not allow any of its known nodes\nto use; it is free for use by the requesting user until released by the\nuser.\n\nThe user must supply either a subnet or a specific IP address within a\nsubnet.\n\n:param subnet: Optional.  CIDR representation of the\nsubnet on which the IP reservation is required. E.g. 10.1.2.0/24\n:type subnet: String\n\n :param ip: Optional.  The IP address, which must be\nwithin a known subnet.\n:type ip: String\n\n :param ip_address: Optional.  (Deprecated.) Alias for\n'ip' parameter. Provided for backward compatibility.\n:type ip_address: String\n\n :param hostname: Optional.  The hostname to use for the\nspecified IP address.  If no domain component is given, the default\ndomain will be used.\n:type hostname: String\n\n :param mac: Optional.  The MAC address that should be\nlinked to this reservation.\n:type mac: String\n\n ",
          "op": "reserve",
          "restful": false
        },
        {
          "method": "POST",
          "name": "release",
          "doc": "Release an IP address\n\nRelease an IP address that was previously reserved by the\nuser.\n\n:param ip: Required.  The IP address to release.\n:type ip: String\n\n :param force: Optional.  If True, allows a MAAS\nadministrator to force an IP address to be released, even if it is not\na user-reserved IP address or does not belong to the requesting user.\nUse with caution.\n:type force: Boolean\n\n :param discovered: Optional.  If True, allows a MAAS\nadministrator to release a discovered address. Only valid if 'force' is\nspecified. If not specified, MAAS will attempt to release any type of\naddress except for discovered addresses.\n:type discovered: Boolean\n\n ",
          "op": "release",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List IP addresses\n\nList all IP addresses known to MAAS.\n\nBy default, gets a listing of all IP addresses allocated to the\nrequesting user.\n\n:param ip: Optional.  If specified, will only display\ninformation for the specified IP address.\n:type ip: String\n\n :param all: Optional.  (Admin users only) If True, all\nreserved IP addresses will be shown. (By default, only addresses of\ntype 'User reserved' that are assigned to the requesting user are\nshown.)\n:type all: Boolean\n\n :param owner: Optional.  (Admin users only) If\nspecified, filters the list to show only IP addresses owned by the\nspecified username.\n:type owner: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage IP addresses allocated by MAAS.",
      "name": "IPAddressesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/ipaddresses/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/ipaddresses/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "link_subnet",
          "doc": "Link interface to a subnet\n\nLink an interface with the given system_id and interface\nid to a subnet.\n\n:param mode: Required.  ``AUTO``,\n``DHCP``, ``STATIC`` or ``LINK_UP`` connection to subnet.\n\nMode definitions:\n\n- ``AUTO``: Assign this interface a static IP address from the provided\n  subnet. The subnet must be a managed subnet. The IP address will not\n  be assigned until the node goes to be deployed.\n\n- ``DHCP``: Bring this interface up with DHCP on the given subnet. Only\n  one subnet can be set to ``DHCP``. If the subnet is managed this\n  interface will pull from the dynamic IP range.\n\n- ``STATIC``: Bring this interface up with a static IP address on the\n  given subnet. Any number of static links can exist on an interface.\n\n- ``LINK_UP``: Bring this interface up only on the given subnet. No IP\n  address will be assigned to this interface. The interface cannot have\n  any current ``AUTO``, ``DHCP`` or ``STATIC`` links.\n:type mode: String\n\n :param subnet: Required.  Subnet id linked to interface.\n:type subnet: Int\n\n :param ip_address: Optional.  IP address for the\ninterface in subnet. Only used when mode is ``STATIC``. If not provided\nan IP address from subnet will be auto selected.\n:type ip_address: String\n\n :param force: Optional.  If True, allows ``LINK_UP``\nto be set on the interface even if other links already exist. Also\nallows the selection of any VLAN, even a VLAN MAAS does not believe the\ninterface to currently be on. Using this option will cause all other\nlinks on the interface to be deleted. (Defaults to False.)\n:type force: Boolean\n\n :param default_gateway: Optional.  True sets the\ngateway IP address for the subnet as the default gateway for the node\nthis interface belongs to. Option can only be used with the ``AUTO``\nand ``STATIC`` modes.\n:type default_gateway: String\n\n ",
          "op": "link_subnet",
          "restful": false
        },
        {
          "method": "POST",
          "name": "disconnect",
          "doc": "Disconnect an interface\n\nDisconnect an interface with the given system_id and\ninterface id.\n\nDeletes any linked subnets and IP addresses, and disconnects the\ninterface from any associated VLAN.\n\n",
          "op": "disconnect",
          "restful": false
        },
        {
          "method": "POST",
          "name": "unlink_subnet",
          "doc": "Unlink interface from subnet\n\nUnlink an interface with the given system_id and interface\nid from a subnet.\n\n:param id: Optional.  ID of the subnet link on the\ninterface to remove.\n:type id: Int\n\n ",
          "op": "unlink_subnet",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_default_gateway",
          "doc": "Set the default gateway on a machine\n\nSet the given interface id on the given system_id as the\ndefault gateway.\n\nIf this interface has more than one subnet with a gateway IP in the\nsame IP address family then specifying the ID of the link on\nthis interface is required.\n\n:param link_id: Optional.  ID of the link on this\ninterface to select the default gateway IP address from.\n:type link_id: Int\n\n ",
          "op": "set_default_gateway",
          "restful": false
        },
        {
          "method": "POST",
          "name": "add_tag",
          "doc": "Add a tag to an interface\n\nAdd a tag to an interface with the given system_id and\ninterface id.\n\n:param tag: Optional.  The tag to add.\n:type tag: String\n\n ",
          "op": "add_tag",
          "restful": false
        },
        {
          "method": "POST",
          "name": "remove_tag",
          "doc": "Remove a tag from an interface\n\nRemove a tag from an interface with the given system_id\nand interface id.\n\n:param tag: Optional.  The tag to remove.\n:type tag: String\n\n ",
          "op": "remove_tag",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read an interface\n\nRead an interface with the given system_id and interface\nid.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update an interface\n\nUpdate an interface with the given system_id and interface\nid.\n\nNote: machines must have a status of Ready or Broken to have access to\nall options. Machines with Deployed status can only have the name\nand/or mac_address updated for an interface. This is intented to allow\na bad interface to be replaced while the machine remains deployed.\n\n:param name: Optional.  (Physical interfaces) Name of\nthe interface.\n:type name: String\n\n :param mac_address: Optional.  (Physical interfaces)\nMAC address of the interface.\n:type mac_address: String\n\n :param tags: Optional.  (Physical interfaces) Tags for\nthe interface.\n:type tags: String\n\n :param vlan: Optional.  (Physical interfaces) Untagged\nVLAN id the interface is connected to.  If not set then the interface\nis considered disconnected.\n:type vlan: Int\n\n :param name: Optional.  (Bond interfaces) Name of the\ninterface.\n:type name: String\n\n :param mac_address: Optional.  (Bond interfaces) MAC\naddress of the interface.\n:type mac_address: String\n\n :param tags: Optional.  (Bond interfaces) Tags for the\ninterface.\n:type tags: String\n\n :param vlan: Optional.  (Bond interfaces) Untagged VLAN id\nthe interface is connected to. If not set then the interface is\nconsidered disconnected.\n:type vlan: Int\n\n :param parents: Optional.  (Bond interfaces) Parent\ninterface ids that make this bond.\n:type parents: Int\n\n :param tags: Optional.  (VLAN interfaces) Tags for the\ninterface.\n:type tags: String\n\n :param vlan: Optional.  (VLAN interfaces) Tagged VLAN id\nthe interface is connected to.\n:type vlan: Int\n\n :param parent: Optional.  (VLAN interfaces) Parent\ninterface ids for the VLAN interface.\n:type parent: Int\n\n :param name: Optional.  (Bridge interfaces) Name of the\ninterface.\n:type name: String\n\n :param mac_address: Optional.  (Bridge interfaces) MAC\naddress of the interface.\n:type mac_address: String\n\n :param tags: Optional.  (Bridge interfaces) Tags for\nthe interface.\n:type tags: String\n\n :param vlan: Optional.  (Bridge interfaces) VLAN id the\ninterface is connected to.\n:type vlan: Int\n\n :param parent: Optional.  (Bridge interfaces) Parent\ninterface ids for this bridge interface.\n:type parent: Int\n\n :param bridge_type: Optional.  (Bridge interfaces) Type\nof bridge to create. Possible values are: ``standard``, ``ovs``.\n:type bridge_type: String\n\n :param bridge_stp: Optional.  (Bridge interfaces) Turn\nspanning tree protocol on or off.  (Default: False).\n:type bridge_stp: Boolean\n\n :param bridge_fd: Optional.  (Bridge interfaces) Set\nbridge forward delay to time seconds.  (Default: 15).\n:type bridge_fd: Int\n\n :param bond_miimon: Optional.  (Bonds) The link monitoring\nfreqeuncy in milliseconds.  (Default: 100).\n:type bond_miimon: Int\n\n :param bond_downdelay: Optional.  (Bonds) Specifies the\ntime, in milliseconds, to wait before disabling a slave after a link\nfailure has been detected.\n:type bond_downdelay: Int\n\n :param bond_updelay: Optional.  (Bonds) Specifies the\ntime, in milliseconds, to wait before enabling a slave after a link\nrecovery has been detected.\n:type bond_updelay: Int\n\n :param bond_lacp_rate: Optional.  (Bonds) Option\nspecifying the rate in which we'll ask our link partner to transmit\nLACPDU packets in 802.3ad mode.  Available options are ``fast`` or\n``slow``.  (Default: ``slow``).\n:type bond_lacp_rate: String\n\n :param bond_xmit_hash_policy: Optional.  (Bonds) The\ntransmit hash policy to use for slave selection in balance-xor,\n802.3ad, and tlb modes.  Possible values are: ``layer2``, ``layer2+3``,\n``layer3+4``, ``encap2+3``, ``encap3+4``.\n:type bond_xmit_hash_policy: String\n\n :param bond_mode: Optional.  (Bonds)\nThe operating mode of the bond.  (Default: ``active-backup``).\n\nSupported bonding modes (bond-mode):\n\n- ``balance-rr``: Transmit packets in sequential order from the first\n  available slave through the last. This mode provides load balancing\n  and fault tolerance.\n\n- ``active-backup``: Only one slave in the bond is active. A different\n  slave becomes active if, and only if, the active slave fails. The\n  bond's MAC address is externally visible on only one port (network\n  adapter) to avoid confusing the switch.\n\n- ``balance-xor``: Transmit based on the selected transmit hash policy.\n  The default policy is a simple [(source MAC address XOR'd with\n  destination MAC address XOR packet type ID) modulo slave count].\n\n- ``broadcast``: Transmits everything on all slave interfaces. This\n  mode provides fault tolerance.\n\n- ``802.3ad``: IEEE 802.3ad Dynamic link aggregation. Creates\n  aggregation groups that share the same speed and duplex settings.\n  Utilizes all slaves in the active aggregator according to the 802.3ad\n  specification.\n\n- ``balance-tlb``: Adaptive transmit load balancing: channel bonding\n  that does not require any special switch support.\n\n- ``balance-alb``: Adaptive load balancing: includes balance-tlb plus\n  receive load balancing (rlb) for IPV4 traffic, and does not require\n  any special switch support. The receive load balancing is achieved by\n  ARP negotiation.\n:type bond_mode: String\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: String\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: String\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: String\n\n :param link_connected: Optional. \n(Physical interfaces) Whether or not the interface is physically\nconntected to an uplink.  (Default: True).\n:type link_connected: Boolean\n\n :param interface_speed: Optional.  (Physical interfaces)\nThe speed of the interface in Mbit/s. (Default: 0).\n:type interface_speed: Int\n\n :param link_speed: Optional.  (Physical interfaces)\nThe speed of the link in Mbit/s. (Default: 0).\n:type link_speed: Int\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete an interface\n\nDelete an interface with the given system_id and interface\nid.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a node's or device's interface.",
      "name": "InterfaceHandler",
      "params": [
        "system_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/interfaces/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/interfaces/{id}/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "connect_macs",
          "doc": "Connect the given MAC addresses to this network.\n\nThis endpoint is no longer available. Use the 'subnet' endpoint\ninstead.",
          "op": "connect_macs",
          "restful": false
        },
        {
          "method": "POST",
          "name": "disconnect_macs",
          "doc": "Disconnect the given MAC addresses from this network.\n\nThis endpoint is no longer available. Use the 'subnet' endpoint\ninstead.",
          "op": "disconnect_macs",
          "restful": false
        },
        {
          "method": "GET",
          "name": "list_connected_macs",
          "doc": "Returns the list of MAC addresses connected to this network.\n\nOnly MAC addresses for nodes visible to the requesting user are\nreturned.",
          "op": "list_connected_macs",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read network definition.",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update network definition.\n\nThis endpoint is no longer available. Use the 'subnet' endpoint\ninstead.\n\n:param name: A simple name for the network, to make it easier to\n    refer to.  Must consist only of letters, digits, dashes, and\n    underscores.\n:param ip: Base IP address for the network, e.g. `10.1.0.0`.  The host\n    bits will be zeroed.\n:param netmask: Subnet mask to indicate which parts of an IP address\n    are part of the network address.  For example, `255.255.255.0`.\n:param vlan_tag: Optional VLAN tag: a number between 1 and 0xffe (4094)\n    inclusive, or zero for an untagged network.\n:param description: Detailed description of the network for the benefit\n    of users and administrators.",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete network definition.\n\nThis endpoint is no longer available. Use the 'subnet' endpoint\ninstead.",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a network.\n\nThis endpoint is deprecated. Use the new 'subnet' endpoint instead.",
      "name": "NetworkHandler",
      "params": [
        "name"
      ],
      "path": "/MAAS/api/2.0/networks/{name}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/networks/{name}/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "create_physical",
          "doc": "Create a physical interface\n\nCreate a physical interface on a machine and device.\n\n:param name: Optional.  Name of the interface.\n:type name: String\n\n :param mac_address: Required.  MAC address of the\ninterface.\n:type mac_address: String\n\n :param tags: Optional.  Tags for the interface.\n:type tags: String\n\n :param vlan: Optional.  Untagged VLAN the interface is\nconnected to. If not provided then the interface is considered\ndisconnected.\n:type vlan: String\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: Int\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: Boolean\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: Boolean\n\n ",
          "op": "create_physical",
          "restful": false
        },
        {
          "method": "POST",
          "name": "create_bond",
          "doc": "Create a bond inteface\n\nCreate a bond interface on a machine.\n\n:param name: Required.  Name of the interface.\n:type name: String\n\n :param mac_address: Optional.  MAC address of the\ninterface.\n:type mac_address: String\n\n :param tags: Optional.  Tags for the interface.\n:type tags: String\n\n :param vlan: Optional.  VLAN the interface is connected\nto. If not provided then the interface is considered disconnected.\n:type vlan: String\n\n :param parents: Required.  Parent interface ids that make\nthis bond.\n:type parents: Int\n\n :param bond_mode: Optional.  The\noperating mode of the bond.  (Default: active-backup).\n\nSupported bonding modes:\n\n- ``balance-rr``: Transmit packets in sequential order from the first\n  available slave through the last. This mode provides load balancing\n  and fault tolerance.\n\n- ``active-backup``: Only one slave in the bond is active. A different\n  slave becomes active if, and only if, the active slave fails. The\n  bond's MAC address is externally visible on only one port (network\n  adapter) to avoid confusing the switch.\n\n- ``balance-xor``: Transmit based on the selected transmit hash policy.\n  The default policy is a simple [(source MAC address XOR'd with\n  destination MAC address XOR packet type ID) modulo slave count].\n\n- ``broadcast``: Transmits everything on all slave interfaces. This\n  mode provides fault tolerance.\n\n- ``802.3ad``: IEEE 802.3ad dynamic link aggregation. Creates\n  aggregation groups that share the same speed and duplex settings.\n  Uses all slaves in the active aggregator according to the 802.3ad\n  specification.\n\n- ``balance-tlb``: Adaptive transmit load balancing: channel bonding\n  that does not require any special switch support.\n\n- ``balance-alb``: Adaptive load balancing: includes balance-tlb plus\n  receive load balancing (rlb) for IPV4 traffic, and does not require\n  any special switch support. The receive load balancing is achieved by\n  ARP negotiation.\n:type bond_mode: String\n\n :param bond_miimon: Optional.  The link monitoring\nfreqeuncy in milliseconds.  (Default: 100).\n:type bond_miimon: Int\n\n :param bond_downdelay: Optional.  Specifies the time, in\nmilliseconds, to wait before disabling a slave after a link failure has\nbeen detected.\n:type bond_downdelay: Int\n\n :param bond_updelay: Optional.  Specifies the time, in\nmilliseconds, to wait before enabling a slave after a link recovery has\nbeen detected.\n:type bond_updelay: Int\n\n :param bond_lacp_rate: Optional.  Option specifying the\nrate at which to ask the link partner to transmit LACPDU packets in\n802.3ad mode. Available options are ``fast`` or ``slow``. (Default:\n``slow``).\n:type bond_lacp_rate: String\n\n :param bond_xmit_hash_policy: Optional.  The transmit\nhash policy to use for slave selection in balance-xor, 802.3ad, and tlb\nmodes. Possible values are: ``layer2``, ``layer2+3``, ``layer3+4``,\n``encap2+3``, ``encap3+4``. (Default: ``layer2``)\n:type bond_xmit_hash_policy: String\n\n :param bond_num_grat_arp: Optional.  The number of peer\nnotifications (IPv4 ARP or IPv6 Neighbour Advertisements) to be issued\nafter a failover. (Default: 1)\n:type bond_num_grat_arp: Int\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: Int\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: Boolean\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: Boolean\n\n ",
          "op": "create_bond",
          "restful": false
        },
        {
          "method": "POST",
          "name": "create_vlan",
          "doc": "Create a VLAN interface\n\nCreate a VLAN interface on a machine.\n\n:param tags: Optional.  Tags for the interface.\n:type tags: String\n\n :param vlan: Required.  Tagged VLAN the interface is\nconnected to.\n:type vlan: String\n\n :param parent: Required.  Parent interface id for this VLAN\ninterface.\n:type parent: Int\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: Int\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: Boolean\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: Boolean\n\n ",
          "op": "create_vlan",
          "restful": false
        },
        {
          "method": "POST",
          "name": "create_bridge",
          "doc": "Create a bridge interface\n\nCreate a bridge interface on a machine.\n\n:param name: Optional.  Name of the interface.\n:type name: String\n\n :param mac_address: Optional.  MAC address of the\ninterface.\n:type mac_address: String\n\n :param tags: Optional.  Tags for the interface.\n:type tags: String\n\n :param vlan: Optional.  VLAN the interface is connected\nto.\n:type vlan: String\n\n :param parent: Optional.  Parent interface id for this\nbridge interface.\n:type parent: Int\n\n :param bridge_type: Optional.  The type of bridge\nto create. Possible values are: ``standard``, ``ovs``.\n:type bridge_type: String\n\n :param bridge_stp: Optional.  Turn spanning tree\nprotocol on or off. (Default: False).\n:type bridge_stp: Boolean\n\n :param bridge_fd: Optional.  Set bridge forward delay\nto time seconds. (Default: 15).\n:type bridge_fd: Int\n\n :param mtu: Optional.  Maximum transmission unit.\n:type mtu: Int\n\n :param accept_ra: Optional.  Accept router\nadvertisements. (IPv6 only)\n:type accept_ra: Boolean\n\n :param autoconf: Optional.  Perform stateless\nautoconfiguration. (IPv6 only)\n:type autoconf: Boolean\n\n ",
          "op": "create_bridge",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List interfaces\n\nList all interfaces belonging to a machine, device, or\nrack controller.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage interfaces on a node.",
      "name": "InterfacesHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/interfaces/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/interfaces/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List networks.\n\n:param node: Optionally, nodes which must be attached to any returned\n    networks.  If more than one node is given, the result will be\n    restricted to networks that these nodes have in common.",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Define a network.\n\nThis endpoint is no longer available. Use the 'subnets' endpoint\ninstead.",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the networks.\n\nThis endpoint is deprecated. Use the new 'subnets' endpoint instead.",
      "name": "NetworksHandler",
      "params": [],
      "path": "/MAAS/api/2.0/networks/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/networks/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "details",
          "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
          "op": "details",
          "restful": false
        },
        {
          "method": "GET",
          "name": "power_parameters",
          "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
          "op": "power_parameters",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a node\n\nDeletes a node with a given system_id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual Node.\n\nThe Node is identified by its system_id.",
      "name": "NodeHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "nodes",
          "doc": "List nodes by tag\n\nGet a JSON list containing node objects that match\nthe given tag name.\n\n",
          "op": "nodes",
          "restful": false
        },
        {
          "method": "GET",
          "name": "machines",
          "doc": "List machines by tag\n\nGet a JSON list containing machine objects that match\nthe given tag name.\n\n",
          "op": "machines",
          "restful": false
        },
        {
          "method": "GET",
          "name": "devices",
          "doc": "List devices by tag\n\nGet a JSON list containing device objects that match\nthe given tag name.\n\n",
          "op": "devices",
          "restful": false
        },
        {
          "method": "GET",
          "name": "rack_controllers",
          "doc": "List rack controllers by tag\n\nGet a JSON list containing rack-controller objects\nthat match the given tag name.\n\n",
          "op": "rack_controllers",
          "restful": false
        },
        {
          "method": "GET",
          "name": "region_controllers",
          "doc": "List region controllers by tag\n\nGet a JSON list containing region-controller objects\nthat match the given tag name.\n\n",
          "op": "region_controllers",
          "restful": false
        },
        {
          "method": "POST",
          "name": "rebuild",
          "doc": "Trigger a tag-node mapping rebuild\n\nTells MAAS to rebuild the tag-to-node mappings.\nThis is a maintenance operation and should not be necessary under\nnormal circumstances. Adding nodes or updating a tag definition\nshould automatically trigger the mapping rebuild.\n\n",
          "op": "rebuild",
          "restful": false
        },
        {
          "method": "POST",
          "name": "update_nodes",
          "doc": "Add or remove nodes by tag\n\nAdd or remove nodes associated with the given tag.\nNote that you must supply either the ``add`` or ``remove``\nparameter.\n\n:param add: Optional.  The system_id to tag.\n:type add: String\n\n :param remove: Optional.  The system_id to untag.\n:type remove: String\n\n :param definition: Optional.  If given, the\ndefinition (XPATH expression) will be validated against the\ncurrent definition of the tag. If the value does not match, MAAS\nassumes the worker is out of date and will drop the update.\n:type definition: String\n\n :param rack_controller: Optional.  The system ID\nof the rack controller that processed the given tag initially.\nIf not given, the requester must be a MAAS admin. If given,\nthe requester must be the rack controller.\n:type rack_controller: String\n\n ",
          "op": "update_nodes",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a specific tag\n\nReturns a JSON object containing information about a\nspecific tag.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a tag\n\nUpdate elements of a given tag.\n\n:param name: Optional.  The new tag name. Because\nthe name will be used in urls, it should be short.\n:type name: String\n\n :param comment: Optional.  A description of what the\nthe tag will be used for in natural language.\n:type comment: String\n\n :param definition: Optional.  An XPATH query that is\nevaluated against the hardware_details stored for all nodes\n(i.e. the output of ``lshw -xml``).\n:type definition: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a tag\n\nDeletes a tag by name.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Tags are properties that can be associated with a Node and serve as\ncriteria for selecting and allocating nodes.\n\nA Tag is identified by its name.",
      "name": "TagHandler",
      "params": [
        "name"
      ],
      "path": "/MAAS/api/2.0/tags/{name}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/tags/{name}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_zone",
          "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
          "op": "set_zone",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all the nodes in the MAAS.",
      "name": "NodesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/nodes/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List tags\n\nOutputs a JSON object containing an array of all\ncurrently defined tag objects.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a new tag\n\nCreate a new tag.\n\n:param name: Required.  The new tag name. Because\nthe name will be used in urls, it should be short.\n:type name: String\n\n :param comment: Optional.  A description of what the\nthe tag will be used for in natural language.\n:type comment: String\n\n :param definition: Optional.  An XPATH query that is\nevaluated against the hardware_details stored for all nodes\n(i.e. the output of ``lshw -xml``).\n:type definition: String\n\n :param kernel_opts: Optional.  Nodes associated\nwith this tag will add this string to their kernel options\nwhen booting. The value overrides the global ``kernel_opts``\nsetting. If more than one tag is associated with a node, command\nline will be concatenated from all associated tags, in alphabetic\ntag name order.\n:type kernel_opts: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage all tags known to MAAS.",
      "name": "TagsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/tags/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/tags/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "details",
          "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
          "op": "details",
          "restful": false
        },
        {
          "method": "GET",
          "name": "power_parameters",
          "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
          "op": "power_parameters",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_workload_annotations",
          "doc": "Set key=value data\n\nSet key=value data for the current owner.\n\nPass any key=value form data to this method to add, modify, or remove.\nA key is removed when the value for that key is set to an empty string.\n\nThis operation will not remove any previous keys unless explicitly\npassed with an empty string. All workload annotations are removed when\nthe machine is no longer allocated to a user.\n\n:param key: Required.  ``key`` can be any string value.\n:type key: String\n\n ",
          "op": "set_workload_annotations",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_owner_data",
          "doc": "Deprecated, use set-workload-annotations.\n\nDeprecated, use set-workload-annotations instead.\n\n",
          "op": "set_owner_data",
          "restful": false
        },
        {
          "method": "GET",
          "name": "query_power_state",
          "doc": "Get the power state of a node\n\nGets the power state of a given node. MAAS sends a request\nto the node's power controller, which asks it about the node's state.\nThe reply to this could be delayed by up to 30 seconds while waiting\nfor the power controller to respond.  Use this method sparingly as it\nties up an appserver thread while waiting.\n\n:param system_id: Required.  The node to query.\n:type system_id: String\n\n ",
          "op": "query_power_state",
          "restful": false
        },
        {
          "method": "POST",
          "name": "power_on",
          "doc": "Turn on a node\n\nTurn on the given node with optional user-data and\ncomment.\n\n:param user_data: Optional.  Base64-encoded blob of\ndata to be made available to the nodes through the metadata service.\n:type user_data: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
          "op": "power_on",
          "restful": false
        },
        {
          "method": "POST",
          "name": "power_off",
          "doc": "Power off a node\n\nPowers off a given node.\n\n:param stop_mode: Optional.  Power-off mode. If 'soft',\nperform a soft power down if the node's power type supports it,\notherwise perform a hard power off. For all values other than 'soft',\nand by default, perform a hard power off. A soft power off generally\nasks the OS to shutdown the system gracefully before powering off,\nwhile a hard power off occurs immediately without any warning to the\nOS.\n:type stop_mode: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
          "op": "power_off",
          "restful": false
        },
        {
          "method": "POST",
          "name": "test",
          "doc": "Begin testing process for a node\n\nBegins the testing process for a given node.\n\nA node in the 'ready', 'allocated', 'deployed', 'broken', or any failed\nstate may run tests. If testing is started and successfully passes from\n'broken' or any failed state besides 'failed commissioning' the node\nwill be returned to a ready state. Otherwise the node will return to\nthe state it was when testing started.\n\n:param enable_ssh: Optional.  Whether to enable SSH for\nthe testing environment using the user's SSH key(s). 0 == false. 1 ==\ntrue.\n:type enable_ssh: Int\n\n :param testing_scripts: Optional.  A comma-separated\nlist of testing script names and tags to be run. By default all tests\ntagged 'commissioning' will be run.\n:type testing_scripts: String\n\n :param parameters: Optional.  Scripts selected to run\nmay define their own parameters. These parameters may be passed using\nthe parameter name. Optionally a parameter may have the script name\nprepended to have that parameter only apply to that specific script.\n:type parameters: String\n\n ",
          "op": "test",
          "restful": false
        },
        {
          "method": "POST",
          "name": "override_failed_testing",
          "doc": "Ignore failed tests\n\nIgnore failed tests and put node back into a usable state.\n\n:param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
          "op": "override_failed_testing",
          "restful": false
        },
        {
          "method": "POST",
          "name": "abort",
          "doc": "Abort a node operation\n\nAbort a node's current operation.\n\n:param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
          "op": "abort",
          "restful": false
        },
        {
          "method": "POST",
          "name": "deploy",
          "doc": "Deploy a machine\n\nDeploys an operating system to a machine with the given\nsystem_id.\n\n:param user_data: Optional.  If present, this blob of\nbase64-encoded user-data to be made available to the machines through\nthe metadata service.\n:type user_data: String\n\n :param osystem: Optional.  If present, this parameter\nspecifies the OS the machine will use.\n:type osystem: String\n\n :param distro_series: Optional.  If present, this\nparameter specifies the OS release the machine will use.\n:type distro_series: String\n\n :param hwe_kernel: Optional.  If present, this\nparameter specified the kernel to be used on the machine\n:type hwe_kernel: String\n\n :param agent_name: Optional.  An optional agent name to\nattach to the acquired machine.\n:type agent_name: String\n\n :param bridge_all: Optional.  Optionally create a\nbridge interface for every configured interface on the machine. The\ncreated bridges will be removed once the machine is released.\n(Default: false)\n:type bridge_all: Boolean\n\n :param bridge_type: Optional.  Optionally create the\nbridges with this type. Possible values are: ``standard``, ``ovs``.\n:type bridge_type: String\n\n :param bridge_stp: Optional.  Optionally turn spanning\ntree protocol on or off for the bridges created on every configured\ninterface.  (Default: false)\n:type bridge_stp: Boolean\n\n :param bridge_fd: Optional.  Optionally adjust the forward\ndelay to time seconds.  (Default: 15)\n:type bridge_fd: Int\n\n :param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n :param install_rackd: Optional.  If true, the rack\ncontroller will be installed on this machine.\n:type install_rackd: Boolean\n\n :param install_kvm: Optional.  If true, KVM will be\ninstalled on this machine and added to MAAS.\n:type install_kvm: Boolean\n\n :param register_vmhost: Optional.  If true, the\nmachine will be registered as a LXD VM host in MAAS.\n:type register_vmhost: Boolean\n\n :param ephemeral_deploy: Optional.  If true, machine\nwill be deployed ephemerally even if it has disks.\n:type ephemeral_deploy: Boolean\n\n :param vcenter_registration: Optional.  If false, do\nnot send globally defined VMware vCenter credentials to the machine.\n:type vcenter_registration: Boolean\n\n ",
          "op": "deploy",
          "restful": false
        },
        {
          "method": "POST",
          "name": "release",
          "doc": "Release a machine\n\nReleases a machine with the given system_id. Note that\nthis operation is the opposite of allocating a machine.\n\n**Erasing drives**:\n\nIf neither ``secure_erase`` nor ``quick_erase`` are specified, MAAS\nwill overwrite the whole disk with null bytes. This can be very slow.\n\nIf both ``secure_erase`` and ``quick_erase`` are specified and the\ndrive does NOT have a secure erase feature, MAAS will behave as if only\n``quick_erase`` was specified.\n\nIf ``secure_erase`` is specified and ``quick_erase`` is NOT specified\nand the drive does NOT have a secure erase feature, MAAS will behave as\nif ``secure_erase`` was NOT specified, i.e. MAAS will overwrite the\nwhole disk with null bytes. This can be very slow.\n\n:param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n :param erase: Optional.  Erase the disk when\nreleasing.\n:type erase: Boolean\n\n :param secure_erase: Optional.  Use the drive's secure\nerase feature if available.  In some cases, this can be much faster\nthan overwriting the drive.  Some drives implement secure erasure by\noverwriting themselves so this could still be slow.\n:type secure_erase: Boolean\n\n :param quick_erase: Optional.  Wipe 2MiB at the start\nand at the end of the drive to make data recovery inconvenient and\nunlikely to happen by accident. This is not secure.\n:type quick_erase: Boolean\n\n :param force: Optional.  Will force the release of a\nmachine. If the machine was deployed as a KVM host, this will be\ndeleted as well as all machines inside the KVM host. USE WITH CAUTION.\n:type force: Boolean\n\n ",
          "op": "release",
          "restful": false
        },
        {
          "method": "POST",
          "name": "commission",
          "doc": "Commission a machine\n\nBegin commissioning process for a machine.\n\nA machine in the 'ready', 'declared' or 'failed test' state may\ninitiate a commissioning cycle where it is checked out and tested in\npreparation for transitioning to the 'ready' state. If it is already in\nthe 'ready' state this is considered a re-commissioning process which\nis useful if commissioning tests were changed after it previously\ncommissioned.\n\n:param enable_ssh: Optional.   Whether to enable SSH for\nthe commissioning environment using the user's SSH key(s). '1' == True,\n'0' == False.\n:type enable_ssh: Int\n\n :param skip_bmc_config: Optional.  Whether to skip\nre-configuration of the BMC for IPMI based machines. '1' == True, '0'\n== False.\n:type skip_bmc_config: Int\n\n :param skip_networking: Optional.  Whether to skip\nre-configuring the networking on the machine after the commissioning\nhas completed. '1' == True, '0' == False.\n:type skip_networking: Int\n\n :param skip_storage: Optional.  Whether to skip\nre-configuring the storage on the machine after the commissioning has\ncompleted. '1' == True, '0' == False.\n:type skip_storage: Int\n\n :param commissioning_scripts: Optional.  A comma\nseperated list of commissioning script names and tags to be run. By\ndefault all custom commissioning scripts are run. Built-in\ncommissioning scripts always run. Selecting 'update_firmware' or\n'configure_hba' will run firmware updates or configure HBA's on\nmatching machines.\n:type commissioning_scripts: String\n\n :param testing_scripts: Optional.  A comma seperated\nlist of testing script names and tags to be run. By default all tests\ntagged 'commissioning' will be run. Set to 'none' to disable running\ntests.\n:type testing_scripts: String\n\n :param parameters: Optional.  Scripts selected to run\nmay define their own parameters. These parameters may be passed using\nthe parameter name. Optionally a parameter may have the script name\nprepended to have that parameter only apply to that specific script.\n:type parameters: String\n\n ",
          "op": "commission",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_storage_layout",
          "doc": "Change storage layout\n\nChanges the storage layout on machine with the given\nsystem_id.\n\nThis operation can only be performed on a machine with a status\nof 'Ready'.\n\nNote: This will clear the current storage layout and any extra\nconfiguration and replace it will the new layout.\n\n:param storage_layout: Required.  Storage layout for the\nmachine: ``flat``, ``lvm``, ``bcache``, ``vmfs6``, or ``blank``.\n:type storage_layout: String\n\n :param boot_size: Optional.  All layouts. Size of the\nboot partition (e.g. 512M, 1G).\n:type boot_size: String\n\n :param root_size: Optional.  All layouts. Size of the\nroot partition (e.g. 24G).\n:type root_size: String\n\n :param root_device: Optional.  All layouts. Physical\nblock device to place the root partition (e.g. /dev/sda).\n:type root_device: String\n\n :param vg_name: Optional.  LVM only. Name of created\nvolume group.\n:type vg_name: String\n\n :param lv_name: Optional.  LVM only. Name of created\nlogical volume.\n:type lv_name: String\n\n :param lv_size: Optional.  LVM only.  Size of created\nlogical volume.\n:type lv_size: String\n\n :param cache_device: Optional.  Bcache only. Physical\nblock device to use as the cache device (e.g. /dev/sda).\n:type cache_device: String\n\n :param cache_mode: Optional.  Bcache only. Cache mode\nfor bcache device: ``writeback``, ``writethrough``, ``writearound``.\n:type cache_mode: String\n\n :param cache_size: Optional.  Bcache only. Size of the\ncache partition to create on the cache device (e.g. 48G).\n:type cache_size: String\n\n :param cache_no_part: Optional.  Bcache only. Don't\ncreate a partition on the cache device.  Use the entire disk as the\ncache device.\n:type cache_no_part: Boolean\n\n ",
          "op": "set_storage_layout",
          "restful": false
        },
        {
          "method": "POST",
          "name": "mount_special",
          "doc": "Mount a special-purpose filesystem\n\nMount a special-purpose filesystem, like tmpfs on a\nmachine with the given system_id.\n\n:param fstype: Required.  The filesystem type. This must\nbe a filesystem that does not require a block special device.\n:type fstype: String\n\n :param mount_point: Required.  Path on the filesystem to\nmount.\n:type mount_point: String\n\n :param mount_option: Optional.  Options to pass to\nmount(8).\n:type mount_option: String\n\n ",
          "op": "mount_special",
          "restful": false
        },
        {
          "method": "POST",
          "name": "unmount_special",
          "doc": "Unmount a special-purpose filesystem\n\nUnmount a special-purpose filesystem, like tmpfs, on a\nmachine with the given system_id.\n\n:param mount_point: Required.  Path on the filesystem to\nunmount.\n:type mount_point: String\n\n ",
          "op": "unmount_special",
          "restful": false
        },
        {
          "method": "POST",
          "name": "clear_default_gateways",
          "doc": "Clear set default gateways\n\nClear any set default gateways on a machine with the given\nsystem_id.\n\nThis will clear both IPv4 and IPv6 gateways on the machine. This will\ntransition the logic of identifing the best gateway to MAAS. This logic\nis determined based the following criteria:\n\n1. Managed subnets over unmanaged subnets.\n2. Bond interfaces over physical interfaces.\n3. Machine's boot interface over all other interfaces except bonds.\n4. Physical interfaces over VLAN interfaces.\n5. Sticky IP links over user reserved IP links.\n6. User reserved IP links over auto IP links.\n\nIf the default gateways need to be specific for this machine you can\nset which interface and subnet's gateway to use when this machine is\ndeployed with the `interfaces set-default-gateway` API.\n\n",
          "op": "clear_default_gateways",
          "restful": false
        },
        {
          "method": "GET",
          "name": "get_curtin_config",
          "doc": "Get curtin configuration\n\nReturn the rendered curtin configuration for the machine.\n\n",
          "op": "get_curtin_config",
          "restful": false
        },
        {
          "method": "POST",
          "name": "restore_networking_configuration",
          "doc": "Restore networking options\n\nRestores networking options to their initial state on a\nmachine with the given system_id.\n\n",
          "op": "restore_networking_configuration",
          "restful": false
        },
        {
          "method": "POST",
          "name": "restore_storage_configuration",
          "doc": "Restore storage configuration\n\nRestores storage configuration options to their initial\nstate on a machine with the given system_id.\n\n",
          "op": "restore_storage_configuration",
          "restful": false
        },
        {
          "method": "POST",
          "name": "restore_default_configuration",
          "doc": "Restore default configuration\n\nRestores the default configuration options on a machine\nwith the given system_id.\n\n",
          "op": "restore_default_configuration",
          "restful": false
        },
        {
          "method": "POST",
          "name": "mark_broken",
          "doc": "Mark a machine as Broken\n\nMark a machine with the given system_id as 'Broken'.\n\nIf the node is allocated, release it first.\n\n:param comment: Optional.  Optional comment for the\nevent log. Will be displayed on the node as an error description until\nmarked fixed.\n:type comment: String\n\n ",
          "op": "mark_broken",
          "restful": false
        },
        {
          "method": "POST",
          "name": "mark_fixed",
          "doc": "Mark a machine as Fixed\n\nMark a machine with the given system_id as 'Fixed'.\n\n:param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n ",
          "op": "mark_fixed",
          "restful": false
        },
        {
          "method": "POST",
          "name": "rescue_mode",
          "doc": "Enter rescue mode\n\nBegins the rescue mode process on a machine with the given\nsystem_id.\n\nA machine in the 'deployed' or 'broken' state may initiate the\nrescue mode process.\n\n",
          "op": "rescue_mode",
          "restful": false
        },
        {
          "method": "POST",
          "name": "exit_rescue_mode",
          "doc": "Exit rescue mode\n\nExits the rescue mode process on a machine with the given\nsystem_id.\n\nA machine in the 'rescue mode' state may exit the rescue mode\nprocess.\n\n",
          "op": "exit_rescue_mode",
          "restful": false
        },
        {
          "method": "POST",
          "name": "lock",
          "doc": "Lock a machine\n\nMark a machine with the given system_id as 'Locked' to\nprevent changes.\n\n:param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n ",
          "op": "lock",
          "restful": false
        },
        {
          "method": "POST",
          "name": "unlock",
          "doc": "Unlock a machine\n\nMark a machine with the given system_id as 'Unlocked' to\nallow changes.\n\n:param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n ",
          "op": "unlock",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a machine\n\nUpdates a machine with the given system_id.\n\n:param hostname: Optional.  The new hostname for this\nmachine.\n:type hostname: String\n\n :param description: Optional.  The new description for\nthis machine.\n:type description: String\n\n :param domain: Optional.  The domain for this machine.\nIf not given the default domain is used.\n:type domain: String\n\n :param architecture: Optional.  The new architecture\nfor this machine.\n:type architecture: String\n\n :param min_hwe_kernel: Optional.  A string containing\nthe minimum kernel version allowed to be ran on this machine.\n:type min_hwe_kernel: String\n\n :param power_type: Optional.  The new power type for\nthis machine. If you use the default value, power_parameters will be\nset to the empty string.  Available to admin users.  See the `Power\ntypes`_ section for a list of the available power types.\n:type power_type: String\n\n :param power_parameters_skip_check: Optional. \nWhether or not the new power parameters for this machine should be\nchecked against the expected power parameters for the machine's power\ntype ('true' or 'false').  The default is 'false'.\n:type power_parameters_skip_check: Boolean\n\n :param pool: Optional.  The resource pool to which the\nmachine should belong. All machines belong to the 'default' resource\npool if they do not belong to any other resource pool.\n:type pool: String\n\n :param zone: Optional.  Name of a valid physical zone\nin which to place this machine.\n:type zone: String\n\n :param swap_size: Optional.  Specifies the size of the\nswap file, in bytes. Field accept K, M, G and T suffixes for values\nexpressed respectively in kilobytes, megabytes, gigabytes and\nterabytes.\n:type swap_size: String\n\n :param disable_ipv4: Optional.  Deprecated. If\nspecified, must be false.\n:type disable_ipv4: Boolean\n\n :param cpu_count: Optional.  The amount of CPU cores the\nmachine has.\n:type cpu_count: Int\n\n :param memory: Optional.  How much memory the machine\nhas.  Field accept K, M, G and T suffixes for values expressed\nrespectively in kilobytes, megabytes, gigabytes and terabytes.\n:type memory: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a machine\n\nDeletes a machine with the given system_id.\n\nNote: A machine cannot be deleted if it hosts pod virtual machines.\nUse ``force`` to override this behavior. Forcing deletion will also\nremove hosted pods. E.g. ``/machines/abc123/?force=1``.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual machine.\n\nA machine is identified by its system_id.",
      "name": "MachineHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/machines/{system_id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/machines/{system_id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_zone",
          "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
          "op": "set_zone",
          "restful": false
        },
        {
          "method": "GET",
          "name": "power_parameters",
          "doc": "Get power parameters\n\nGet power parameters for multiple machines. To request\npower parameters for a specific machine or more than one machine:\n``op=power_parameters&id=abc123&id=def456``.\n\n:param id: Optional.  A system ID. To request more\nthan one machine, provide multiple ``id`` arguments in the request.\nOnly machines with matching system ids will be returned.\n:type id: URL String\n\n ",
          "op": "power_parameters",
          "restful": false
        },
        {
          "method": "POST",
          "name": "accept",
          "doc": "Accept declared machines\n\nAccept declared machines into MAAS.\n\nMachines can be enlisted in the MAAS anonymously or by non-admin users,\nas opposed to by an admin.  These machines are held in the New\nstate; a MAAS admin must first verify the authenticity of these\nenlistments, and accept them.\n\nEnlistments can be accepted en masse, by passing multiple machines to\nthis call.  Accepting an already accepted machine is not an error, but\naccepting one that is already allocated, broken, etc. is.\n\n:param machines: Optional.  A list of system_ids of the\nmachines whose enlistment is to be accepted. (An empty list is\nacceptable).\n:type machines: String\n\n ",
          "op": "accept",
          "restful": false
        },
        {
          "method": "POST",
          "name": "accept_all",
          "doc": "Accept all declared machines\n\nAccept all declared machines into MAAS.\n\nMachines can be enlisted in the MAAS anonymously or by non-admin users,\nas opposed to by an admin.  These machines are held in the New\nstate; a MAAS admin must first verify the authenticity of these\nenlistments, and accept them.\n\n",
          "op": "accept_all",
          "restful": false
        },
        {
          "method": "POST",
          "name": "release",
          "doc": "Release machines\n\nRelease multiple machines. Places the machines back into\nthe pool, ready to be reallocated.\n\n:param machines: Required.  A list of system_ids of the\nmachines which are to be released.  (An empty list is acceptable).\n:type machines: String\n\n :param comment: Optional.  Optional comment for the\nevent log.\n:type comment: String\n\n ",
          "op": "release",
          "restful": false
        },
        {
          "method": "GET",
          "name": "list_allocated",
          "doc": "List allocated\n\nList machines that were allocated to the User.\n\n",
          "op": "list_allocated",
          "restful": false
        },
        {
          "method": "POST",
          "name": "allocate",
          "doc": "Allocate a machine\n\nAllocates an available machine for deployment.\n\nConstraints parameters can be used to allocate a machine that possesses\ncertain characteristics.  All the constraints are optional and when\nmultiple constraints are provided, they are combined using 'AND'\nsemantics.\n\n:param name: Optional.  Hostname or FQDN of the desired\nmachine. If a FQDN is specified, both the domain and the hostname\nportions must match.\n:type name: String\n\n :param system_id: Optional.  system_id of the desired\nmachine.\n:type system_id: String\n\n :param arch: Optional.  Architecture of\nthe returned machine (e.g. 'i386/generic', 'amd64', 'armhf/highbank',\netc.).\n\nIf multiple architectures are specified, the machine to acquire may\nmatch any of the given architectures. To request multiple\narchitectures, this parameter must be repeated in the request with each\nvalue.\n:type arch: String\n\n :param cpu_count: Optional.  Minimum\nnumber of CPUs a returned machine must have.\n\nA machine with additional CPUs may be allocated if there is no exact\nmatch, or if the 'mem' constraint is not also specified.\n:type cpu_count: Int\n\n :param mem: Optional.  The minimum amount of memory\n(expressed in MB) the returned machine must have. A machine with\nadditional memory may be allocated if there is no exact match, or the\n'cpu_count' constraint is not also specified.\n:type mem: Int\n\n :param tags: Optional.  Tags the\nmachine must match in order to be acquired.\n\nIf multiple tag names are specified, the machine must be tagged with\nall of them. To request multiple tags, this parameter must be repeated\nin the request with each value.\n:type tags: String\n\n :param not_tags: Optional.  Tags the machine must NOT\nmatch. If multiple tag names are specified, the machine must NOT be\ntagged with ANY of them. To request exclusion of multiple tags, this\nparameter must be repeated in the request with each value.\n:type not_tags: String\n\n :param zone: Optional.  Physical zone name the machine\nmust be located in.\n:type zone: String\n\n :param not_in_zone: Optional.  List of physical zones\nfrom which the machine must not be acquired.  If multiple zones are\nspecified, the machine must NOT be associated with ANY of them. To\nrequest multiple zones to exclude, this parameter must be repeated in\nthe request with each value.\n:type not_in_zone: String\n\n :param pool: Optional.  Resource pool name the machine\nmust belong to.\n:type pool: String\n\n :param not_in_pool: Optional.  List of resource pool\nfrom which the machine must not be acquired. If multiple pools are\nspecified, the machine must NOT be associated with ANY of them. To\nrequest multiple pools to exclude, this parameter must be repeated in\nthe request with each value.\n:type not_in_pool: String\n\n :param pod: Optional.  Pod the machine must be located\nin.\n:type pod: String\n\n :param not_pod: Optional.  Pod the machine must not be\nlocated in.\n:type not_pod: String\n\n :param pod_type: Optional.  Pod type the machine must\nbe located in.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Pod type the machine\nmust not be located in.\n:type not_pod_type: String\n\n :param subnets: Optional.  Subnets that\nmust be linked to the machine.\n\n\"Linked to\" means the node must be configured to acquire an address in\nthe specified subnet, have a static IP address in the specified subnet,\nor have been observed to DHCP from the specified subnet during\ncommissioning time (which implies that it *could* have an address on\nthe specified subnet).\n\nSubnets can be specified by one of the following criteria:\n\n- <id>: Match the subnet by its 'id' field\n- fabric:<fabric-spec>: Match all subnets in a given fabric.\n- ip:<ip-address>: Match the subnet containing <ip-address> with the\n  with the longest-prefix match.\n- name:<subnet-name>: Match a subnet with the given name.\n- space:<space-spec>: Match all subnets in a given space.\n- vid:<vid-integer>: Match a subnet on a VLAN with the specified VID.\n  Valid values range from 0 through 4094 (inclusive). An untagged VLAN\n  can be specified by using the value \"0\".\n- vlan:<vlan-spec>: Match all subnets on the given VLAN.\n\nNote that (as of this writing), the 'fabric', 'space', 'vid', and\n'vlan' specifiers are only useful for the 'not_spaces' version of this\nconstraint, because they will most likely force the query to match ALL\nthe subnets in each fabric, space, or VLAN, and thus not return any\nnodes. (This is not a particularly useful behavior, so may be changed\nin the future.)\n\nIf multiple subnets are specified, the machine must be associated with\nall of them. To request multiple subnets, this parameter must be\nrepeated in the request with each value.\n\nNote that this replaces the legacy 'networks' constraint in MAAS 1.x.\n:type subnets: String\n\n :param not_subnets: Optional.  Subnets\nthat must NOT be linked to the machine.\n\nSee the 'subnets' constraint documentation above for more information\nabout how each subnet can be specified.\n\nIf multiple subnets are specified, the machine must NOT be associated\nwith ANY of them. To request multiple subnets to exclude, this\nparameter must be repeated in the request with each value. (Or a\nfabric, space, or VLAN specifier may be used to match multiple\nsubnets).\n\nNote that this replaces the legacy 'not_networks' constraint in MAAS\n1.x.\n:type not_subnets: String\n\n :param storage: Optional.  A list of storage constraint\nidentifiers, in the form: ``label:size(tag[,tag[,...])][,label:...]``.\n:type storage: String\n\n :param interfaces: Optional.  A labeled\nconstraint map associating constraint labels with interface properties\nthat should be matched. Returned nodes must have one or more interface\nmatching the specified constraints. The labeled constraint map must be\nin the format: ``label:key=value[,key2=value2[,...]]``.\n\nEach key can be one of the following:\n\n- ``id``: Matches an interface with the specific id\n- ``fabric``: Matches an interface attached to the specified fabric.\n- ``fabric_class``: Matches an interface attached to a fabric with the\n  specified class.\n- ``ip``: Matches an interface with the specified IP address assigned\n  to it.\n- ``mode``: Matches an interface with the specified mode. (Currently,\n  the only supported mode is \"unconfigured\".)\n- ``name``: Matches an interface with the specified name.  (For\n  example, \"eth0\".)\n- ``hostname``: Matches an interface attached to the node with the\n  specified hostname.\n- ``subnet``: Matches an interface attached to the specified subnet.\n- ``space``: Matches an interface attached to the specified space.\n- ``subnet_cidr``: Matches an interface attached to the specified\n  subnet CIDR. (For example, \"192.168.0.0/24\".)\n- ``type``: Matches an interface of the specified type. (Valid types:\n  \"physical\", \"vlan\", \"bond\", \"bridge\", or \"unknown\".)\n- ``vlan``: Matches an interface on the specified VLAN.\n- ``vid``: Matches an interface on a VLAN with the specified VID.\n- ``tag``: Matches an interface tagged with the specified tag.\n- ``link_speed``: Matches an interface with link_speed equal to or\n  greater than the specified speed.\n:type interfaces: String\n\n :param fabrics: Optional.  Set of fabrics that the\nmachine must be associated with in order to be acquired. If multiple\nfabrics names are specified, the machine can be in any of the specified\nfabrics. To request multiple possible fabrics to match, this parameter\nmust be repeated in the request with each value.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Fabrics the machine must\nNOT be associated with in order to be acquired. If multiple fabrics\nnames are specified, the machine must NOT be in ANY of them. To request\nexclusion of multiple fabrics, this parameter must be repeated in the\nrequest with each value.\n:type not_fabrics: String\n\n :param fabric_classes: Optional.  Set of fabric class\ntypes whose fabrics the machine must be associated with in order to be\nacquired. If multiple fabrics class types are specified, the machine\ncan be in any matching fabric. To request multiple possible fabrics\nclass types to match, this parameter must be repeated in the request\nwith each value.\n:type fabric_classes: String\n\n :param not_fabric_classes: Optional.  Fabric class\ntypes whose fabrics the machine must NOT be associated with in order to\nbe acquired. If multiple fabrics names are specified, the machine must\nNOT be in ANY of them. To request exclusion of multiple fabrics, this\nparameter must be repeated in the request with each value.\n:type not_fabric_classes: String\n\n :param agent_name: Optional.  An optional agent name to\nattach to the acquired machine.\n:type agent_name: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n :param bridge_all: Optional.  Optionally create a\nbridge interface for every configured interface on the machine. The\ncreated bridges will be removed once the machine is released.\n(Default: False)\n:type bridge_all: Boolean\n\n :param bridge_stp: Optional.  Optionally turn spanning\ntree protocol on or off for the bridges created on every configured\ninterface.  (Default: off)\n:type bridge_stp: Boolean\n\n :param bridge_fd: Optional.  Optionally adjust the forward\ndelay to time seconds.  (Default: 15)\n:type bridge_fd: Int\n\n :param devices: Optional.  Only return a node which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n :param dry_run: Optional.  Optional boolean to\nindicate that the machine should not actually be acquired (this is for\nsupport/troubleshooting, or users who want to see which machine would\nmatch a constraint, without acquiring a machine). Defaults to False.\n:type dry_run: Boolean\n\n :param verbose: Optional.  Optional boolean to\nindicate that the user would like additional verbosity in the\nconstraints_by_type field (each constraint will be prefixed by\n``verbose_``, and contain the full data structure that indicates which\nmachine(s) matched).\n:type verbose: Boolean\n\n ",
          "op": "allocate",
          "restful": false
        },
        {
          "method": "POST",
          "name": "add_chassis",
          "doc": "Add special hardware\n\nAdd special hardware types.\n\n:param chassis_type: Required.  The type\nof hardware:\n\n- ``hmcz``: IBM Hardware Management Console (HMC) for Z\n- ``mscm``: Moonshot Chassis Manager.\n- ``msftocs``: Microsoft OCS Chassis Manager.\n- ``powerkvm``: Virtual Machines on Power KVM, managed by Virsh.\n- ``proxmox``: Virtual Machines managed by Proxmox\n- ``recs_box``: Christmann RECS|Box servers.\n- ``sm15k``: Seamicro 1500 Chassis.\n- ``ucsm``: Cisco UCS Manager.\n- ``virsh``: virtual machines managed by Virsh.\n- ``vmware`` is the type for virtual machines managed by VMware.\n:type chassis_type: String\n\n :param hostname: Required.  The URL, hostname, or IP\naddress to access the chassis.\n:type hostname: String\n\n :param username: Optional.  The username used to access\nthe chassis. This field is required for the recs_box, seamicro15k,\nvmware, mscm, msftocs, ucsm, and hmcz chassis types.\n:type username: String\n\n :param password: Optional.  The password used to access\nthe chassis. This field is required for the ``recs_box``,\n``seamicro15k``, ``vmware``, ``mscm``, ``msftocs``, ``ucsm``, and\n``hmcz`` chassis types.\n:type password: String\n\n :param accept_all: Optional.  If true, all enlisted\nmachines will be commissioned.\n:type accept_all: String\n\n :param rack_controller: Optional.  The system_id of the\nrack controller to send the add chassis command through. If none is\nspecifed MAAS will automatically determine the rack controller to use.\n:type rack_controller: String\n\n :param domain: Optional.  The domain that each new\nmachine added should use.\n:type domain: String\n\n :param prefix_filter: Optional.  (``virsh``,\n``vmware``, ``powerkvm``, ``proxmox``, ``hmcz`` only.) Filter machines\nwith supplied prefix.\n:type prefix_filter: String\n\n :param power_control: Optional.  (``seamicro15k`` only)\nThe power_control to use, either ipmi (default), restapi, or restapi2.\n\nThe following are optional if you are adding a proxmox chassis.\n:type power_control: String\n\n :param token_name: Optional.  The name the\nauthentication token to be used instead of a password.\n:type token_name: String\n\n :param token_secret: Optional.  The token secret\nto be used in combination with the power_token_name used in place of\na password.\n:type token_secret: String\n\n :param verify_ssl: Optional.  Whether SSL\nconnections should be verified.\n\nThe following are optional if you are adding a recs_box, vmware or\nmsftocs chassis.\n:type verify_ssl: Boolean\n\n :param port: Optional.  (``recs_box``, ``vmware``,\n``msftocs`` only) The port to use when accessing the chassis.\n\nThe following are optional if you are adding a vmware chassis:\n:type port: Int\n\n :param protocol: Optional.  (``vmware`` only) The\nprotocol to use when accessing the VMware chassis (default: https).\n\n:return: A string containing the chassis powered on by which rack\n    controller.\n:type protocol: String\n\n ",
          "op": "add_chassis",
          "restful": false
        },
        {
          "method": "POST",
          "name": "clone",
          "doc": "Clone storage and/or interface configurations\n\nClone storage and/or interface configurations\n\nA machine storage and/or interface configuration can be cloned to a\nset of destination machines.\n\nFor storage configuration, cloning the destination machine must have at\nleast the same number of physical block devices or more, along with\nthe physical block devices being the same size or greater.\n\nFor interface configuration, cloning the destination machine must have\nat least the same number of interfaces with the same names. The\ndestination machine can have more interfaces than the source, as long\nas the subset of interfaces on the destination have the same matching\nnames as the source.\n\n:param source: Required.  The system_id of the machine\nthat is the source of the configuration.\n:type source: String\n\n :param destinations: Required.  A list of system_ids to\nclone the configuration to.\n:type destinations: String\n\n :param interfaces: Required.  Whether to clone\ninterface configuration. Defaults to False.\n:type interfaces: Boolean\n\n :param storage: Required.  Whether to clone storage\nconfiguration. Defaults to False.\n:type storage: Boolean\n\n ",
          "op": "clone",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a new machine\n\nCreate a new machine.\n\nAdding a server to MAAS wipes its disks and re-installs its operating\nsystem, in the event that it PXE boots.  In anonymous enlistment (and\nwhen the enlistment is done by a non-admin), the machine is held in the\n\"New\" state for approval by a MAAS admin.\n\nThe minimum data required is:\n\narchitecture=<arch string> (e.g. \"i386/generic\")\nmac_addresses=<value> (e.g. \"aa:bb:cc:dd:ee:ff\")\n\n:param architecture: Required.  A string containing the\narchitecture type of the machine. (For example, \"i386\", or \"amd64\".) To\n:type architecture: unicode\n:type architecture: String\n\n :param min_hwe_kernel: Optional.  A string containing\nthe minimum kernel version allowed to be ran on this machine.\n:type min_hwe_kernel: String\n\n :param subarchitecture: Optional.  A string containing\nthe subarchitecture type of the machine. (For example, \"generic\" or\n\"hwe-t\".) To determine the supported subarchitectures, use the\nboot-resources endpoint.\n:type subarchitecture: String\n\n :param mac_addresses: Required.  One or more MAC\naddresses for the machine. To specify more than one MAC address, the\nparameter must be specified twice. (such as \"machines new\nmac_addresses=01:02:03:04:05:06 mac_addresses=02:03:04:05:06:07\")\n:type mac_addresses: String\n\n :param hostname: Optional.  A hostname. If not given,\none will be generated.\n:type hostname: String\n\n :param description: Optional.  A optional description.\n:type description: String\n\n :param domain: Optional.  The domain of the machine. If\nnot given the default domain is used.\n:type domain: String\n\n :param power_type: Optional.  A power management type,\nif applicable (e.g.  \"virsh\", \"ipmi\").\n:type power_type: String\n\n :param commission: Optional.  Request\nthe newly created machine to be created with status set to\nCOMMISSIONING. Machines will wait for COMMISSIONING results and not\ntime out. Machines created by administrators will be commissioned\nunless set to false.\n:type commission: Boolean\n\n :param enable_ssh: Optional.   Whether to enable SSH for\nthe commissioning environment using the user's SSH key(s). '1' == True,\n'0' == False.\n:type enable_ssh: Int\n\n :param skip_bmc_config: Optional.  Whether to skip\nre-configuration of the BMC for IPMI based machines. '1' == True, '0'\n== False.\n:type skip_bmc_config: Int\n\n :param skip_networking: Optional.  Whether to skip\nre-configuring the networking on the machine after the commissioning\nhas completed. '1' == True, '0' == False.\n:type skip_networking: Int\n\n :param skip_storage: Optional.  Whether to skip\nre-configuring the storage on the machine after the commissioning has\ncompleted. '1' == True, '0' == False.\n:type skip_storage: Int\n\n :param commissioning_scripts: Optional.  A comma\nseperated list of commissioning script names and tags to be run. By\ndefault all custom commissioning scripts are run. Built-in\ncommissioning scripts always run. Selecting 'update_firmware' or\n'configure_hba' will run firmware updates or configure HBA's on\nmatching machines.\n:type commissioning_scripts: String\n\n :param testing_scripts: Optional.  A comma seperated\nlist of testing script names and tags to be run. By default all tests\ntagged 'commissioning' will be run. Set to 'none' to disable running\ntests.\n:type testing_scripts: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all the machines in the MAAS.",
      "name": "MachinesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/machines/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/machines/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read commissioning results\n\nRead the commissioning results per node visible to the\nuser, optionally filtered.\n\n:param system_id: Optional.  An optional list of system\nids. Only the results related to the nodes with these system ids will\nbe returned.\n:type system_id: String\n\n :param name: Optional.  An optional list of names.\nOnly the results with the specified names will be returned.\n:type name: String\n\n :param result_type: Optional.  An optional result_type.\nOnly the results with the specified result_type will be returned.\n:type result_type: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Read the collection of commissioning script results.",
      "name": "NodeResultsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/installation-results/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/installation-results/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "details",
          "doc": "Get system details\n\nReturns system details -- for example, LLDP and\n``lshw`` XML dumps.\n\nReturns a ``{detail_type: xml, ...}`` map, where\n``detail_type`` is something like \"lldp\" or \"lshw\".\n\nNote that this is returned as BSON and not JSON. This is for\nefficiency, but mainly because JSON can't do binary content without\napplying additional encoding like base-64. The example output below is\nrepresented in ASCII using ``bsondump example.bson`` and is for\ndemonstrative purposes.\n\n",
          "op": "details",
          "restful": false
        },
        {
          "method": "GET",
          "name": "power_parameters",
          "doc": "Get power parameters\n\nGets power parameters for a given system_id, if any. For\nsome types of power control this will include private information such\nas passwords and secret keys.\n\nNote that this method is reserved for admin users and returns a 403 if\nthe user is not one.\n\n",
          "op": "power_parameters",
          "restful": false
        },
        {
          "method": "GET",
          "name": "query_power_state",
          "doc": "Get the power state of a node\n\nGets the power state of a given node. MAAS sends a request\nto the node's power controller, which asks it about the node's state.\nThe reply to this could be delayed by up to 30 seconds while waiting\nfor the power controller to respond.  Use this method sparingly as it\nties up an appserver thread while waiting.\n\n:param system_id: Required.  The node to query.\n:type system_id: String\n\n ",
          "op": "query_power_state",
          "restful": false
        },
        {
          "method": "POST",
          "name": "power_on",
          "doc": "Turn on a node\n\nTurn on the given node with optional user-data and\ncomment.\n\n:param user_data: Optional.  Base64-encoded blob of\ndata to be made available to the nodes through the metadata service.\n:type user_data: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
          "op": "power_on",
          "restful": false
        },
        {
          "method": "POST",
          "name": "power_off",
          "doc": "Power off a node\n\nPowers off a given node.\n\n:param stop_mode: Optional.  Power-off mode. If 'soft',\nperform a soft power down if the node's power type supports it,\notherwise perform a hard power off. For all values other than 'soft',\nand by default, perform a hard power off. A soft power off generally\nasks the OS to shutdown the system gracefully before powering off,\nwhile a hard power off occurs immediately without any warning to the\nOS.\n:type stop_mode: String\n\n :param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
          "op": "power_off",
          "restful": false
        },
        {
          "method": "POST",
          "name": "test",
          "doc": "Begin testing process for a node\n\nBegins the testing process for a given node.\n\nA node in the 'ready', 'allocated', 'deployed', 'broken', or any failed\nstate may run tests. If testing is started and successfully passes from\n'broken' or any failed state besides 'failed commissioning' the node\nwill be returned to a ready state. Otherwise the node will return to\nthe state it was when testing started.\n\n:param enable_ssh: Optional.  Whether to enable SSH for\nthe testing environment using the user's SSH key(s). 0 == false. 1 ==\ntrue.\n:type enable_ssh: Int\n\n :param testing_scripts: Optional.  A comma-separated\nlist of testing script names and tags to be run. By default all tests\ntagged 'commissioning' will be run.\n:type testing_scripts: String\n\n :param parameters: Optional.  Scripts selected to run\nmay define their own parameters. These parameters may be passed using\nthe parameter name. Optionally a parameter may have the script name\nprepended to have that parameter only apply to that specific script.\n:type parameters: String\n\n ",
          "op": "test",
          "restful": false
        },
        {
          "method": "POST",
          "name": "override_failed_testing",
          "doc": "Ignore failed tests\n\nIgnore failed tests and put node back into a usable state.\n\n:param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
          "op": "override_failed_testing",
          "restful": false
        },
        {
          "method": "POST",
          "name": "abort",
          "doc": "Abort a node operation\n\nAbort a node's current operation.\n\n:param comment: Optional.  Comment for the event log.\n:type comment: String\n\n ",
          "op": "abort",
          "restful": false
        },
        {
          "method": "POST",
          "name": "import_boot_images",
          "doc": "Import boot images\n\nImport boot images on a given rack controller or all\nrack controllers.\n\n",
          "op": "import_boot_images",
          "restful": false
        },
        {
          "method": "GET",
          "name": "list_boot_images",
          "doc": "List available boot images\n\nLists all available boot images for a given rack\ncontroller system_id and whether they are in sync with the\nregion controller.\n\n",
          "op": "list_boot_images",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a node\n\nReads a node with the given system_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a rack controller\n\nUpdates a rack controller with the given system_id.\n\n:param description: Optional.  The new description for\nthis given rack controller.\n:type description: String\n\n :param power_type: Optional.  The new power type for\nthe given rack controller. If you use the default value,\npower_parameters will be set to an empty string. See the\n`Power types`_ section for a list of available power types. Note that\nonly admin users can set this parameter.\n:type power_type: String\n\n :param power_parameters_skip_check: Optional.  If\ntrue, the new power parameters for the given rack controller will be\nchecked against the expected parameters for the rack controller's power\ntype. Default is false.\n:type power_parameters_skip_check: Boolean\n\n :param zone: Optional.  The name of a valid zone in\nwhich to place the given rack controller.\n:type zone: String\n\n :param domain: Optional.  The domain for this\ncontroller. If not given the default domain is used.\n:type domain: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a rack controller\n\nDeletes a rack controller with the given system_id. A\nrack controller cannot be deleted if it is set to `primary_rack` on\na `VLAN` and another rack controller cannot be used to provide DHCP\nfor said VLAN. Use `force` to override this behavior.\n\nUsing `force` will also allow deleting a rack controller that is\nhosting pod virtual machines. The pod will also be deleted.\n\nRack controllers that are also region controllers will be converted\nto a region controller (and hosted pods will not be affected).\n\n:param force: Optional.  Always delete the rack\ncontroller even if it is the `primary_rack` on a `VLAN` and another\nrack controller cannot provide DHCP on that VLAN. This will disable\nDHCP on those VLANs.\n:type force: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual rack controller.\n\nThe rack controller is identified by its system_id.",
      "name": "RackControllerHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/rackcontrollers/{system_id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/rackcontrollers/{system_id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Retrieve an SSH key\n\nRetrieves an SSH key with the given ID.\n\n:param id: Required.  An SSH key ID.\n:type id: Int\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete an SSH key\n\nDeletes the SSH key with the given ID.\n\n:param id: Required.  An SSH key ID.\n:type id: Int\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an SSH key.\n\nSSH keys can be retrieved or deleted.",
      "name": "SSHKeyHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/account/prefs/sshkeys/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/prefs/sshkeys/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "is_registered",
          "doc": "MAC address registered\n\nReturns whether or not the given MAC address is registered\nwithin this MAAS (and attached to a non-retired node).\n\n:param mac_address: Required.  The MAC address to be\nchecked.\n:type mac_address: URL String\n\n ",
          "op": "is_registered",
          "restful": false
        },
        {
          "method": "POST",
          "name": "set_zone",
          "doc": "Assign nodes to a zone\n\nAssigns a given node to a given zone.\n\n:param zone: Required.  The zone name.\n:type zone: String\n\n :param nodes: Required.  The node to add.\n:type nodes: String\n\n ",
          "op": "set_zone",
          "restful": false
        },
        {
          "method": "GET",
          "name": "power_parameters",
          "doc": "Get power parameters\n\nGet power parameters for multiple machines. To request\npower parameters for a specific machine or more than one machine:\n``op=power_parameters&id=abc123&id=def456``.\n\n:param id: Optional.  A system ID. To request more\nthan one machine, provide multiple ``id`` arguments in the request.\nOnly machines with matching system ids will be returned.\n:type id: URL String\n\n ",
          "op": "power_parameters",
          "restful": false
        },
        {
          "method": "POST",
          "name": "import_boot_images",
          "doc": "Import boot images on all rack controllers\n\nImports boot images on all rack controllers.\n\n",
          "op": "import_boot_images",
          "restful": false
        },
        {
          "method": "GET",
          "name": "describe_power_types",
          "doc": "Get power information from rack controllers\n\nQueries all rack controllers for power information.\n\n",
          "op": "describe_power_types",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List Nodes visible to the user\n\nList nodes visible to current user, optionally filtered by\ncriteria.\n\nNodes are sorted by id (i.e. most recent last) and grouped by type.\n\n:param hostname: Optional.  Only nodes relating to the\nnode with the matching hostname will be returned. This can be specified\nmultiple times to see multiple nodes.\n:type hostname: String\n\n :param cpu_count: Optional.  Only nodes with the specified\nminimum number of CPUs will be included.\n:type cpu_count: Int\n\n :param mem: Optional.  Only nodes with the specified\nminimum amount of RAM (in MiB) will be included.\n:type mem: String\n\n :param mac_address: Optional.  Only nodes relating to\nthe node owning the specified MAC address will be returned. This can be\nspecified multiple times to see multiple nodes.\n:type mac_address: String\n\n :param id: Optional.  Only nodes relating to the nodes\nwith matching system ids will be returned.\n:type id: String\n\n :param domain: Optional.  Only nodes relating to the\nnodes in the domain will be returned.\n:type domain: String\n\n :param zone: Optional.  Only nodes relating to the\nnodes in the zone will be returned.\n:type zone: String\n\n :param pool: Optional.  Only nodes belonging to the\npool will be returned.\n:type pool: String\n\n :param agent_name: Optional.  Only nodes relating to\nthe nodes with matching agent names will be returned.\n:type agent_name: String\n\n :param fabrics: Optional.  Only nodes with interfaces\nin specified fabrics will be returned.\n:type fabrics: String\n\n :param not_fabrics: Optional.  Only nodes with\ninterfaces not in specified fabrics will be returned.\n:type not_fabrics: String\n\n :param vlans: Optional.  Only nodes with interfaces in\nspecified VLANs will be returned.\n:type vlans: String\n\n :param not_vlans: Optional.  Only nodes with interfaces\nnot in specified VLANs will be returned.\n:type not_vlans: String\n\n :param subnets: Optional.  Only nodes with interfaces\nin specified subnets will be returned.\n:type subnets: String\n\n :param not_subnets: Optional.  Only nodes with\ninterfaces not in specified subnets will be returned.\n:type not_subnets: String\n\n :param link_speed: Optional.  Only nodes with\ninterfaces with link speeds greater than or equal to link_speed will\nbe returned.\n:type link_speed: String\n\n :param status: Optional.  Only nodes with specified\nstatus will be returned.\n:type status: String\n\n :param pod: Optional.  Only nodes that belong to a\nspecified pod will be returned.\n:type pod: String\n\n :param not_pod: Optional.  Only nodes that don't\nbelong to a specified pod will be returned.\n:type not_pod: String\n\n :param pod_type: Optional.  Only nodes that belong to\na pod of the specified type will be returned.\n:type pod_type: String\n\n :param not_pod_type: Optional.  Only nodes that don't\nbelong a pod of the specified type will be returned.\n:type not_pod_type: String\n\n :param devices: Optional.  Only return nodes which\nhave one or more devices containing the following constraints in the\nformat key=value[,key2=value2[,...]]\n\nEach key can be one of the following:\n\n- ``vendor_id``: The device vendor id\n- ``product_id``: The device product id\n- ``vendor_name``: The device vendor name, not case sensative\n- ``product_name``: The device product name, not case sensative\n- ``commissioning_driver``: The device uses this driver during\n  commissioning.\n:type devices: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all rack controllers in MAAS.",
      "name": "RackControllersHandler",
      "params": [],
      "path": "/MAAS/api/2.0/rackcontrollers/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/rackcontrollers/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "import",
          "doc": "Import SSH keys\n\nImport the requesting user's SSH keys for a given protocol\nand authorization ID in protocol:auth_id format.\n\n:param keysource: Required.  The source\nof the keys to import should be provided in the request payload as form\ndata:\n\nE.g.\n\n``source:user``\n\n- ``source``: lp (Launchpad), gh (GitHub)\n- ``user``: User login\n:type keysource: String\n\n ",
          "op": "import",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List SSH keys\n\nList all keys belonging to the requesting user.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Add a new SSH key\n\nAdd a new SSH key to the requesting or supplied user's\naccount.\n\n:param key: Required.  A public SSH key\nshould be provided in the request payload as form data with the name\n'key':\n\n``key: \"key-type public-key-data\"``\n\n- ``key-type``: ecdsa-sha2-nistp256, ecdsa-sha2-nistp384,\n  ecdsa-sha2-nistp521, ssh-dss, ssh-ed25519, ssh-rsa\n- ``public key data``: Base64-encoded key data.\n:type key: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all the SSH keys in this MAAS.",
      "name": "SSHKeysHandler",
      "params": [],
      "path": "/MAAS/api/2.0/account/prefs/sshkeys/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/prefs/sshkeys/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Retrieve an SSL key\n\nRetrieves an SSL key with the given ID.\n\n:param id: Required.  An SSL key ID.\n:type id: Int\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete an SSL key\n\nDeletes the SSL key with the given ID.\n\n:param id: Required.  An SSH key ID.\n:type id: Int\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an SSL key.\n\nSSL keys can be retrieved or deleted.",
      "name": "SSLKeyHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/account/prefs/sslkeys/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/prefs/sslkeys/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List keys\n\nList all keys belonging to the requesting user.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Add a new SSL key\n\nAdd a new SSL key to the requesting user's account.\n\n:param key: Required.  An SSL key\nshould be provided in the request payload as form data with the name\n'key':\n\n``key: \"key data\"``\n\n- ``key data``: The contents of a pem file.\n:type key: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Operations on multiple keys.",
      "name": "SSLKeysHandler",
      "params": [],
      "path": "/MAAS/api/2.0/account/prefs/sslkeys/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/account/prefs/sslkeys/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Retrieve user details\n\nRetrieve a user's details.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a user\n\nDeletes a given username.\n\n:param transfer_resources_to: Optional.  An optional\nusername. If supplied, the allocated resources of the user being\ndeleted will be transferred to this user. A user can't be removed\nunless its resources (machines, IP addresses, ...), are released or\ntransfered to another user.\n:type transfer_resources_to: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a user account.",
      "name": "UserHandler",
      "params": [
        "username"
      ],
      "path": "/MAAS/api/2.0/users/{username}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/users/{username}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "whoami",
          "doc": "Retrieve logged-in user\n\nReturns the currently logged-in user.\n\n",
          "op": "whoami",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "List users\n\nList users\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a MAAS user account\n\nCreates a MAAS user account.\n\nThis is not safe: the password is sent in plaintext.  Avoid it for\nproduction, unless you are confident that you can prevent eavesdroppers\nfrom observing the request.\n\n:param username: Required.  Identifier-style username\nfor the new user.\n:type username: String\n\n :param email: Required.  Email address for the new user.\n:type email: String\n\n :param password: Required.  Password for the new user.\n:type password: String\n\n :param is_superuser: Required.  Whether the new user is\nto be an administrator. ('0' == False, '1' == True)\n:type is_superuser: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the user accounts of this MAAS.",
      "name": "UsersHandler",
      "params": [],
      "path": "/MAAS/api/2.0/users/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/users/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Returns a named zone.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Updates a zone's name or description.\n\nNote that only 'name' and 'description' parameters are honored. Others,\nsuch as 'resource-uri' or 'id' will be ignored.\n\n:param description: Optional.  A brief description of\n    the new zone.\n:type description: String\n\n :param name: Optional.  The zone's new name.\n:type name: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Deletes a zone.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a physical zone.\n\nAny node is in a physical zone, or \"zone\" for short.  The meaning of a\nphysical zone is up to you: it could identify e.g. a server rack, a\nnetwork, or a data centre.  Users can then allocate nodes from specific\nphysical zones, to suit their redundancy or performance requirements.\n\nThis functionality is only available to administrators.  Other users can\nview physical zones, but not modify them.",
      "name": "ZoneHandler",
      "params": [
        "name"
      ],
      "path": "/MAAS/api/2.0/zones/{name}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/zones/{name}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Get a listing of all zones. Note that there is always\nat least one zone: default.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Creates a new zone.\n\n:param name: Required.  The new zone's name.\n:type name: String\n\n :param description: Optional.  A brief description of\n    the new zone.\n:type description: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage physical zones.",
      "name": "ZonesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/zones/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/zones/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a fabric\n\nRead a fabric with the given id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update fabric\n\nUpdate a fabric with the given id.\n\n:param name: Optional.  Name of the fabric.\n:type name: String\n\n :param description: Optional.  Description of the\nfabric.\n:type description: String\n\n :param class_type: Optional.  Class type of the fabric.\n:type class_type: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a fabric\n\nDelete a fabric with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage fabric.",
      "name": "FabricHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/fabrics/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fabrics/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List fabrics\n\nList all fabrics.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a fabric\n\nCreate a fabric.\n\n:param name: Optional.  Name of the fabric.\n:type name: String\n\n :param description: Optional.  Description of the\nfabric.\n:type description: String\n\n :param class_type: Optional.  Class type of the fabric.\n:type class_type: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage fabrics.",
      "name": "FabricsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/fabrics/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fabrics/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a fan network\n\nRead a fan network with the given id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a fan network\n\nUpdate a fan network with the given id.\n\n:param name: Optional.  Name of the fan network.\n:type name: String\n\n :param overlay: Optional.  The overlay network.\n:type overlay: String\n\n :param underlay: Optional.  The underlay network.\n:type underlay: String\n\n :param dhcp: Optional.  Configure DHCP server for\noverlay network.\n:type dhcp: Boolean\n\n :param host_reserve: Optional.  The number of IP addresses\nto reserve for host.\n:type host_reserve: Int\n\n :param bridge: Optional.  Override bridge name.\n:type bridge: String\n\n :param off: Optional.  Put this fan network in the\nconfiguration, but disable it.\n:type off: Boolean\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a fan network\n\nDeletes a fan network with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage Fan Network.",
      "name": "FanNetworkHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/fannetworks/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fannetworks/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List fan networks\n\nList all fan networks.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a fan network.\n\nCreate a fan network\n\n:param name: Required.  Name of the fan network.\n:type name: String\n\n :param overlay: Required.  The overlay network.\n:type overlay: String\n\n :param underlay: Required.  The underlay network.\n:type underlay: String\n\n :param dhcp: Optional.  Configure DHCP server for\noverlay network.\n:type dhcp: Boolean\n\n :param host_reserve: Optional.  The number of IP addresses\nto reserve for host.\n:type host_reserve: Int\n\n :param bridge: Optional.  Override bridge name.\n:type bridge: String\n\n :param off: Optional.  Put this fan network in the\nconfiguration, but disable it.\n:type off: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage Fan Networks.",
      "name": "FanNetworksHandler",
      "params": [],
      "path": "/MAAS/api/2.0/fannetworks/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fannetworks/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Retrieve VLAN\n\nRetrieves a VLAN on a given fabric_id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update VLAN\n\nUpdates a given VLAN.\n\n:param name: Optional.  Name of the VLAN.\n:type name: String\n\n :param description: Optional.  Description of the VLAN.\n:type description: String\n\n :param mtu: Optional.  The MTU to use on the VLAN.\n:type mtu: Int\n\n :param dhcp_on: Optional.  Whether or not DHCP should\nbe managed on the VLAN.\n:type dhcp_on: Boolean\n\n :param primary_rack: Optional.  The primary rack\ncontroller managing the VLAN (system_id).\n:type primary_rack: String\n\n :param secondary_rack: Optional.  The secondary rack\ncontroller managing the VLAN (system_id).\n:type secondary_rack: String\n\n :param relay_vlan: Optional.  Relay VLAN ID. Only set when\nthis VLAN will be using a DHCP relay to forward DHCP requests to\nanother VLAN that MAAS is managing. MAAS will not run the DHCP relay\nitself, it must be configured to proxy reqests to the primary and/or\nsecondary rack controller interfaces for the VLAN specified in this\nfield.\n:type relay_vlan: Int\n\n :param space: Optional.  The space this VLAN should be\nplaced in. Passing in an empty string (or the string 'undefined') will\ncause the VLAN to be placed in the 'undefined' space.\n:type space: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a VLAN\n\nDelete VLAN on a given fabric.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a VLAN on a fabric.",
      "name": "VlanHandler",
      "params": [
        "fabric_id",
        "vid"
      ],
      "path": "/MAAS/api/2.0/fabrics/{fabric_id}/vlans/{vid}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fabrics/{fabric_id}/vlans/{vid}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List VLANs\n\nList all VLANs belonging to given fabric.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a VLAN\n\nCreates a new VLAN.\n\n:param name: Optional.  Name of the VLAN.\n:type name: String\n\n :param description: Optional.  Description of the new\nVLAN.\n:type description: String\n\n :param vid: Required.  VLAN ID of the new VLAN.\n:type vid: Int\n\n :param mtu: Optional.  The MTU to use on the VLAN.\n:type mtu: Int\n\n :param space: Optional.  The space this VLAN should be\nplaced in. Passing in an empty string (or the string 'undefined') will\ncause the VLAN to be placed in the 'undefined' space.\n:type space: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage VLANs on a fabric.",
      "name": "VlansHandler",
      "params": [
        "fabric_id"
      ],
      "path": "/MAAS/api/2.0/fabrics/{fabric_id}/vlans/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/fabrics/{fabric_id}/vlans/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Reads a space\n\nGets a space with the given ID.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update space\n\nUpdates a space with the given ID.\n\n:param name: Required.  The name of the new space.\n:type name: String\n\n :param description: Optional.  A description of the new\nspace.\n:type description: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a space\n\nDeletes a space with the given ID.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage space.",
      "name": "SpaceHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/spaces/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/spaces/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List all spaces\n\nGenerates a list of all spaces.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a space\n\nCreate a new space.\n\n:param name: Required.  The name of the new space.\n:type name: String\n\n :param description: Optional.  A description of the new\nspace.\n:type description: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage spaces.",
      "name": "SpacesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/spaces/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/spaces/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "reserved_ip_ranges",
          "doc": "List reserved IP ranges\n\nLists IP ranges currently reserved in the subnet.\n\n",
          "op": "reserved_ip_ranges",
          "restful": false
        },
        {
          "method": "GET",
          "name": "unreserved_ip_ranges",
          "doc": "List unreserved IP ranges\n\nLists IP ranges currently unreserved in the subnet.\n\n",
          "op": "unreserved_ip_ranges",
          "restful": false
        },
        {
          "method": "GET",
          "name": "statistics",
          "doc": "Get subnet statistics\n\nReturns statistics for the specified subnet, including:\n\n- **num_available**: the number of available IP addresses\n- **largest_available**: the largest number of contiguous free IP\n  addresses\n- **num_unavailable**: the number of unavailable IP addresses\n- **total_addresses**: the sum of the available plus unavailable\n  addresses\n- **usage**: the (floating point) usage percentage of this subnet\n- **usage_string**: the (formatted unicode) usage percentage of this\n  subnet\n- **ranges**: the specific IP ranges present in ths subnet (if\n  specified)\n\nNote: to supply additional optional parameters for this request, add\nthem to the request URI: e.g.\n``/subnets/1/?op=statistics&include_suggestions=1``\n\n:param include_ranges: Optional.  If '1', includes\ndetailed information about the usage of this range. '1' == True, '0' ==\nFalse.\n:type include_ranges: Int\n\n :param include_suggestions: Optional.  If '1', includes\nthe suggested gateway and dynamic range for this subnet, if it were to\nbe configured. '1' == True, '0' == False.\n:type include_suggestions: Int\n\n ",
          "op": "statistics",
          "restful": false
        },
        {
          "method": "GET",
          "name": "ip_addresses",
          "doc": "Summary of IP addresses\n\nReturns a summary of IP addresses assigned to this subnet.\n\n:param with_username: Optional.  If '0', suppresses the\ndisplay of usernames associated with each address. '1' == True, '0' ==\nFalse. (Default: '1')\n:type with_username: Int\n\n :param with_summary: Optional.  If '0', suppresses the\ndisplay of nodes, BMCs, and and DNS records associated with each\naddress. '1' == True, '0' == False. (Default: True)\n:type with_summary: Int\n\n :param with_node_summary: Optional.  Deprecated. Use\n'with_summary'.\n:type with_node_summary: Int\n\n ",
          "op": "ip_addresses",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Get a subnet\n\nGet information about a subnet with the given ID.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a subnet\n\nUpdate a subnet with the given ID.\n\n:param cidr: Optional.  The network CIDR for this\nsubnet.\n:type cidr: String\n\n :param name: Optional.  The subnet's name.\n:type name: String\n\n :param description: Optional.  The subnet's\ndescription.\n:type description: String\n\n :param vlan: Optional.  VLAN this subnet belongs to.\nDefaults to the default VLAN for the provided fabric or defaults to the\ndefault VLAN in the default fabric (if unspecified).\n:type vlan: String\n\n :param fabric: Optional.  Fabric for the subnet.\nDefaults to the fabric the provided VLAN belongs to, or defaults to the\ndefault fabric.\n:type fabric: String\n\n :param vid: Optional.  VID of the VLAN this subnet belongs\nto. Only used when vlan is not provided. Picks the VLAN with this VID\nin the provided fabric or the default fabric if one is not given.\n:type vid: Int\n\n :param space: Optional.  Space this subnet is in.\nDefaults to the default space.\n:type space: String\n\n :param gateway_ip: Optional.  The gateway IP address\nfor this subnet.\n:type gateway_ip: String\n\n :param rdns_mode: Optional.  How reverse\nDNS is handled for this subnet.  One of:\n\n- ``0`` Disabled: No reverse zone is created.\n- ``1`` Enabled: Generate reverse zone.\n- ``2`` RFC2317: Extends '1' to create the necessary parent zone with\n  the appropriate CNAME resource records for the network, if the the\n  network is small enough to require the support described in RFC2317.\n:type rdns_mode: Int\n\n :param allow_dns: Optional.  Configure MAAS DNS to allow\nDNS resolution from this subnet. '0' == False,'1' == True.\n:type allow_dns: Int\n\n :param allow_proxy: Optional.  Configure maas-proxy to\nallow requests from this subnet. '0' == False, '1' == True.\n:type allow_proxy: Int\n\n :param dns_servers: Optional.  Comma-seperated list of\nDNS servers for this subnet.\n:type dns_servers: String\n\n :param managed: Optional.  In MAAS 2.0+,\nall subnets are assumed to be managed by default.\n:type managed: Int\n\n :param disabled_boot_architectures: Optional.  A comma\nor space seperated list of boot architectures which will not be\nresponded to by isc-dhcpd. Values may be the MAAS name for the boot\narchitecture, the IANA hex value, or the isc-dhcpd octet.\n\nOnly managed subnets allow DHCP to be enabled on their related dynamic\nranges. (Thus, dynamic ranges become \"informational only\"; an\nindication that another DHCP server is currently handling them, or that\nMAAS will handle them when the subnet is enabled for management.)\n\nManaged subnets do not allow IP allocation by default. The meaning of a\n\"reserved\" IP range is reversed for an unmanaged subnet. (That is, for\nmanaged subnets, \"reserved\" means \"MAAS cannot allocate any IP address\nwithin this reserved block\". For unmanaged subnets, \"reserved\" means\n\"MAAS must allocate IP addresses only from reserved IP ranges.\"\n:type disabled_boot_architectures: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a subnet\n\nDelete a subnet with the given ID.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage subnet.",
      "name": "SubnetHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/subnets/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/subnets/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List all subnets\n\nGet a list of all subnets.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a subnet\n\nCreates a new subnet.\n\n:param cidr: Required.  The network CIDR for this\nsubnet.\n:type cidr: String\n\n :param name: Optional.  The subnet's name.\n:type name: String\n\n :param description: Optional.  The subnet's\ndescription.\n:type description: String\n\n :param vlan: Optional.  VLAN this subnet belongs to.\nDefaults to the default VLAN for the provided fabric or defaults to the\ndefault VLAN in the default fabric (if unspecified).\n:type vlan: String\n\n :param fabric: Optional.  Fabric for the subnet.\nDefaults to the fabric the provided VLAN belongs to, or defaults to the\ndefault fabric.\n:type fabric: String\n\n :param vid: Optional.  VID of the VLAN this subnet belongs\nto. Only used when vlan is not provided. Picks the VLAN with this VID\nin the provided fabric or the default fabric if one is not given.\n:type vid: Int\n\n :param space: Optional.  Space this subnet is in.\nDefaults to the default space.\n:type space: String\n\n :param gateway_ip: Optional.  The gateway IP address\nfor this subnet.\n:type gateway_ip: String\n\n :param rdns_mode: Optional.  How reverse\nDNS is handled for this subnet.  One of:\n\n- ``0`` Disabled: No reverse zone is created.\n- ``1`` Enabled: Generate reverse zone.\n- ``2`` RFC2317: Extends '1' to create the necessary parent zone with\n  the appropriate CNAME resource records for the network, if the the\n  network is small enough to require the support described in RFC2317.\n:type rdns_mode: Int\n\n :param allow_dns: Optional.  Configure MAAS DNS to allow\nDNS resolution from this subnet. '0' == False,'1' == True.\n:type allow_dns: Int\n\n :param allow_proxy: Optional.  Configure maas-proxy to\nallow requests from this subnet. '0' == False, '1' == True.\n:type allow_proxy: Int\n\n :param dns_servers: Optional.  Comma-seperated list of\nDNS servers for this subnet.\n:type dns_servers: String\n\n :param managed: Optional.  In MAAS 2.0+,\nall subnets are assumed to be managed by default.\n:type managed: Int\n\n :param disabled_boot_architectures: Optional.  A comma\nor space seperated list of boot architectures which will not be\nresponded to by isc-dhcpd. Values may be the MAAS name for the boot\narchitecture, the IANA hex value, or the isc-dhcpd octet.\n\nOnly managed subnets allow DHCP to be enabled on their related dynamic\nranges. (Thus, dynamic ranges become \"informational only\"; an\nindication that another DHCP server is currently handling them, or that\nMAAS will handle them when the subnet is enabled for management.)\n\nManaged subnets do not allow IP allocation by default. The meaning of a\n\"reserved\" IP range is reversed for an unmanaged subnet. (That is, for\nmanaged subnets, \"reserved\" means \"MAAS cannot allocate any IP address\nwithin this reserved block\". For unmanaged subnets, \"reserved\" means\n\"MAAS must allocate IP addresses only from reserved IP ranges.\"\n:type disabled_boot_architectures: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage subnets.",
      "name": "SubnetsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/subnets/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/subnets/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read an IP range\n\nRead an IP range with the given id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update an IP range\n\nUpdate an IP range with the given id.\n\n:param start_ip: Optional.  Start IP address of this\nrange (inclusive).\n:type start_ip: String\n\n :param end_ip: Optional.  End IP address of this range\n(inclusive).\n:type end_ip: String\n\n :param comment: Optional.  A description of this range.\n(optional)\n:type comment: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete an IP range\n\nDelete an IP range with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage IP range.",
      "name": "IPRangeHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/ipranges/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/ipranges/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List all IP ranges\n\nList all available IP ranges.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create an IP range\n\nCreate a new IP range.\n\n:param type: Required.  Type of this range. (``dynamic``\nor ``reserved``)\n:type type: String\n\n :param start_ip: Required.  Start IP address of this\nrange (inclusive).\n:type start_ip: String\n\n :param end_ip: Required.  End IP address of this range\n(inclusive).\n:type end_ip: String\n\n :param subnet: Required.  Subnet associated with this\nrange.\n:type subnet: String\n\n :param comment: Optional.  A description of this range.\n:type comment: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage IP ranges.",
      "name": "IPRangesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/ipranges/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/ipranges/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Get a static route\n\nGets a static route with the given ID.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a static route\n\nUpdates a static route with the given ID.\n\n:param source: Optional.  Source subnet name for the\nroute.\n:type source: String\n\n :param destination: Optional.  Destination subnet name\nfor the route.\n:type destination: String\n\n :param gateway_ip: Optional.   IP address of the\ngateway on the source subnet.\n:type gateway_ip: String\n\n :param metric: Optional.  Weight of the route on a\ndeployed machine.\n:type metric: Int\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete static route\n\nDeletes the static route with the given ID.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage static route.",
      "name": "StaticRouteHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/static-routes/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/static-routes/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List static routes\n\nLists all static routes.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a static route\n\nCreates a static route.\n\n:param source: Required.  Source subnet name for the\nroute.\n:type source: String\n\n :param destination: Required.  Destination subnet name\nfor the route.\n:type destination: String\n\n :param gateway_ip: Required.   IP address of the\ngateway on the source subnet.\n:type gateway_ip: String\n\n :param metric: Optional.  Weight of the route on a\ndeployed machine.\n:type metric: Int\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage static routes.",
      "name": "StaticRoutesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/static-routes/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/static-routes/"
    },
    {
      "actions": [
        {
          "method": "POST",
          "name": "dismiss",
          "doc": "Dismiss a notification\n\nDismiss a notification with the given id.\n\nIt is safe to call multiple times for the same notification.\n\n",
          "op": "dismiss",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a notification\n\nRead a notification with the given id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a notification\n\nUpdate a notification with a given id.\n\nThis is available to admins *only*.\n\nNote: One of the ``user``, ``users`` or ``admins`` parameters must be\nset to True for the notification to be visible to anyone.\n\n:param message: Required.  The message for this\nnotification. May contain basic HTML, such as formatting. This string\nwill be sanitised before display so that it doesn't break MAAS HTML.\n:type message: String\n\n :param context: Optional.  Optional JSON context. The\nroot object *must* be an object (i.e. a mapping). The values herein can\nbe referenced by ``message`` with Python's \"format\" (not %) codes.\n:type context: String\n\n :param category: Optional.  Choose from: ``error``,\n``warning``, ``success``, or ``info``. Defaults to ``info``.\n:type category: String\n\n :param ident: Optional.  Unique identifier for this\nnotification.\n:type ident: String\n\n :param user: Optional.  User ID this notification is\nintended for. By default it will not be targeted to any individual\nuser.\n:type user: String\n\n :param users: Optional.  True to notify all users,\ndefaults to false, i.e. not targeted to all users.\n:type users: Boolean\n\n :param admins: Optional.  True to notify all admins,\ndefaults to false, i.e. not targeted to all admins.\n:type admins: Boolean\n\n :param dismissable: Optional.  True to allow users\ndimissing the notification. Defaults to true.\n:type dismissable: Boolean\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a notification\n\nDelete a notification with a given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage an individual notification.",
      "name": "NotificationHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/notifications/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/notifications/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List notifications\n\nList notifications relevant to the invoking user.\n\nNotifications that have been dismissed are *not* returned.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a notification\n\nCreate a new notification.\n\nThis is available to admins *only*.\n\nNote: One of the ``user``, ``users`` or ``admins`` parameters must be\nset to True for the notification to be visible to anyone.\n\n:param message: Required.  The message for this\nnotification. May contain basic HTML, such as formatting. This string\nwill be sanitised before display so that it doesn't break MAAS HTML.\n:type message: String\n\n :param context: Optional.  Optional JSON context. The\nroot object *must* be an object (i.e. a mapping). The values herein can\nbe referenced by ``message`` with Python's \"format\" (not %) codes.\n:type context: String\n\n :param category: Optional.  Choose from: ``error``,\n``warning``, ``success``, or ``info``. Defaults to ``info``.\n:type category: String\n\n :param ident: Optional.  Unique identifier for this\nnotification.\n:type ident: String\n\n :param user: Optional.  User ID this notification is\nintended for. By default it will not be targeted to any individual\nuser.\n:type user: String\n\n :param users: Optional.  True to notify all users,\ndefaults to false, i.e. not targeted to all users.\n:type users: Boolean\n\n :param admins: Optional.  True to notify all admins,\ndefaults to false, i.e. not targeted to all admins.\n:type admins: Boolean\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of all the notifications in MAAS.",
      "name": "NotificationsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/notifications/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/notifications/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "download",
          "doc": "Download a script\n\nDownload a script with the given name.\n\n:param revision: Optional.  What revision to download,\nlatest by default. Can use rev as a shortcut.\n:type revision: Int\n\n ",
          "op": "download",
          "restful": false
        },
        {
          "method": "POST",
          "name": "revert",
          "doc": "Revert a script version\n\nRevert a script with the given name to an earlier version.\n\n:param to: Optional.  What revision in the script's\nhistory to revert to. This can either be an ID or a negative number\nrepresenting how far back to go.\n:type to: Int\n\n ",
          "op": "revert",
          "restful": false
        },
        {
          "method": "POST",
          "name": "add_tag",
          "doc": "Add a tag\n\nAdd a single tag to a script with the given name.\n\n:param tag: Optional.  The tag being added.\n:type tag: String\n\n ",
          "op": "add_tag",
          "restful": false
        },
        {
          "method": "POST",
          "name": "remove_tag",
          "doc": "Remove a tag\n\nRemove a tag from a script with the given name.\n\n:param tag: Optional.  The tag being removed.\n:type tag: String\n\n ",
          "op": "remove_tag",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Return script metadata\n\nReturn metadata belonging to the script with the given\nname.\n\n:param include_script: Optional.  Include the base64\nencoded script content if any value is given for include_script.\n:type include_script: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a script\n\nUpdate a script with the given name.\n\n:param title: Optional.  The title of the script.\n:type title: String\n\n :param description: Optional.  A description of what\nthe script does.\n:type description: String\n\n :param tags: Optional.  A comma seperated list of tags\nfor this script.\n:type tags: String\n\n :param type: Optional.  The type defines when the\nscript should be used. Can be ``testing`` or ``commissioning``,\ndefaults to ``testing``.\n:type type: String\n\n :param hardware_type: Optional.  The hardware_type\ndefines what type of hardware the script is assoicated with. May be\n``cpu``, ``memory``, ``storage``, ``network``, or ``node``.\n:type hardware_type: String\n\n :param parallel: Optional.  Whether the script may be\nrun in parallel with other scripts. May be disabled to run by itself,\ninstance to run along scripts with the same name, or any to run along\nany script. ``1`` == True, ``0`` == False.\n:type parallel: Int\n\n :param timeout: Optional.  How long the script is allowed\nto run before failing.  0 gives unlimited time, defaults to 0.\n:type timeout: Int\n\n :param destructive: Optional.  Whether or not the\nscript overwrites data on any drive on the running system. Destructive\nscripts can not be run on deployed systems. Defaults to false.\n:type destructive: Boolean\n\n :param script: Optional.  The content of the script to\nbe uploaded in binary form. Note: this is not a normal parameter, but\na file upload. Its filename is ignored; MAAS will know it by the name\nyou pass to the request. Optionally you can ignore the name and script\nparameter in favor of uploading a single file as part of the request.\n:type script: String\n\n :param comment: Optional.  A comment about what this\nchange does.\n:type comment: String\n\n :param for_hardware: Optional.  A list of modalias, PCI\nIDs, and/or USB IDs the script will automatically run on. Must start\nwith ``modalias:``, ``pci:``, or ``usb:``.\n:type for_hardware: String\n\n :param may_reboot: Optional.  Whether or not the\nscript may reboot the system while running.\n:type may_reboot: Boolean\n\n :param recommission: Optional.  Whether built-in\ncommissioning scripts should be rerun after successfully running this\nscripts.\n:type recommission: Boolean\n\n :param apply_configured_networking: Optional.  Whether\nto apply the provided network configuration before the script runs.\n:type apply_configured_networking: Boolean\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a script\n\nDeletes a script with the given name.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage or view a custom script.",
      "name": "NodeScriptHandler",
      "params": [
        "name"
      ],
      "path": "/MAAS/api/2.0/scripts/{name}",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/scripts/{name}"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List stored scripts\n\nReturn a list of stored scripts.\n\nNote that parameters should be passed in the URI. E.g.\n``/script/?type=testing``.\n\n:param type: Optional.  Only return scripts with the\ngiven type. This can be ``testing`` or ``commissioning``. Defaults to\nshowing both.\n:type type: String\n\n :param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``cpu``, ``memory``, ``storage``,\n``network``, or ``node``.  Defaults to all.\n:type hardware_type: String\n\n :param include_script: Optional.  Include the base64-\nencoded script content.\n:type include_script: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results with a script name or tag.\n:type filters: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a new script\n\nCreate a new script.\n\n:param name: Required.  The name of the script.\n:type name: String\n\n :param title: Optional.  The title of the script.\n:type title: String\n\n :param description: Optional.  A description of what\nthe script does.\n:type description: String\n\n :param tags: Optional.  A comma seperated list of tags\nfor this script.\n:type tags: String\n\n :param type: Optional.  The script_type defines when\nthe script should be used: ``testing`` or ``commissioning``. Defaults\nto ``testing``.\n:type type: String\n\n :param hardware_type: Optional.  The hardware_type\ndefines what type of hardware the script is assoicated with. May be\nCPU, memory, storage, network, or node.\n:type hardware_type: String\n\n :param parallel: Optional.  Whether the script may be\nrun in parallel with other scripts. May be disabled to run by itself,\ninstance to run along scripts with the same name, or any to run along\nany script. 1 == True, 0 == False.\n:type parallel: Int\n\n :param timeout: Optional.  How long the script is allowed\nto run before failing.  0 gives unlimited time, defaults to 0.\n:type timeout: Int\n\n :param destructive: Optional.  Whether or not the\nscript overwrites data on any drive on the running system. Destructive\nscripts can not be run on deployed systems. Defaults to false.\n:type destructive: Boolean\n\n :param script: Optional.  The content of the script to\nbe uploaded in binary form. Note: this is not a normal parameter, but\na file upload. Its filename is ignored; MAAS will know it by the name\nyou pass to the request. Optionally you can ignore the name and script\nparameter in favor of uploading a single file as part of the request.\n:type script: String\n\n :param comment: Optional.  A comment about what this\nchange does.\n:type comment: String\n\n :param for_hardware: Optional.  A list of modalias, PCI\nIDs, and/or USB IDs the script will automatically run on. Must start\nwith ``modalias:``, ``pci:``, or ``usb:``.\n:type for_hardware: String\n\n :param may_reboot: Optional.  Whether or not the\nscript may reboot the system while running.\n:type may_reboot: Boolean\n\n :param recommission: Optional.  Whether builtin\ncommissioning scripts should be rerun after successfully running this\nscripts.\n:type recommission: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage custom scripts.\n\nThis functionality is only available to administrators.",
      "name": "NodeScriptsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/scripts/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/scripts/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "download",
          "doc": "Download script results\n\nDownload a compressed tar containing all results from the\ngiven system_id with the given id.\n\n\"id\" can either by the script set id, ``current-commissioning``,\n``current-testing``, or ``current-installation``.\n\n:param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``, or\n``storage``.  Defaults to all.\n:type hardware_type: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results that ran with a script name or tag.\n:type filters: String\n\n :param output: Optional.  Can be either ``combined``,\n``stdout``, ``stderr``, or ``all``. By default only the combined output\nis returned.\n:type output: String\n\n :param filetype: Optional.  Filetype to output, can be\n``txt`` or ``tar.xz``.\n:type filetype: String\n\n ",
          "op": "download",
          "restful": false
        },
        {
          "method": "GET",
          "name": "read",
          "doc": "Get specific script result\n\nView a set of test results for a given system_id and\nscript id.\n\n\"id\" can either by the script set id, ``current-commissioning``,\n``current-testing``, or ``current-installation``.\n\n:param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``, or\n``storage``.  Defaults to all.\n:type hardware_type: String\n\n :param include_output: Optional.  Include the base64\nencoded output from the script if any value for include_output is\ngiven.\n:type include_output: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results that ran with a script name, tag, or id.\n:type filters: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update specific script result\n\nUpdate a set of test results for a given system_id and\nscript id.\n\n\"id\" can either be the script set id, ``current-commissioning``,\n``current-testing``, or ``current-installation``.\n\n:param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``, or\n``storage``.  Defaults to all.\n:type hardware_type: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results that ran with a script name, tag, or id.\n:type filters: String\n\n :param include_output: Optional.  Include the base64\nencoded output from the script if any value for include_output is\ngiven.\n:type include_output: String\n\n :param suppressed: Optional.  Set whether or not\nthis script result should be suppressed using 'true' or 'false'.\n:type suppressed: Boolean\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete script results\n\nDelete script results from the given system_id with the\ngiven id.\n\n\"id\" can either by the script set id, ``current-commissioning``,\n``current-testing``, or ``current-installation``.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage node script results.",
      "name": "NodeScriptResultHandler",
      "params": [
        "system_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/results/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/results/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Return script results\n\nReturn a list of script results grouped by run for the\ngiven system_id.\n\n:param type: Optional.  Only return scripts with the\ngiven type. This can be ``commissioning``, ``testing``, or\n``installion``. Defaults to showing all.\n:type type: String\n\n :param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``, or\n``storage``.  Defaults to all.\n:type hardware_type: String\n\n :param include_output: Optional.  Include base64\nencoded output from the script. Note that any value of include_output\nwill include the encoded output from the script.\n:type include_output: String\n\n :param filters: Optional.  A comma seperated list to\nshow only results with a script name or tag.\n:type filters: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage node script results.",
      "name": "NodeScriptResultsHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/results/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/results/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Returns a resource pool.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Updates a resource pool's name or description.\n\nNote that any other given parameters are silently ignored.\n\n:param description: Optional.  A brief description of\n    the resource pool.\n:type description: String\n\n :param name: Optional.  The resource pool's new name.\n:type name: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Deletes a resource pool.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a resource pool.",
      "name": "ResourcePoolHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/resourcepool/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/resourcepool/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Get a listing of all resource pools.\n\nNote that there is always at least one resource pool: default.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Creates a new resource pool.\n\n:param name: Required.  The new resource pool's name.\n:type name: String\n\n :param description: Optional.  A brief description of\n    the new resource pool.\n:type description: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage resource pools.",
      "name": "ResourcePoolsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/resourcepools/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/resourcepools/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Return a specific node device\n\nReturn a node device with the given system_id and node\ndevice id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a node device\n\nDelete a node device with the given system_id and id.\nIf the device is still present in the system it will be recreated\nwhen the node is commissioned.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "View a specific NodeDevice from a Node.",
      "name": "NodeDeviceHandler",
      "params": [
        "system_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/devices/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/devices/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Return node devices\n\nReturn a list of devices attached to the node given by\na system_id.\n\n:param bus: Optional.  Only return devices attached to\nthe specified bus. Can be PCIE or USB. Defaults to all.\n:type bus: String\n\n :param hardware_type: Optional.  Only return scripts\nfor the given hardware type.  Can be ``node``, ``cpu``, ``memory``,\n``storage`` or ``gpu``.  Defaults to all.\n:type hardware_type: String\n\n :param vendor_id: Optional.  Only return devices which\nhave the specified vendor id.\n:type vendor_id: String\n\n :param product_id: Optional.  Only return devices which\nhave the specified product id.\n:type product_id: String\n\n :param vendor_name: Optional.  Only return devices\nwhich have the specified vendor_name.\n:type vendor_name: String\n\n :param product_name: Optional.  Only return devices\nwhich have the specified product_name.\n:type product_name: String\n\n :param commissioning_driver: Optional.  Only return\ndevices which use the specified driver when commissioning.\n:type commissioning_driver: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "View NodeDevices from a Node.",
      "name": "NodeDevicesHandler",
      "params": [
        "system_id"
      ],
      "path": "/MAAS/api/2.0/nodes/{system_id}/devices/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/nodes/{system_id}/devices/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a commissioning script.",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a commissioning script.",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a commissioning script.",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a custom commissioning script.\n\nThis functionality is only available to administrators.\n\nThis endpoint has been deprecated in favor of the node-script endpoint.",
      "name": "CommissioningScriptHandler",
      "params": [
        "name"
      ],
      "path": "/MAAS/api/2.0/commissioning-scripts/{name}",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/commissioning-scripts/{name}"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List commissioning scripts.",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a new commissioning script.\n\nEach commissioning script is identified by a unique name.\n\nBy convention the name should consist of a two-digit number, a dash,\nand a brief descriptive identifier consisting only of ASCII\ncharacters.  You don't need to follow this convention, but not doing\nso opens you up to risks w.r.t. encoding and ordering.  The name must\nnot contain any whitespace, quotes, or apostrophes.\n\nA commissioning machine will run each of the scripts in lexicographical\norder.  There are no promises about how non-ASCII characters are\nsorted, or even how upper-case letters are sorted relative to\nlower-case letters.  So where ordering matters, use unique numbers.\n\nScripts built into MAAS will have names starting with \"00-maas\" or\n\"99-maas\" to ensure that they run first or last, respectively.\n\nUsually a commissioning script will be just that, a script.  Ideally a\nscript should be ASCII text to avoid any confusion over encoding.  But\nin some cases a commissioning script might consist of a binary tool\nprovided by a hardware vendor.  Either way, the script gets passed to\nthe commissioning machine in the exact form in which it was uploaded.\n\n:param name: Unique identifying name for the script.  Names should\n    follow the pattern of \"25-burn-in-hard-disk\" (all ASCII, and with\n    numbers greater than zero, and generally no \"weird\" characters).\n:param content: A script file, to be uploaded in binary form.  Note:\n    this is not a normal parameter, but a file upload.  Its filename\n    is ignored; MAAS will know it by the name you pass to the request.",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage custom commissioning scripts.\n\nThis functionality is only available to administrators.\n\nThis endpoint has been deprecated in favor of the node-scripts endpoint.",
      "name": "CommissioningScriptsHandler",
      "params": [],
      "path": "/MAAS/api/2.0/commissioning-scripts/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/commissioning-scripts/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a boot source\n\nRead a boot source with the given id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a boot source\n\nUpdate a boot source with the given id.\n\n:param url: Optional.  The URL of the BootSource.\n:type url: String\n\n :param keyring_filename: Optional.  The path to the\nkeyring file for this BootSource.\n:type keyring_filename: String\n\n :param keyring_data: Optional.  The GPG keyring for\nthis BootSource, base64-encoded data.\n:type keyring_data: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a boot source\n\nDelete a boot source with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a boot source.",
      "name": "BootSourceHandler",
      "params": [
        "id"
      ],
      "path": "/MAAS/api/2.0/boot-sources/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-sources/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List boot sources\n\nList all boot sources.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a boot source\n\nCreate a new boot source. Note that in addition to\n``url``, you must supply either ``keyring_data`` or\n``keyring_filename``.\n\n:param url: Required.  The URL of the BootSource.\n:type url: String\n\n :param keyring_filename: Optional.  The path to the\nkeyring file for this BootSource.\n:type keyring_filename: String\n\n :param keyring_data: Optional.  The GPG keyring for\nthis BootSource, base64-encoded.\n:type keyring_data: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of boot sources.",
      "name": "BootSourcesHandler",
      "params": [],
      "path": "/MAAS/api/2.0/boot-sources/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-sources/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read a boot source selection\n\nRead a boot source selection with the given id.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update a boot-source selection\n\nUpdate a boot source selection with the given id.\n\n:param os: Optional.  The OS (e.g. ubuntu, centos) for\nwhich to import resources.\n:type os: String\n\n :param release: Optional.  The release for which to\nimport resources.\n:type release: String\n\n :param arches: Optional.  The list of architectures for\nwhich to import resources.\n:type arches: String\n\n :param subarches: Optional.  The list of\nsub-architectures for which to import resources.\n:type subarches: String\n\n :param labels: Optional.  The list of labels for which\nto import resources.\n:type labels: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete a boot source\n\nDelete a boot source with the given id.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a boot source selection.",
      "name": "BootSourceSelectionHandler",
      "params": [
        "boot_source_id",
        "id"
      ],
      "path": "/MAAS/api/2.0/boot-sources/{boot_source_id}/selections/{id}/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-sources/{boot_source_id}/selections/{id}/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List boot-source selections\n\nList all available boot-source selections.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Create a boot-source selection\n\nCreate a new boot source selection.\n\n:param os: Optional.  The OS (e.g. ubuntu, centos) for\nwhich to import resources.\n:type os: String\n\n :param release: Optional.  The release for which to\nimport resources.\n:type release: String\n\n :param arches: Optional.  The architecture list for\nwhich to import resources.\n:type arches: String\n\n :param subarches: Optional.  The subarchitecture list\nfor which to import resources.\n:type subarches: String\n\n :param labels: Optional.  The label lists for which to\nimport resources.\n:type labels: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the collection of boot source selections.",
      "name": "BootSourceSelectionsHandler",
      "params": [
        "boot_source_id"
      ],
      "path": "/MAAS/api/2.0/boot-sources/{boot_source_id}/selections/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/boot-sources/{boot_source_id}/selections/"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "Read license key\n\nRead a license key for the given operating sytem and\ndistro series.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "PUT",
          "name": "update",
          "doc": "Update license key\n\nUpdate a license key for the given operating system and\ndistro series.\n\n:param license_key: Optional.  License key for\nosystem/distro_series combo.\n:type license_key: String\n\n ",
          "op": null,
          "restful": true
        },
        {
          "method": "DELETE",
          "name": "delete",
          "doc": "Delete license key\n\nDelete license key for the given operation system and\ndistro series.\n\n",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage a license key.",
      "name": "LicenseKeyHandler",
      "params": [
        "osystem",
        "distro_series"
      ],
      "path": "/MAAS/api/2.0/license-key/{osystem}/{distro_series}",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/license-key/{osystem}/{distro_series}"
    },
    {
      "actions": [
        {
          "method": "GET",
          "name": "read",
          "doc": "List license keys\n\nList all available license keys.\n\n",
          "op": null,
          "restful": true
        },
        {
          "method": "POST",
          "name": "create",
          "doc": "Define a license key\n\nDefine a license key.\n\n:param osystem: Required.  Operating system that the key\nbelongs to.\n:type osystem: String\n\n :param distro_series: Required.  OS release that the key\nbelongs to.\n:type distro_series: String\n\n :param license_key: Required.  License key for\nosystem/distro_series combo.\n:type license_key: String\n\n ",
          "op": null,
          "restful": true
        }
      ],
      "doc": "Manage the license keys.",
      "name": "LicenseKeysHandler",
      "params": [],
      "path": "/MAAS/api/2.0/license-keys/",
      "uri": "http://192.0.2.1:5240/MAAS/api/2.0/license-keys/"
    }
  ],
  "hash": "619b227d9034753b26767ac3ddc18ed14d5b9a38"
}
